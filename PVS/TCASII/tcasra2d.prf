(tcasra2d
 (RA2D_interval_TCC1 0
  (RA2D_interval_TCC1-1 nil 3571073012
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis))
   nil
   (RA2D_interval subtype "vectors_2D.sqv(tcasra2d.v)"
    "nonzero_real")))
 (RA2D_interval_TCC2 0
  (RA2D_interval_TCC2-1 nil 3571073012
   ("" (skosimp*)
    (("" (assert)
      (("" (lemma "sqv_eq_0")
        (("" (inst?)
          (("" (assert)
            (("" (lemma "a_gt_0_discr_ge_0")
              (("" (inst?)
                (("" (inst - "0") (("" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (a_gt_0_discr_ge_0 formula-decl nil quadratic reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sq_0 formula-decl nil sq reals)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D vectors)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (/= const-decl "boolean" notequal nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors))
   nil
   (RA2D_interval subtype
    "(number_fields.-)(vectors_2D.sqv(tcasra2d.s), sq.sq(tcasra2d.DMOD))"
    "{c: reals.real | reals.>=(quadratic.discr(vectors_2D.sqv(tcasra2d.v), number_fields.*(2, (vectors_2D.*(tcasra2d.s, tcasra2d.v))), c), 0)}")))
 (RA2D_interval_TCC3 0
  (RA2D_interval_TCC3-2 nil 3571073479
   ("" (skosimp*)
    (("" (lemma "sqv_eq_0")
      (("" (inst?)
        (("" (assert) (("" (replaces -1) (("" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((sqv_eq_0 formula-decl nil vectors_2D vectors)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil))
   nil (RA2D_interval subtype "tcasra2d.aa" "nonzero_real"))
  (RA2D_interval_TCC3-1 nil 3571073012 ("" (subtype-tcc) nil nil) nil
   nil (RA2D_interval subtype "tcasra2d.aa" "nonzero_real")))
 (RA2D_interval_TCC4 0
  (RA2D_interval_TCC4-1 nil 3571073012
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis))
   nil
   (RA2D_interval subtype "tcasra2d.cc"
    "{c: reals.real | reals.>=(quadratic.discr(tcasra2d.aa, tcasra2d.bb, c), 0)}")))
 (RA2D_interval_TCC5 0
  (RA2D_interval_TCC5-1 nil 3571073012
   ("" (skosimp*) (("" (replaces -7) (("" (assert) nil nil)) nil)) nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors))
   nil
   (RA2D_interval subtype "tcasra2d.v"
    "{nzv | reals.>=(horizontal[tcasra2d.DMOD].Delta(tcasra2d.s, horizontal.nzv), 0)}")))
 (RA2D_interval_TCC6 0
  (RA2D_interval_TCC6-1 nil 3571073012
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis))
   nil
   (RA2D_interval subtype "tcasra2d.cc"
    "{c: reals.real | reals.>=(quadratic.discr(tcasra2d.aa, tcasra2d.bb, c), 0)}")))
 (RA2D_interval_def 0
  (RA2D_interval_def-2 nil 3574440924
   ("" (skeep)
    (("" (skoletin 1)
      (("" (skeep)
        (("" (expand "RA2D_interval")
          ((""
            (case "NOT FORALL (b1,b2:bool):LET b3 = b1,b4 = b2 IN (b1 OR b2) IFF (b4 OR b3)")
            (("1" (hide-all-but 1) (("1" (grind) nil nil)) nil)
             ("2"
              (inst - "(so-si)*(vo-vi)>=0" "discr(sqv(vo - vi),
                                 2 * ((so - si) * (vo - vi)) + TAU * sqv(vo - vi),
                                 sqv(so - si) - sq(DMOD) +
                                  TAU * ((so - si) * (vo - vi)))<0")
              (("1" (skoletin -1)
                (("1" (skoletin -1)
                  (("1" (replace -1)
                    (("1" (hide -1)
                      (("1" (replaces -1)
                        (("1" (replaces -1)
                          (("1" (lift-if)
                            (("1" (lift-if)
                              (("1"
                                (lift-if)
                                (("1"
                                  (lift-if)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (replaces -3)
                                            (("1"
                                              (lemma
                                               "horizontal_RA_at_rewrite")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 2)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replaces
                                                                   -1)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (split -)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replaces -2)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "horizontal_RA_at_rewrite")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replaces
                                                               -1)
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (lemma
                                                                   "Delta_ge_0_2[DMOD]")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "vo-vi"
                                                                     "so-si")
                                                                    (("1"
                                                                      (ground)
                                                                      (("1"
                                                                        (hide
                                                                         -2)
                                                                        (("1"
                                                                          (lemma
                                                                           "horizontal_sep_outside_Theta[DMOD]")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "vo-vi"
                                                                             "so-si"
                                                                             "t")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "horizontal_sep_outside_Theta[DMOD]")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "vo-vi"
                                                                                       "so-si"
                                                                                       "0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Theta_D")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "root2b_root")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "root2b_root")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "discr2b_discr")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "Delta_discr2b[DMOD]")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "Delta_discr2b[DMOD]")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (replaces
                                                                                 -1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst
                                                                         +
                                                                         "t")
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (name
                                                                   "vv"
                                                                   "vo-vi")
                                                                  (("2"
                                                                    (name
                                                                     "ss"
                                                                     "so-si")
                                                                    (("2"
                                                                      (replaces
                                                                       -1)
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "sqv_eq_0")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "Theta_D_horizontal_dir[DMOD]")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "1"
                                                                                     "ss"
                                                                                     "vv")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "Delta_ge_0_2[DMOD]")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "vv"
                                                                                           "ss")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (split
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (name
                                                                                                     "r2d2"
                                                                                                     "Theta_D[DMOD](ss,vv,1)")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "Theta_D"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "root2b_root")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 (-1
                                                                                                                  -2))
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   2
                                                                                                                   "sqv(vv)")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      -4
                                                                                                                      2))
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (-2
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (name
                                                                   "vv"
                                                                   "vo-vi")
                                                                  (("3"
                                                                    (name
                                                                     "ss"
                                                                     "so-si")
                                                                    (("3"
                                                                      (replaces
                                                                       -1)
                                                                      (("3"
                                                                        (replaces
                                                                         -1)
                                                                        (("3"
                                                                          (lemma
                                                                           "sqv_eq_0")
                                                                          (("3"
                                                                            (inst?)
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (lemma
                                                                                 "horizontal_sep_outside_Theta[DMOD]")
                                                                                (("3"
                                                                                  (inst
                                                                                   -
                                                                                   "vv"
                                                                                   "ss"
                                                                                   "t")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (lemma
                                                                                       "Delta_ge_0_2[DMOD]")
                                                                                      (("3"
                                                                                        (inst
                                                                                         -
                                                                                         "vv"
                                                                                         "ss")
                                                                                        (("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("3"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "Theta_D[DMOD](ss,vv,-1)>0")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "Theta_D_horizontal_dir[DMOD]")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "-1"
                                                                                                         "ss"
                                                                                                         "vv")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (mult-by
                                                                                                             -2
                                                                                                             "sqv(vv)")
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                -2
                                                                                                                2))
                                                                                                              (("1"
                                                                                                                (grind
                                                                                                                 :exclude
                                                                                                                 "Theta_D")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "Theta_D"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "root2b_root")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (name
                                                                   "vv"
                                                                   "vo-vi")
                                                                  (("4"
                                                                    (replaces
                                                                     -1)
                                                                    (("4"
                                                                      (name
                                                                       "ss"
                                                                       "so-si")
                                                                      (("4"
                                                                        (replaces
                                                                         -1)
                                                                        (("4"
                                                                          (lemma
                                                                           "sqv_eq_0")
                                                                          (("4"
                                                                            (inst?)
                                                                            (("4"
                                                                              (assert)
                                                                              (("4"
                                                                                (lemma
                                                                                 "horizontal_sep_outside_Theta[DMOD]")
                                                                                (("4"
                                                                                  (inst
                                                                                   -
                                                                                   "vv"
                                                                                   "ss"
                                                                                   "t")
                                                                                  (("4"
                                                                                    (assert)
                                                                                    (("4"
                                                                                      (lemma
                                                                                       "Delta_ge_0_2[DMOD]")
                                                                                      (("4"
                                                                                        (inst
                                                                                         -
                                                                                         "vv"
                                                                                         "ss")
                                                                                        (("4"
                                                                                          (flatten)
                                                                                          (("4"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("4"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split)
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "sqv(vv)")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "sqv(vv)"
                                                                                                       "t"
                                                                                                       "Theta_D[DMOD](ss,vv,-1)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "Theta_D_horizontal_dir[DMOD]")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "-1 "
                                                                                                             "ss"
                                                                                                             "vv")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  -2
                                                                                                                  2))
                                                                                                                (("1"
                                                                                                                  (grind
                                                                                                                   :exclude
                                                                                                                   "Theta_D")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "Theta_D"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "root2b_root")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("5"
                                                                  (name
                                                                   "vv"
                                                                   "vo-vi")
                                                                  (("5"
                                                                    (replaces
                                                                     -1)
                                                                    (("5"
                                                                      (name
                                                                       "ss"
                                                                       "so-si")
                                                                      (("5"
                                                                        (replaces
                                                                         -1)
                                                                        (("5"
                                                                          (lemma
                                                                           "sqv_eq_0")
                                                                          (("5"
                                                                            (inst?)
                                                                            (("5"
                                                                              (assert)
                                                                              (("5"
                                                                                (lemma
                                                                                 "horizontal_sep_outside_Theta[DMOD]")
                                                                                (("5"
                                                                                  (inst
                                                                                   -
                                                                                   "vv"
                                                                                   "ss"
                                                                                   "t")
                                                                                  (("5"
                                                                                    (assert)
                                                                                    (("5"
                                                                                      (lemma
                                                                                       "Delta_ge_0_2[DMOD]")
                                                                                      (("5"
                                                                                        (inst
                                                                                         -
                                                                                         "vv"
                                                                                         "ss")
                                                                                        (("5"
                                                                                          (flatten)
                                                                                          (("5"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("5"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "Theta_D[DMOD](ss,vv,-1)>0")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "horizontal_sep_outside_Theta[DMOD]")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "vv"
                                                                                                         "ss"
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "Theta_D"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "root2b_root")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (hide 2)
                                                  (("2"
                                                    (lemma
                                                     "horizontal_RA_at_rewrite")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replaces -1)
                                                          (("2"
                                                            (name
                                                             "vv"
                                                             "vo-vi")
                                                            (("2"
                                                              (replaces
                                                               -1)
                                                              (("2"
                                                                (name
                                                                 "ss"
                                                                 "so-si")
                                                                (("2"
                                                                  (replaces
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (case
                                                                       "sqv(vv) = 0")
                                                                      (("1"
                                                                        (lemma
                                                                         "sqv_eq_0")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -3)
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "vv = zero")
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -2)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "(1+T<=t AND t<=0)")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (hide
                                                                                               1)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "Delta_ge_0_2[DMOD]")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "vv"
                                                                                                     "ss")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (copy
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "Theta_D_on_D[DMOD]")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "-1"
                                                                                                                   "vv"
                                                                                                                   "ss")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "a_gt_0_discr_ge_0")
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "Theta_D[DMOD](ss,vv,-1)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "sqv_add")
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "sqv_scal")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "Theta_D_horizontal_dir[DMOD]")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "-1"
                                                                                                                                         "ss"
                                                                                                                                         "vv")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "((ss + Theta_D[DMOD](ss, vv, -1) * vv) * vv)<=0")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (mult-by
                                                                                                                                                 -1
                                                                                                                                                 "TAU")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      -3
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (grind
                                                                                                                                                       :exclude
                                                                                                                                                       "Theta_D")
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "t")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "a_gt_0_discr_ge_0")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "t")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-4
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (lemma
                                                                                                   "horizontal_sep_outside_Theta[DMOD]")
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "vv"
                                                                                                     "ss"
                                                                                                     "t")
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (lemma
                                                                                                         "Delta_ge_0_2[DMOD]")
                                                                                                        (("3"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "vv"
                                                                                                           "ss")
                                                                                                          (("3"
                                                                                                            (flatten)
                                                                                                            (("3"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("3"
                                                                                                                (split
                                                                                                                 -)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "horizontal_sep_outside_Theta[DMOD]")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "vv"
                                                                                                                         "ss"
                                                                                                                         "0")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "NOT Theta_D[DMOD](ss,vv,-1)>0")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (mult-by
                                                                                                                               -1
                                                                                                                               "sqv(vv)")
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "Theta_D_horizontal_dir[DMOD]")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "-1"
                                                                                                                                   "ss"
                                                                                                                                   "vv")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-1
                                                                                                                                        -2
                                                                                                                                        -6))
                                                                                                                                      (("2"
                                                                                                                                        (grind
                                                                                                                                         :exclude
                                                                                                                                         "Theta_D")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "t")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (split
                                                                                     -)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -2)
                                                                                          (("1"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "quadratic_ge_0")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "t")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "NOT (ss+t*vv)*vv>=0")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "TAU = 0")
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "quadratic_le_0")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (mult-by
                                                                                                             2
                                                                                                             "TAU")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  -2
                                                                                                                  1
                                                                                                                  2))
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (invoke
                                                                                                           (name
                                                                                                            "rr1"
                                                                                                            "%1")
                                                                                                           (!
                                                                                                            1
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "rr1 <= horizontal_tca(ss,vv)")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "NOT t < horizontal_tca(ss,vv)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (mult-by
                                                                                                                   -1
                                                                                                                   "sqv(vv)")
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "horizontal_tca_dot_zero")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "vv"
                                                                                                                       "ss")
                                                                                                                      (("2"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          -2
                                                                                                                          -5
                                                                                                                          3))
                                                                                                                        (("2"
                                                                                                                          (grind
                                                                                                                           :exclude
                                                                                                                           "horizontal_tca")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "root"
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (cross-mult
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (div-by
                                                                                                                       -1
                                                                                                                       "2")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "horizontal_tca"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (cross-mult
                                                                                                                           1)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "horizontal_sep_outside_Theta[DMOD]")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "vv"
                                                                                                 "ss"
                                                                                                 "t")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (lemma
                                                                                               "quadratic_gt_0")
                                                                                              (("3"
                                                                                                (inst?)
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "t")
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (hide
                                                                                                         +)
                                                                                                        (("3"
                                                                                                          (grind
                                                                                                           :exclude
                                                                                                           "Delta")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("4"
                                                                                              (lemma
                                                                                               "Theta_D_horizontal_dir[DMOD]")
                                                                                              (("4"
                                                                                                (inst
                                                                                                 -
                                                                                                 "1"
                                                                                                 "ss"
                                                                                                 "vv")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  (("4"
                                                                                                    (mult-by
                                                                                                     1
                                                                                                     "sqv(vv)")
                                                                                                    (("4"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -3
                                                                                                        1))
                                                                                                      (("4"
                                                                                                        (grind
                                                                                                         :exclude
                                                                                                         "Theta_D")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("5"
                                                                                              (lemma
                                                                                               "horizontal_sep_outside_Theta[DMOD]")
                                                                                              (("5"
                                                                                                (inst
                                                                                                 -
                                                                                                 "vv"
                                                                                                 "ss"
                                                                                                 "t")
                                                                                                (("5"
                                                                                                  (assert)
                                                                                                  (("5"
                                                                                                    (lemma
                                                                                                     "Theta_D_horizontal_dir[DMOD]")
                                                                                                    (("5"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "-1"
                                                                                                       "ss"
                                                                                                       "vv")
                                                                                                      (("5"
                                                                                                        (assert)
                                                                                                        (("5"
                                                                                                          (case
                                                                                                           "t < Theta_D[DMOD](ss,vv,-1)")
                                                                                                          (("1"
                                                                                                            (mult-by
                                                                                                             -1
                                                                                                             "sqv(vv)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  -2
                                                                                                                  1))
                                                                                                                (("1"
                                                                                                                  (grind
                                                                                                                   :exclude
                                                                                                                   "Theta_D")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("6"
                                                                                              (lemma
                                                                                               "horizontal_sep_outside_Theta[DMOD]")
                                                                                              (("6"
                                                                                                (inst
                                                                                                 -
                                                                                                 "vv"
                                                                                                 "ss"
                                                                                                 "t")
                                                                                                (("6"
                                                                                                  (assert)
                                                                                                  (("6"
                                                                                                    (lemma
                                                                                                     "quadratic_le_0")
                                                                                                    (("6"
                                                                                                      (inst?)
                                                                                                      (("6"
                                                                                                        (assert)
                                                                                                        (("6"
                                                                                                          (flatten)
                                                                                                          (("6"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("6"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  1))
                                                                                                                (("1"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (invoke
                                                                                                                 (case
                                                                                                                  "Theta_D[DMOD](ss,vv,-1) <= %1")
                                                                                                                 (!
                                                                                                                  1
                                                                                                                  2))
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "quadratic_le_0")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       _
                                                                                                                       _
                                                                                                                       _
                                                                                                                       "Theta_D[DMOD](ss,vv,-1)")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "Theta_D_on_D[DMOD]")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "-1"
                                                                                                                               "vv"
                                                                                                                               "ss")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "Theta_D_horizontal_dir[DMOD]")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "-1"
                                                                                                                                     "ss"
                                                                                                                                     "vv")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "NOT (ss+Theta_D[DMOD](ss,vv,-1)*vv)*vv<=0")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (mult-by
                                                                                                                                           -1
                                                                                                                                           "TAU")
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -3
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (grind
                                                                                                                                               :exclude
                                                                                                                                               "Theta_D")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "Delta_ge_0_2[DMOD]")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "vv"
                                                                                           "ss")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT FORALL (t:real): sqv(ss+t*vv)>sq(DMOD)")
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "t!1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "t")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (ground)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "quadratic_le_0")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    1))
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "quadratic_le_0")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    1))
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (case
                                                                                                             "t > horizontal_tca(ss,vv) AND horizontal_tca(ss,vv)>=root(sqv(vv), 2 * (ss * vv) + TAU * sqv(vv),
                                                                                                                    sqv(ss) - sq(DMOD) + TAU * (ss * vv), 1)")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (split)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "horizontal_tca"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (cross-mult
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (1
                                                                                                                      2))
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "horizontal_tca")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "root")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "FORALL (dpack:real): 1*dpack = dpack")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (invoke
                                                                                                                               (case
                                                                                                                                "2*%1 >= %2")
                                                                                                                               (!
                                                                                                                                1
                                                                                                                                1
                                                                                                                                1)
                                                                                                                               (!
                                                                                                                                1
                                                                                                                                2
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   -1
                                                                                                                                   "1/sqv(vv)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (cross-mult
                                                                                                                                     1)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (invoke
                                                                                                                                     (case
                                                                                                                                      "TAU*sqv(vv) >= sqrt(%1)")
                                                                                                                                     (!
                                                                                                                                      4
                                                                                                                                      1))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "sq_ge")
                                                                                                                                        (("2"
                                                                                                                                          (inst?)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "discr"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "sq_plus")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (1
                                                                                                                                                            3))
                                                                                                                                                          (("2"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("4"
                                                                                                            (lemma
                                                                                                             "quadratic_le_0")
                                                                                                            (("4"
                                                                                                              (inst?)
                                                                                                              (("4"
                                                                                                                (assert)
                                                                                                                (("4"
                                                                                                                  (hide-all-but
                                                                                                                   (-1
                                                                                                                    1))
                                                                                                                  (("4"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (assert)
                  (("2" (lemma "sqv_eq_0")
                    (("2" (inst?)
                      (("2" (assert)
                        (("2" (replace -1)
                          (("2" (assert)
                            (("2" (lemma "horizontal_RA_at_rewrite")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (replace -2)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (replaces -1)
                                        (("2"
                                          (grind :exclude ("sqv" "sq"))
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (RA2D_interval const-decl "[real, real]" tcasra2d nil)
    (horizontal_RA_at const-decl "bool" horizontal_RA nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (TAU formal-const-decl "nnreal" tcasra2d nil)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (discr const-decl "real" quadratic reals)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (* const-decl "real" vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (a_gt_0_discr_ge_0 formula-decl nil quadratic reals)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (dot_scal_canon formula-decl nil vectors_2D vectors)
    (sqv_add formula-decl nil vectors_2D vectors)
    (Theta_D_on_D formula-decl nil horizontal ACCoRD)
    (div_mult_pos_gt2 formula-decl nil extra_real_props nil)
    (sq_ge formula-decl nil sq reals)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_plus formula-decl nil sq reals)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (quadratic_gt_0 formula-decl nil quadratic reals)
    (quadratic_ge_0 formula-decl nil quadratic reals)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (horizontal_tca_dot_zero formula-decl nil definitions ACCoRD)
    (both_sides_div1 formula-decl nil real_props nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (div_mult_pos_le2 formula-decl nil real_props nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (div_cancel3 formula-decl nil real_props nil)
    (root const-decl "real" quadratic reals)
    (minus_real_is_real application-judgement "real" reals nil)
    (quadratic_le_0 formula-decl nil quadratic reals)
    (both_sides_times_pos_ge1 formula-decl nil real_props nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (Theta_D_horizontal_dir formula-decl nil horizontal ACCoRD)
    (both_sides_times_pos_le1 formula-decl nil real_props nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (discr2b const-decl "real" quadratic_2b reals)
    (det const-decl "real" det_2D vectors)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (Delta_ge_0_2 formula-decl nil horizontal ACCoRD)
    (horizontal_sep_outside_Theta formula-decl nil horizontal ACCoRD)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (discr2b_discr formula-decl nil quadratic_2b reals)
    (root2b_root formula-decl nil quadratic_2b reals)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign reals)
    (scal_0 formula-decl nil vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (horizontal_RA_at_rewrite formula-decl nil horizontal_RA nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   nil)
  (RA2D_interval_def-1 nil 3571076127
   ("" (skeep)
    (("" (skoletin 1)
      (("" (skeep)
        (("" (expand "RA2D_interval")
          ((""
            (case "NOT FORALL (b1,b2:bool):LET b3 = b1,b4 = b2 IN (b1 OR b2) IFF (b4 OR b3)")
            (("1" (hide-all-but 1) (("1" (grind) nil nil)) nil)
             ("2"
              (inst - "(so-si)*(vo-vi)>=0" "discr(sqv(vo - vi),
                         2 * ((so - si) * (vo - vi)) + TAU * sqv(vo - vi),
                         sqv(so - si) - sq(DMOD) +
                          TAU * ((so - si) * (vo - vi)))<0")
              (("1" (skoletin -1)
                (("1" (skoletin -1)
                  (("1" (replace -1)
                    (("1" (hide -1)
                      (("1" (replaces -1)
                        (("1" (replaces -1)
                          (("1" (lift-if)
                            (("1" (lift-if)
                              (("1"
                                (lift-if)
                                (("1"
                                  (lift-if)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (replaces -3)
                                            (("1"
                                              (lemma
                                               "horizontal_RA_at_rewrite")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 2)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replaces
                                                                   -1)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (split -)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replaces -2)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "horizontal_RA_at_rewrite")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replaces
                                                               -1)
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (lemma
                                                                   "Delta_ge_0_2[DMOD]")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "vo-vi"
                                                                     "so-si")
                                                                    (("1"
                                                                      (ground)
                                                                      (("1"
                                                                        (hide
                                                                         -2)
                                                                        (("1"
                                                                          (lemma
                                                                           "horizontal_sep_outside_Theta[DMOD]")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "vo-vi"
                                                                             "so-si"
                                                                             "t")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "horizontal_sep_outside_Theta[DMOD]")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "vo-vi"
                                                                                       "so-si"
                                                                                       "0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Theta_D")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "root2b_root")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "root2b_root")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "discr2b_discr")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "Delta_discr2b[DMOD]")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "Delta_discr2b[DMOD]")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (replaces
                                                                                 -1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst
                                                                         +
                                                                         "t")
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (name
                                                                   "vv"
                                                                   "vo-vi")
                                                                  (("2"
                                                                    (name
                                                                     "ss"
                                                                     "so-si")
                                                                    (("2"
                                                                      (replaces
                                                                       -1)
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "sqv_eq_0")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "Theta_D_horizontal_dir[DMOD]")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "1"
                                                                                     "ss"
                                                                                     "vv")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "Delta_ge_0_2[DMOD]")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "vv"
                                                                                           "ss")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (split
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (name
                                                                                                     "r2d2"
                                                                                                     "Theta_D[DMOD](ss,vv,1)")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "Theta_D"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "root2b_root")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 (-1
                                                                                                                  -2))
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   2
                                                                                                                   "sqv(vv)")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      -4
                                                                                                                      2))
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (-2
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (name
                                                                   "vv"
                                                                   "vo-vi")
                                                                  (("3"
                                                                    (name
                                                                     "ss"
                                                                     "so-si")
                                                                    (("3"
                                                                      (replaces
                                                                       -1)
                                                                      (("3"
                                                                        (replaces
                                                                         -1)
                                                                        (("3"
                                                                          (lemma
                                                                           "sqv_eq_0")
                                                                          (("3"
                                                                            (inst?)
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (lemma
                                                                                 "horizontal_sep_outside_Theta[DMOD]")
                                                                                (("3"
                                                                                  (inst
                                                                                   -
                                                                                   "vv"
                                                                                   "ss"
                                                                                   "t")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (lemma
                                                                                       "Delta_ge_0_2[DMOD]")
                                                                                      (("3"
                                                                                        (inst
                                                                                         -
                                                                                         "vv"
                                                                                         "ss")
                                                                                        (("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("3"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "Theta_D[DMOD](ss,vv,-1)>0")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "Theta_D_horizontal_dir[DMOD]")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "-1"
                                                                                                         "ss"
                                                                                                         "vv")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (mult-by
                                                                                                             -2
                                                                                                             "sqv(vv)")
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                -2
                                                                                                                2))
                                                                                                              (("1"
                                                                                                                (grind
                                                                                                                 :exclude
                                                                                                                 "Theta_D")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "Theta_D"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "root2b_root")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (name
                                                                   "vv"
                                                                   "vo-vi")
                                                                  (("4"
                                                                    (replaces
                                                                     -1)
                                                                    (("4"
                                                                      (name
                                                                       "ss"
                                                                       "so-si")
                                                                      (("4"
                                                                        (replaces
                                                                         -1)
                                                                        (("4"
                                                                          (lemma
                                                                           "sqv_eq_0")
                                                                          (("4"
                                                                            (inst?)
                                                                            (("4"
                                                                              (assert)
                                                                              (("4"
                                                                                (lemma
                                                                                 "horizontal_sep_outside_Theta[DMOD]")
                                                                                (("4"
                                                                                  (inst
                                                                                   -
                                                                                   "vv"
                                                                                   "ss"
                                                                                   "t")
                                                                                  (("4"
                                                                                    (assert)
                                                                                    (("4"
                                                                                      (lemma
                                                                                       "Delta_ge_0_2[DMOD]")
                                                                                      (("4"
                                                                                        (inst
                                                                                         -
                                                                                         "vv"
                                                                                         "ss")
                                                                                        (("4"
                                                                                          (flatten)
                                                                                          (("4"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("4"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split)
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "sqv(vv)")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "sqv(vv)"
                                                                                                       "t"
                                                                                                       "Theta_D[DMOD](ss,vv,-1)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "Theta_D_horizontal_dir[DMOD]")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "-1 "
                                                                                                             "ss"
                                                                                                             "vv")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  -2
                                                                                                                  2))
                                                                                                                (("1"
                                                                                                                  (grind
                                                                                                                   :exclude
                                                                                                                   "Theta_D")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "Theta_D"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "root2b_root")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("5"
                                                                  (name
                                                                   "vv"
                                                                   "vo-vi")
                                                                  (("5"
                                                                    (replaces
                                                                     -1)
                                                                    (("5"
                                                                      (name
                                                                       "ss"
                                                                       "so-si")
                                                                      (("5"
                                                                        (replaces
                                                                         -1)
                                                                        (("5"
                                                                          (lemma
                                                                           "sqv_eq_0")
                                                                          (("5"
                                                                            (inst?)
                                                                            (("5"
                                                                              (assert)
                                                                              (("5"
                                                                                (lemma
                                                                                 "horizontal_sep_outside_Theta[DMOD]")
                                                                                (("5"
                                                                                  (inst
                                                                                   -
                                                                                   "vv"
                                                                                   "ss"
                                                                                   "t")
                                                                                  (("5"
                                                                                    (assert)
                                                                                    (("5"
                                                                                      (lemma
                                                                                       "Delta_ge_0_2[DMOD]")
                                                                                      (("5"
                                                                                        (inst
                                                                                         -
                                                                                         "vv"
                                                                                         "ss")
                                                                                        (("5"
                                                                                          (flatten)
                                                                                          (("5"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("5"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "Theta_D[DMOD](ss,vv,-1)>0")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "horizontal_sep_outside_Theta[DMOD]")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "vv"
                                                                                                         "ss"
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "Theta_D"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "root2b_root")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (hide 2)
                                                  (("2"
                                                    (lemma
                                                     "horizontal_RA_at_rewrite")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replaces -1)
                                                          (("2"
                                                            (name
                                                             "vv"
                                                             "vo-vi")
                                                            (("2"
                                                              (replaces
                                                               -1)
                                                              (("2"
                                                                (name
                                                                 "ss"
                                                                 "so-si")
                                                                (("2"
                                                                  (replaces
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (case
                                                                       "sqv(vv) = 0")
                                                                      (("1"
                                                                        (lemma
                                                                         "sqv_eq_0")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -3)
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "vv = zero")
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -2)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "(T<=t AND t<=0)")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (hide
                                                                                               1)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "Delta_ge_0_2[DMOD]")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "vv"
                                                                                                     "ss")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (copy
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "Theta_D_on_D[DMOD]")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "-1"
                                                                                                                   "vv"
                                                                                                                   "ss")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "a_gt_0_discr_ge_0")
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "Theta_D[DMOD](ss,vv,-1)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "sqv_add")
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "sqv_scal")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "Theta_D_horizontal_dir[DMOD]")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "-1"
                                                                                                                                         "ss"
                                                                                                                                         "vv")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "((ss + Theta_D[DMOD](ss, vv, -1) * vv) * vv)<=0")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (mult-by
                                                                                                                                                 -1
                                                                                                                                                 "TAU")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      -3
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (grind
                                                                                                                                                       :exclude
                                                                                                                                                       "Theta_D")
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "t")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "a_gt_0_discr_ge_0")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "t")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-4
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (lemma
                                                                                                   "horizontal_sep_outside_Theta[DMOD]")
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "vv"
                                                                                                     "ss"
                                                                                                     "t")
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (lemma
                                                                                                         "Delta_ge_0_2[DMOD]")
                                                                                                        (("3"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "vv"
                                                                                                           "ss")
                                                                                                          (("3"
                                                                                                            (flatten)
                                                                                                            (("3"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("3"
                                                                                                                (split
                                                                                                                 -)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "horizontal_sep_outside_Theta[DMOD]")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "vv"
                                                                                                                         "ss"
                                                                                                                         "0")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "NOT Theta_D[DMOD](ss,vv,-1)>0")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (mult-by
                                                                                                                               -1
                                                                                                                               "sqv(vv)")
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "Theta_D_horizontal_dir[DMOD]")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "-1"
                                                                                                                                   "ss"
                                                                                                                                   "vv")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-1
                                                                                                                                        -2
                                                                                                                                        -6))
                                                                                                                                      (("2"
                                                                                                                                        (grind
                                                                                                                                         :exclude
                                                                                                                                         "Theta_D")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "t")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (split
                                                                                     -)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -2)
                                                                                          (("1"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "quadratic_ge_0")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "t")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "NOT (ss+t*vv)*vv>=0")
                                                                                                        (("1"
                                                                                                          (mult-by
                                                                                                           1
                                                                                                           "TAU")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                -2
                                                                                                                1))
                                                                                                              (("1"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (invoke
                                                                                                           (name
                                                                                                            "rr1"
                                                                                                            "%1")
                                                                                                           (!
                                                                                                            1
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "rr1 <= horizontal_tca(ss,vv)")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "NOT t < horizontal_tca(ss,vv)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (mult-by
                                                                                                                   -1
                                                                                                                   "sqv(vv)")
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "horizontal_tca_dot_zero")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "vv"
                                                                                                                       "ss")
                                                                                                                      (("2"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          -2
                                                                                                                          -5
                                                                                                                          3))
                                                                                                                        (("2"
                                                                                                                          (grind
                                                                                                                           :exclude
                                                                                                                           "horizontal_tca")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "root"
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (cross-mult
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (div-by
                                                                                                                       -1
                                                                                                                       "2")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "horizontal_tca"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (cross-mult
                                                                                                                           1)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "horizontal_sep_outside_Theta[DMOD]")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "vv"
                                                                                                 "ss"
                                                                                                 "t")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (lemma
                                                                                               "quadratic_gt_0")
                                                                                              (("3"
                                                                                                (inst?)
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "t")
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (hide
                                                                                                         +)
                                                                                                        (("3"
                                                                                                          (grind
                                                                                                           :exclude
                                                                                                           "Delta")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("4"
                                                                                              (lemma
                                                                                               "Theta_D_horizontal_dir[DMOD]")
                                                                                              (("4"
                                                                                                (inst
                                                                                                 -
                                                                                                 "1"
                                                                                                 "ss"
                                                                                                 "vv")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  (("4"
                                                                                                    (mult-by
                                                                                                     1
                                                                                                     "sqv(vv)")
                                                                                                    (("4"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -3
                                                                                                        1))
                                                                                                      (("4"
                                                                                                        (grind
                                                                                                         :exclude
                                                                                                         "Theta_D")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("5"
                                                                                              (lemma
                                                                                               "horizontal_sep_outside_Theta[DMOD]")
                                                                                              (("5"
                                                                                                (inst
                                                                                                 -
                                                                                                 "vv"
                                                                                                 "ss"
                                                                                                 "t")
                                                                                                (("5"
                                                                                                  (assert)
                                                                                                  (("5"
                                                                                                    (lemma
                                                                                                     "Theta_D_horizontal_dir[DMOD]")
                                                                                                    (("5"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "-1"
                                                                                                       "ss"
                                                                                                       "vv")
                                                                                                      (("5"
                                                                                                        (assert)
                                                                                                        (("5"
                                                                                                          (case
                                                                                                           "t < Theta_D[DMOD](ss,vv,-1)")
                                                                                                          (("1"
                                                                                                            (mult-by
                                                                                                             -1
                                                                                                             "sqv(vv)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  -2
                                                                                                                  1))
                                                                                                                (("1"
                                                                                                                  (grind
                                                                                                                   :exclude
                                                                                                                   "Theta_D")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("6"
                                                                                              (lemma
                                                                                               "horizontal_sep_outside_Theta[DMOD]")
                                                                                              (("6"
                                                                                                (inst
                                                                                                 -
                                                                                                 "vv"
                                                                                                 "ss"
                                                                                                 "t")
                                                                                                (("6"
                                                                                                  (assert)
                                                                                                  (("6"
                                                                                                    (lemma
                                                                                                     "quadratic_le_0")
                                                                                                    (("6"
                                                                                                      (inst?)
                                                                                                      (("6"
                                                                                                        (assert)
                                                                                                        (("6"
                                                                                                          (flatten)
                                                                                                          (("6"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("6"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  1))
                                                                                                                (("1"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (invoke
                                                                                                                 (case
                                                                                                                  "Theta_D[DMOD](ss,vv,-1) <= %1")
                                                                                                                 (!
                                                                                                                  1
                                                                                                                  2))
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "quadratic_le_0")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       _
                                                                                                                       _
                                                                                                                       _
                                                                                                                       "Theta_D[DMOD](ss,vv,-1)")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "Theta_D_on_D[DMOD]")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "-1"
                                                                                                                               "vv"
                                                                                                                               "ss")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "Theta_D_horizontal_dir[DMOD]")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "-1"
                                                                                                                                     "ss"
                                                                                                                                     "vv")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "NOT (ss+Theta_D[DMOD](ss,vv,-1)*vv)*vv<=0")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (mult-by
                                                                                                                                           -1
                                                                                                                                           "TAU")
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -3
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (grind
                                                                                                                                               :exclude
                                                                                                                                               "Theta_D")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "Delta_ge_0_2[DMOD]")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "vv"
                                                                                           "ss")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT FORALL (t:real): sqv(ss+t*vv)>sq(DMOD)")
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "t!1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "t")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (ground)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "quadratic_le_0")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    1))
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "quadratic_le_0")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    1))
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (case
                                                                                                             "t > horizontal_tca(ss,vv) AND horizontal_tca(ss,vv)>=root(sqv(vv), 2 * (ss * vv) + TAU * sqv(vv),
                                                              sqv(ss) - sq(DMOD) + TAU * (ss * vv), 1)")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (split)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "horizontal_tca"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (cross-mult
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (1
                                                                                                                      2))
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "horizontal_tca")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "root")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "FORALL (dpack:real): 1*dpack = dpack")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (invoke
                                                                                                                               (case
                                                                                                                                "2*%1 >= %2")
                                                                                                                               (!
                                                                                                                                1
                                                                                                                                1
                                                                                                                                1)
                                                                                                                               (!
                                                                                                                                1
                                                                                                                                2
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   -1
                                                                                                                                   "1/sqv(vv)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (cross-mult
                                                                                                                                     1)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (invoke
                                                                                                                                     (case
                                                                                                                                      "TAU*sqv(vv) >= sqrt(%1)")
                                                                                                                                     (!
                                                                                                                                      4
                                                                                                                                      1))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "sq_ge")
                                                                                                                                        (("2"
                                                                                                                                          (inst?)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "discr"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "sq_plus")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (1
                                                                                                                                                            3))
                                                                                                                                                          (("2"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("4"
                                                                                                            (lemma
                                                                                                             "quadratic_le_0")
                                                                                                            (("4"
                                                                                                              (inst?)
                                                                                                              (("4"
                                                                                                                (assert)
                                                                                                                (("4"
                                                                                                                  (hide-all-but
                                                                                                                   (-1
                                                                                                                    1))
                                                                                                                  (("4"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (assert)
                  (("2" (lemma "sqv_eq_0")
                    (("2" (inst?)
                      (("2" (assert)
                        (("2" (replace -1)
                          (("2" (assert)
                            (("2" (lemma "horizontal_RA_at_rewrite")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (replace -2)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (replaces -1)
                                        (("2"
                                          (grind :exclude ("sqv" "sq"))
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (Vector type-eq-decl nil vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (discr const-decl "real" quadratic reals)
    (* const-decl "real" vectors_2D vectors)
    (a_gt_0_discr_ge_0 formula-decl nil quadratic reals)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (dot_scal_right formula-decl nil vectors_2D vectors)
    (sqv_add formula-decl nil vectors_2D vectors)
    (Theta_D_on_D formula-decl nil horizontal ACCoRD)
    (sq_plus formula-decl nil sq reals)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_ge formula-decl nil sq reals)
    (quadratic_le_0 formula-decl nil quadratic reals)
    (quadratic_gt_0 formula-decl nil quadratic reals)
    (quadratic_ge_0 formula-decl nil quadratic reals)
    (root const-decl "real" quadratic reals)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (horizontal_tca_dot_zero formula-decl nil definitions ACCoRD)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (Theta_D_horizontal_dir formula-decl nil horizontal ACCoRD)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (discr2b const-decl "real" quadratic_2b reals)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (Delta_ge_0_2 formula-decl nil horizontal ACCoRD)
    (horizontal_sep_outside_Theta formula-decl nil horizontal ACCoRD)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (discr2b_discr formula-decl nil quadratic_2b reals)
    (root2b_root formula-decl nil quadratic_2b reals)
    (Sign type-eq-decl nil sign reals)
    (scal_0 formula-decl nil vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors))
   shostak))
 (RA2D_entry_le_Theta_TCC1 0
  (RA2D_entry_le_Theta_TCC1-1 nil 3606564269 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (/= const-decl "boolean" notequal nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil (RA2D_entry_le_Theta subtype "tcasra2d.aa" "nonzero_real")))
 (RA2D_entry_le_Theta_TCC2 0
  (RA2D_entry_le_Theta_TCC2-1 nil 3606564269 ("" (subtype-tcc) nil nil)
   ((comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (discr const-decl "real" quadratic reals)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (/= const-decl "boolean" notequal nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   nil
   (RA2D_entry_le_Theta subtype "tcasra2d.v"
    "{nzv | reals.>=(horizontal[tcasra2d.DMOD].Delta(tcasra2d.s, horizontal.nzv), 0)}")))
 (RA2D_entry_le_Theta 0
  (RA2D_entry_le_Theta-1 nil 3606564285
   ("" (skeep)
    (("" (skoletin 1)
      (("" (skoletin 1)
        (("" (skoletin 1)
          (("" (skoletin 1)
            (("" (skoletin 1)
              (("" (flatten)
                (("" (expand "Theta_D")
                  (("" (rewrite "root2b_root")
                    (("1" (expand "root")
                      (("1"
                        (case "-bb - sqrt(discr(aa, bb, cc)) <=
       -(2 * (s * v)) -
         sqrt(discr(sqv(v), 2 * (s * v), sqv(s) - sq(DMOD)))
      ")
                        (("1" (mult-by -1 "1/sqv(v)")
                          (("1" (assert) nil nil)
                           ("2" (hide 2)
                            (("2" (hide-all-but (-5 1))
                              (("2" (grind) nil nil)) nil))
                            nil)
                           ("3" (cross-mult 1) nil nil))
                          nil)
                         ("2" (hide 2)
                          (("2"
                            (case "TAU * sqv(v)+ sqrt(discr(aa, bb, cc)) >=
       sqrt(discr(sqv(v), 2 * (s * v), sqv(s) - sq(DMOD)))")
                            (("1" (assert) nil nil)
                             ("2" (hide 2)
                              (("2"
                                (case
                                 "sqrt(discr(aa, bb, cc)) >=
       sqrt(discr(sqv(v), 2 * (s * v), sqv(s) - sq(DMOD)))")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (rewrite "sq_ge" 1 :dir rl)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (rewrite "sq_sqrt")
                                        (("2"
                                          (rewrite "sq_sqrt")
                                          (("1"
                                            (expand "discr" 1)
                                            (("1"
                                              (replace -6 1)
                                              (("1"
                                                (replace -7 1)
                                                (("1"
                                                  (replace -8 1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "sq" +)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (hide-all-but (-4 1))
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (hide-all-but (-4 1))
                          (("3" (grind) nil nil)) nil)
                         ("4" (propax) nil nil))
                        nil))
                      nil)
                     ("2" (hide-all-but (-4 1)) (("2" (grind) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D vectors)
    (TAU formal-const-decl "nnreal" tcasra2d nil)
    (< const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (/= const-decl "boolean" notequal nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (discr const-decl "real" quadratic reals)
    (Delta const-decl "real" horizontal ACCoRD)
    (zero const-decl "Vector" vectors_2D vectors)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (root const-decl "real" quadratic reals)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (<= const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (discr2b const-decl "real" quadratic_2b reals)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_ge formula-decl nil sq reals)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (det const-decl "real" det_2D vectors)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (root2b_root formula-decl nil quadratic_2b reals)
    (nzreal nonempty-type-eq-decl nil reals nil))
   shostak))
 (ra_tau_def 0
  (ra_tau_def-2 nil 3719761750
   ("" (case "TAU = 0")
    (("1" (expand "ra_tau?")
      (("1" (expand "ra_tau_at")
        (("1" (expand "horizontal_ra?")
          (("1" (expand "horizontal_RA_at")
            (("1" (expand "horizontal_RA")
              (("1" (replaces -1)
                (("1" (assert)
                  (("1" (skeep)
                    (("1" (iff)
                      (("1" (ground)
                        (("1" (skeep)
                          (("1" (inst + "t")
                            (("1" (assert)
                              (("1"
                                (ground)
                                (("1"
                                  (rewrite "sq_le" 1 :dir rl)
                                  (("1"
                                    (rewrite "sq_norm")
                                    (("1"
                                      (assert)
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (rewrite "sq_le" 2 :dir rl)
                                  (("2"
                                    (rewrite "sq_norm")
                                    (("2"
                                      (hide-all-but (-3 2))
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skeep)
                          (("2" (inst-cp + "t")
                            (("2" (assert)
                              (("2"
                                (split +)
                                (("1"
                                  (hide-all-but (-2 1))
                                  (("1"
                                    (typepred "sqv(vo-vi)")
                                    (("1"
                                      (mult-by -1 "B")
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case
                                   "NOT (so + t * vo - (si + t * vi)) * (vo - vi) >= 0")
                                  (("1"
                                    (hide-all-but (1 2))
                                    (("1" (grind) nil nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (name
                                       "tt"
                                       "horizontal_tca(so-si,vo-vi)")
                                      (("1"
                                        (case "NOT (so-si)*(vo-vi)<0")
                                        (("1"
                                          (hide-all-but (-4 1))
                                          (("1"
                                            (typepred "sqv(vo-vi)")
                                            (("1"
                                              (mult-by -1 "B")
                                              (("1" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (case
                                             "NOT (B<=tt AND tt<=t)")
                                            (("1"
                                              (hide (2 3))
                                              (("1"
                                                (split)
                                                (("1"
                                                  (lemma
                                                   "horizontal_tca_dot_zero")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (replace -3)
                                                      (("1"
                                                        (hide-all-but
                                                         (-1 -6 1))
                                                        (("1"
                                                          (mult-by
                                                           1
                                                           "sqv(vo-vi)")
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replaces
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "horizontal_tca_dot_zero")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace -3)
                                                        (("2"
                                                          (mult-by
                                                           1
                                                           "sqv(vo-vi)")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1 -4 1))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (inst + "tt")
                                                (("1"
                                                  (lemma
                                                   "horizontal_tca_dot_zero")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "horizontal_tca_min")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "vo-vi"
                                                           "so-si"
                                                           "t")
                                                          (("1"
                                                            (rewrite
                                                             "horizontal_sq_dtca_eq")
                                                            (("1"
                                                              (replace
                                                               -6)
                                                              (("1"
                                                                (rewrite
                                                                 "sq_le"
                                                                 -8
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (rewrite
                                                                   "sq_norm")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (hide-all-but
                                                                       (-1
                                                                        -8
                                                                        2))
                                                                      (("1"
                                                                        (grind
                                                                         :exclude
                                                                         "sqv")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (replaces -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (assert)
                                  (("3"
                                    (split -)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (rewrite "sq_le" -2 :dir rl)
                                        (("1"
                                          (rewrite "sq_norm")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (hide-all-but (-2 1))
                                              (("1"
                                                (grind :exclude "sqv")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (splash -1)
                                          (("1"
                                            (expand "tau_current")
                                            (("1"
                                              (lemma
                                               "negreal_div_negreal_is_posreal")
                                              (("1"
                                                (inst?)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (splash 1)
                                                  (("1"
                                                    (hide-all-but
                                                     (-1 1 4))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (1 4))
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (rewrite
                                             "sq_le"
                                             -1
                                             :dir
                                             rl)
                                            (("2"
                                              (rewrite "sq_norm")
                                              (("2"
                                                (hide-all-but (-1 2))
                                                (("2"
                                                  (grind
                                                   :exclude
                                                   "sqv")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (case "NOT TAU > 0")
      (("1" (assert) nil nil)
       ("2" (hide 1)
        (("2" (skeep)
          (("2" (expand "ra_tau?")
            (("2" (expand "horizontal_ra?")
              (("2" (iff)
                (("2" (copy -2)
                  (("2" (hide -3)
                    (("2" (label "Bdot" -1)
                      (("2" (ground)
                        (("1" (skeep -1)
                          (("1" (expand "ra_tau_at")
                            (("1" (inst + "t")
                              (("1"
                                (lemma "horizontal_RA_at_rewrite")
                                (("1"
                                  (inst?)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (assert)
                                      (("1" (ground) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skeep -1)
                          (("2" (lemma "horizontal_RA_at_rewrite")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (assert)
                                  (("2"
                                    (case
                                     "sqv(so - si + t * (vo - vi)) <= sq(DMOD)")
                                    (("1"
                                      (hide -2)
                                      (("1"
                                        (expand "horizontal_RA_at")
                                        (("1"
                                          (expand "horizontal_RA")
                                          (("1"
                                            (ground)
                                            (("1"
                                              (expand "ra_tau_at")
                                              (("1"
                                                (name "ss" "so-si")
                                                (("1"
                                                  (label "ssname" -1)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide "ssname")
                                                      (("1"
                                                        (name
                                                         "vv"
                                                         "vo-vi")
                                                        (("1"
                                                          (label
                                                           "vvname"
                                                           -1)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (hide
                                                               "vvname")
                                                              (("1"
                                                                (name
                                                                 "tca2"
                                                                 "-(ss*vv)/sqv(vv)")
                                                                (("1"
                                                                  (case
                                                                   "tca2 <= t AND tca2 > 0")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (case
                                                                       "Delta[DMOD](ss,vv)>=0")
                                                                      (("1"
                                                                        (name
                                                                         "td"
                                                                         "Theta_D[DMOD](ss, vv, -1)")
                                                                        (("1"
                                                                          (case
                                                                           "sqv(ss + B * vv) < sq(DMOD)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst
                                                                               +
                                                                               "B")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (copy
                                                                                   "Bdot")
                                                                                  (("1"
                                                                                    (copy
                                                                                     -1)
                                                                                    (("1"
                                                                                      (mult-by
                                                                                       -1
                                                                                       "TAU")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "sqv(vv)")
                                                                                          (("1"
                                                                                            (mult-by
                                                                                             -1
                                                                                             "B")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -3
                                                                                                1))
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "B <= td")
                                                                            (("1"
                                                                              (case
                                                                               "td <= tca2")
                                                                              (("1"
                                                                                (name
                                                                                 "tt"
                                                                                 "(tca2+td)/2")
                                                                                (("1"
                                                                                  (inst
                                                                                   +
                                                                                   "tt")
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT (ss + tt * vv) * vv < 0")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (hide
                                                                                         2)
                                                                                        (("1"
                                                                                          (case
                                                                                           "(ss + tca2*vv)*vv=0")
                                                                                          (("1"
                                                                                            (case
                                                                                             "(ss + td*vv)*vv<0")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -2
                                                                                                1))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "tt")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "dot_add_left")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "dot_add_left")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "dot_add_left")
                                                                                                      (("1"
                                                                                                        (invoke
                                                                                                         (name
                                                                                                          "eg1"
                                                                                                          "%1")
                                                                                                         (!
                                                                                                          -1
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (replaces
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (invoke
                                                                                                             (name
                                                                                                              "eg2"
                                                                                                              "%1")
                                                                                                             (!
                                                                                                              -2
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (invoke
                                                                                                                 (case
                                                                                                                  "%1 = (%2 + %3)/2")
                                                                                                                 (!
                                                                                                                  1
                                                                                                                  1)
                                                                                                                 (!
                                                                                                                  -1
                                                                                                                  1)
                                                                                                                 (!
                                                                                                                  -2
                                                                                                                  1))
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "eg1")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "eg2")
                                                                                                                        (("2"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "td"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "Theta_D")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "root2b")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "Delta_discr2b[DMOD]")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "vv"
                                                                                                         "ss")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "dot_add_left")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "minus_div2"
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "sqv")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "sqrt(Delta[DMOD](ss,vv))>0")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (case
                                                                                                                             "NOT ss*vv < 0")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "sqv(vv)")
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   -1
                                                                                                                                   "B")
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      "Bdot"
                                                                                                                                      1))
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "NOT Delta[DMOD](ss,vv)=0")
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "sq_gt_0")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "sqrt(Delta[DMOD](ss,vv))")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "Delta_eq_0_eq_tca[DMOD]")
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "vv = zero")
                                                                                                                                        (("1"
                                                                                                                                          (replaces
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "vv"
                                                                                                                                           "ss"
                                                                                                                                           "tt")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               -)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "NOT sqv(ss+t*vv)<=sq(DMOD)")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "sqv")
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "horizontal_tca_min")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "vv"
                                                                                                                                                             "ss"
                                                                                                                                                             "t")
                                                                                                                                                            (("2"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-1
                                                                                                                                                                -2
                                                                                                                                                                4))
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "horizontal_sq_dtca_eq")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "sqv")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "NOT td = tca2")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "td"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (copy
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "Delta_discr2b[DMOD]")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "vv"
                                                                                                                                                           "ss")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (case
                                                                                                                                                     "NOT tt = tca2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "horizontal_tca_dot_zero")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "vv"
                                                                                                                                                             "ss")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "sqv(ss+tca2*vv)<=sq(DMOD)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "sqv")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "horizontal_tca_min")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "vv"
                                                                                                                                                                       "ss"
                                                                                                                                                                       "t")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "horizontal_sq_dtca_eq")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT tca2 = horizontal_tca(ss,vv)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "horizontal_tca"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1
                                                                                                                                                                               :dir
                                                                                                                                                                               rl)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "sqv")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "tca2"
                                                                                               +)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "dot_add_left")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "sqv")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "NOT ss*vv < 0")
                                                                                        (("1"
                                                                                          (hide
                                                                                           3)
                                                                                          (("1"
                                                                                            (copy
                                                                                             "Bdot")
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "sqv(vv)")
                                                                                              (("1"
                                                                                                (mult-by
                                                                                                 -1
                                                                                                 "B")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (-1
                                                                                                    -2
                                                                                                    1))
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (case
                                                                                             "sqv(ss + tt * vv) <= sq(DMOD)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (mult-by
                                                                                                 -3
                                                                                                 "TAU")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               3)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "horizontal_los_inside_Theta[DMOD]")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "vv"
                                                                                                   "ss"
                                                                                                   "tt")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "tt"
                                                                                                         +)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "td"
                                                                                                           +)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "Theta_D"
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "root2b")
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "Delta_discr2b[DMOD]")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "tca2"
                                                                                                                         +)
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "minus_div2"
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "sqrt(Delta[DMOD](ss,vv))/sqv(vv) > 0")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (cross-mult
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "vv = zero")
                                                                                                                                          (("1"
                                                                                                                                            (replaces
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "NOT Delta[DMOD](ss,vv)=0")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     "NOT td = tca2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (copy
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           "Delta_discr2b[DMOD]")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "vv"
                                                                                                                                                               "ss")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "td"
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "Theta_D"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "root2b"
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -1
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (case
                                                                                                                                                         "NOT tt = tca2")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "NOT tca2 = horizontal_tca(ss,vv)")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "horizontal_tca"
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "horizontal_tca_dot_zero")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (cross-mult
                                                                                                                                         2)
                                                                                                                                        (("2"
                                                                                                                                          (name-replace
                                                                                                                                           "DD"
                                                                                                                                           "Delta[DMOD](ss, vv)")
                                                                                                                                          (("2"
                                                                                                                                            (field
                                                                                                                                             2)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (rewrite
                                                                                                                                 "minus_div2"
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "div_distributes"
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "sqrt(Delta[DMOD](ss,vv))/sqv(vv) > 0")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (cross-mult
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (ground)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "NOT Delta[DMOD](ss,vv)=0")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "NOT td = tca2")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "td"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "Theta_D"
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "root2b"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -3
                                                                                                                                                           :dir
                                                                                                                                                           rl)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (case
                                                                                                                                                   "NOT tt = tca2")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (case
                                                                                                                                                       "NOT tca2 = horizontal_tca(ss,vv)")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "horizontal_tca"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "horizontal_tca_dot_zero")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (name-replace
                                                                                                                                           "DD"
                                                                                                                                           "Delta[DMOD](ss, vv)")
                                                                                                                                          (("2"
                                                                                                                                            (field
                                                                                                                                             2)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 3)
                                                                                (("2"
                                                                                  (expand
                                                                                   "td"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "Theta_D"
                                                                                     +)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "Delta_discr2b[DMOD]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "root2b")
                                                                                            (("2"
                                                                                              (replaces
                                                                                               -1
                                                                                               :dir
                                                                                               rl)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "minus_div2"
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "sqrt(Delta[DMOD](ss,vv))/sqv(vv) > 0")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "tca2"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (cross-mult
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (ground)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "vv = zero")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "sqv_eq_0")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (lemma
                                                                               "horizontal_los_inside_Theta[DMOD]")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "Theta_D_horizontal_dir[DMOD]")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "1"
                                                                                         "ss"
                                                                                         "vv")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "sqv(vv)")
                                                                                            (("2"
                                                                                              (mult-by
                                                                                               -1
                                                                                               "B - Theta_D[DMOD](ss,vv,1)")
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -2
                                                                                                  "Bdot"))
                                                                                                (("2"
                                                                                                  (grind
                                                                                                   :exclude
                                                                                                   "Theta_D")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "Delta_ge_0_2[DMOD]")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "vv"
                                                                             "ss")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "t")
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (replaces
                                                                                 -1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (case
                                                                       "(ss + tca2*vv)*vv = 0")
                                                                      (("1"
                                                                        (split
                                                                         +)
                                                                        (("1"
                                                                          (case
                                                                           "sqv(vv)>0")
                                                                          (("1"
                                                                            (mult-by
                                                                             -1
                                                                             "tca2-t")
                                                                            (("1"
                                                                              (case
                                                                               "(so + t * vo - (si + t * vi)) * vv = (ss + t*vv)*vv")
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -2
                                                                                    -4))
                                                                                  (("1"
                                                                                    (expand
                                                                                     "sqv")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "dot_add_left")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "dot_add_left")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "ss*vv = -tca2*(vv*vv)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "vv")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "ss")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "sqv_eq_0")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "tca2"
                                                                           1)
                                                                          (("2"
                                                                            (cross-mult
                                                                             1)
                                                                            (("2"
                                                                              (ground)
                                                                              (("1"
                                                                                (typepred
                                                                                 "sqv(vv)")
                                                                                (("1"
                                                                                  (mult-by
                                                                                   -1
                                                                                   "B")
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      1
                                                                                      "Bdot"))
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "sqv_eq_0")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "tca2"
                                                                           1)
                                                                          (("2"
                                                                            (rewrite
                                                                             "dot_add_left")
                                                                            (("2"
                                                                              (expand
                                                                               "sqv")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (lemma
                                                                     "sqv_eq_0")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (inst + "t")
                                              (("2"
                                                (expand "ra_tau_at")
                                                (("2"
                                                  (case
                                                   "NOT (so-si)*(vo-vi)<0")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 3)
                                                      (("1"
                                                        (typepred
                                                         "sqv(vo-vi)")
                                                        (("1"
                                                          (mult-by
                                                           -1
                                                           "B")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1
                                                              "Bdot"
                                                              1))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (invoke
                                                       (case "%1 = 0")
                                                       (! 1 1))
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (split +)
                                                        (("1"
                                                          (hide -)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "NOT ((so - si + t * (vo - vi)) * (vo - vi)) < 0")
                                                            (("1"
                                                              (hide-all-but
                                                               (1 3 4))
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (mult-by
                                                               -1
                                                               "TAU")
                                                              (("2"
                                                                (hide
                                                                 (-2
                                                                  -3
                                                                  "Bdot"
                                                                  2
                                                                  3))
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand "tau_current")
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (case
                                                   "NOT (so - si) * (vo - vi) < 0")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 3)
                                                      (("1"
                                                        (typepred
                                                         "sqv(vo-vi)")
                                                        (("1"
                                                          (mult-by
                                                           -1
                                                           "t")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1 +))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (cross-mult -2)
                                                      (("2"
                                                        (inst + "t")
                                                        (("2"
                                                          (expand
                                                           "ra_tau_at")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split +)
                                                              (("1"
                                                                (hide
                                                                 -)
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (mult-by
                                                                 2
                                                                 "TAU")
                                                                (("2"
                                                                  (hide-all-but
                                                                   (-2
                                                                    -3
                                                                    +))
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (inst + "t")
                                        (("2"
                                          (expand "ra_tau_at")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((div_mult_neg_le1 formula-decl nil real_props nil)
    (both_sides_times_pos_ge1 formula-decl nil real_props nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (Theta_D_horizontal_dir formula-decl nil horizontal ACCoRD)
    (det const-decl "real" det_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (scal_neg_1 formula-decl nil vectors_2D vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (times_div1 formula-decl nil real_props nil)
    (div_mult_pos_neg_gt1 formula-decl nil extra_real_props nil)
    (div_distributes formula-decl nil real_props nil)
    (horizontal_los_inside_Theta formula-decl nil horizontal ACCoRD)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (minus_div2 formula-decl nil real_props nil)
    (Delta_eq_0_eq_tca formula-decl nil horizontal ACCoRD)
    (sqrt_0 formula-decl nil sqrt reals)
    (sq_gt_0 formula-decl nil sq reals)
    (sq_sqrt formula-decl nil sqrt reals)
    (root2b const-decl "real" quadratic_2b reals)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (Sign type-eq-decl nil sign reals)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (Delta_ge_0_2 formula-decl nil horizontal ACCoRD)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (horizontal_RA_at_rewrite formula-decl nil horizontal_RA nil)
    (ra_tau? const-decl "bool" tcasra2d nil)
    (horizontal_ra? const-decl "bool" tcasra2d nil)
    (horizontal_RA const-decl "bool" horizontal_RA nil)
    (scal_0 formula-decl nil vectors_2D vectors)
    (dot_zero_left formula-decl nil vectors_2D vectors)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (negreal_div_negreal_is_posreal judgement-tcc nil real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (horizontal_sq_dtca_eq formula-decl nil definitions ACCoRD)
    (horizontal_tca_min formula-decl nil definitions ACCoRD)
    (horizontal_tca_dot_zero formula-decl nil definitions ACCoRD)
    (both_sides_times_pos_le1 formula-decl nil real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (< const-decl "bool" reals nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (* const-decl "Vector" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq_le formula-decl nil sq reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sq_norm formula-decl nil vectors_2D vectors)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (TRUE const-decl "bool" booleans nil)
    (horizontal_RA_at const-decl "bool" horizontal_RA nil)
    (ra_tau_at const-decl "bool" tcasra2d nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (TAU formal-const-decl "nnreal" tcasra2d nil))
   nil)
  (ra_tau_def-1 nil 3547899083
   ("" (case "TAU = 0")
    (("1" (expand "ra_tau?")
      (("1" (expand "ra_tau_at")
        (("1" (expand "horizontal_ra?")
          (("1" (expand "horizontal_RA_at")
            (("1" (expand "horizontal_RA")
              (("1" (replaces -1)
                (("1" (assert)
                  (("1" (skeep)
                    (("1" (iff)
                      (("1" (ground)
                        (("1" (skeep)
                          (("1" (inst + "t")
                            (("1" (assert)
                              (("1"
                                (ground)
                                (("1"
                                  (rewrite "sq_le" 1 :dir rl)
                                  (("1"
                                    (rewrite "sq_norm")
                                    (("1"
                                      (assert)
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (rewrite "sq_le" 2 :dir rl)
                                  (("2"
                                    (rewrite "sq_norm")
                                    (("2"
                                      (hide-all-but (-3 2))
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skeep)
                          (("2" (inst-cp + "t")
                            (("2" (assert)
                              (("2"
                                (split +)
                                (("1"
                                  (hide-all-but (-2 1))
                                  (("1"
                                    (typepred "sqv(vo-vi)")
                                    (("1"
                                      (mult-by -1 "B")
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case
                                   "NOT (so + t * vo - (si + t * vi)) * (vo - vi) >= 0")
                                  (("1"
                                    (hide-all-but (1 2))
                                    (("1" (grind) nil nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (name
                                       "tt"
                                       "horizontal_tca(so-si,vo-vi)")
                                      (("1"
                                        (case "NOT (so-si)*(vo-vi)<0")
                                        (("1"
                                          (hide-all-but (-4 1))
                                          (("1"
                                            (typepred "sqv(vo-vi)")
                                            (("1"
                                              (mult-by -1 "B")
                                              (("1" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (case
                                             "NOT (B<=tt AND tt<=t)")
                                            (("1"
                                              (hide (2 3))
                                              (("1"
                                                (split)
                                                (("1"
                                                  (lemma
                                                   "horizontal_tca_dot_zero")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (replace -3)
                                                      (("1"
                                                        (hide-all-but
                                                         (-1 -6 1))
                                                        (("1"
                                                          (mult-by
                                                           1
                                                           "sqv(vo-vi)")
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replaces
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "horizontal_tca_dot_zero")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace -3)
                                                        (("2"
                                                          (mult-by
                                                           1
                                                           "sqv(vo-vi)")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1 -4 1))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (inst + "tt")
                                                (("1"
                                                  (lemma
                                                   "horizontal_tca_dot_zero")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "horizontal_tca_min")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "vo-vi"
                                                           "so-si"
                                                           "t")
                                                          (("1"
                                                            (rewrite
                                                             "horizontal_sq_dtca_eq")
                                                            (("1"
                                                              (replace
                                                               -6)
                                                              (("1"
                                                                (rewrite
                                                                 "sq_le"
                                                                 -8
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (rewrite
                                                                   "sq_norm")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (hide-all-but
                                                                       (-1
                                                                        -8
                                                                        2))
                                                                      (("1"
                                                                        (grind
                                                                         :exclude
                                                                         "sqv")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (replaces -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (assert)
                                  (("3"
                                    (split -)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (rewrite "sq_le" -2 :dir rl)
                                        (("1"
                                          (rewrite "sq_norm")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (hide-all-but (-2 1))
                                              (("1"
                                                (grind :exclude "sqv")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (splash -1)
                                          (("1"
                                            (expand "tau_current")
                                            (("1"
                                              (lemma
                                               "negreal_div_negreal_is_posreal")
                                              (("1"
                                                (inst?)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (splash 1)
                                                  (("1"
                                                    (hide-all-but
                                                     (-1 1 4))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (1 4))
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (rewrite
                                             "sq_le"
                                             -1
                                             :dir
                                             rl)
                                            (("2"
                                              (rewrite "sq_norm")
                                              (("2"
                                                (hide-all-but (-1 2))
                                                (("2"
                                                  (grind
                                                   :exclude
                                                   "sqv")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (case "NOT TAU > 0")
      (("1" (assert) nil nil)
       ("2" (hide 1)
        (("2" (skeep)
          (("2" (expand "ra_tau?")
            (("2" (expand "horizontal_ra?")
              (("2" (iff)
                (("2" (copy -2)
                  (("2" (hide -3)
                    (("2" (label "Bdot" -1)
                      (("2" (ground)
                        (("1" (skeep -1)
                          (("1" (expand "ra_tau_at")
                            (("1" (inst + "t")
                              (("1"
                                (lemma "horizontal_RA_at_rewrite")
                                (("1"
                                  (inst?)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (assert)
                                      (("1" (ground) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skeep -1)
                          (("2" (lemma "horizontal_RA_at_rewrite")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (assert)
                                  (("2"
                                    (case
                                     "sqv(so - si + t * (vo - vi)) <= sq(DMOD)")
                                    (("1"
                                      (hide -2)
                                      (("1"
                                        (expand "horizontal_RA_at")
                                        (("1"
                                          (expand "horizontal_RA")
                                          (("1"
                                            (ground)
                                            (("1"
                                              (expand "ra_tau_at")
                                              (("1"
                                                (name "ss" "so-si")
                                                (("1"
                                                  (label "ssname" -1)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide "ssname")
                                                      (("1"
                                                        (name
                                                         "vv"
                                                         "vo-vi")
                                                        (("1"
                                                          (label
                                                           "vvname"
                                                           -1)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (hide
                                                               "vvname")
                                                              (("1"
                                                                (name
                                                                 "tca2"
                                                                 "-(ss*vv)/sqv(vv)")
                                                                (("1"
                                                                  (case
                                                                   "tca2 <= t AND tca2 > 0")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (case
                                                                       "Delta[DMOD](ss,vv)>=0")
                                                                      (("1"
                                                                        (name
                                                                         "td"
                                                                         "Theta_D[DMOD](ss, vv, -1)")
                                                                        (("1"
                                                                          (case
                                                                           "sqv(ss + B * vv) < sq(DMOD)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst
                                                                               +
                                                                               "B")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (copy
                                                                                   "Bdot")
                                                                                  (("1"
                                                                                    (copy
                                                                                     -1)
                                                                                    (("1"
                                                                                      (mult-by
                                                                                       -1
                                                                                       "TAU")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "sqv(vv)")
                                                                                          (("1"
                                                                                            (mult-by
                                                                                             -1
                                                                                             "B")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -3
                                                                                                1))
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "B <= td")
                                                                            (("1"
                                                                              (case
                                                                               "td <= tca2")
                                                                              (("1"
                                                                                (name
                                                                                 "tt"
                                                                                 "(tca2+td)/2")
                                                                                (("1"
                                                                                  (inst
                                                                                   +
                                                                                   "tt")
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT (ss + tt * vv) * vv < 0")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (hide
                                                                                         2)
                                                                                        (("1"
                                                                                          (case
                                                                                           "(ss + tca2*vv)*vv=0")
                                                                                          (("1"
                                                                                            (case
                                                                                             "(ss + td*vv)*vv<0")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -2
                                                                                                1))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "tt")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "dot_add_left")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "dot_add_left")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "dot_add_left")
                                                                                                      (("1"
                                                                                                        (invoke
                                                                                                         (name
                                                                                                          "eg1"
                                                                                                          "%1")
                                                                                                         (!
                                                                                                          -1
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (replaces
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (invoke
                                                                                                             (name
                                                                                                              "eg2"
                                                                                                              "%1")
                                                                                                             (!
                                                                                                              -2
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (invoke
                                                                                                                 (case
                                                                                                                  "%1 = (%2 + %3)/2")
                                                                                                                 (!
                                                                                                                  1
                                                                                                                  1)
                                                                                                                 (!
                                                                                                                  -1
                                                                                                                  1)
                                                                                                                 (!
                                                                                                                  -2
                                                                                                                  1))
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "eg1")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "eg2")
                                                                                                                        (("2"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "td"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "Theta_D")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "root2b")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "Delta_discr2b[DMOD]")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "vv"
                                                                                                         "ss")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "dot_add_left")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "minus_div2"
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "sqv")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "sqrt(Delta[DMOD](ss,vv))>0")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (case
                                                                                                                             "NOT ss*vv < 0")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "sqv(vv)")
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   -1
                                                                                                                                   "B")
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      "Bdot"
                                                                                                                                      1))
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "NOT Delta[DMOD](ss,vv)=0")
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "sq_gt_0")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "sqrt(Delta[DMOD](ss,vv))")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "Delta_eq_0_eq_tca[DMOD]")
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "vv = zero")
                                                                                                                                        (("1"
                                                                                                                                          (replaces
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "vv"
                                                                                                                                           "ss"
                                                                                                                                           "tt")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               -)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "NOT sqv(ss+t*vv)<=sq(DMOD)")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "sqv")
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "horizontal_tca_min")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "vv"
                                                                                                                                                             "ss"
                                                                                                                                                             "t")
                                                                                                                                                            (("2"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-1
                                                                                                                                                                -2
                                                                                                                                                                4))
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "horizontal_sq_dtca_eq")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "sqv")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "NOT td = tca2")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "td"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (copy
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "Delta_discr2b[DMOD]")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "vv"
                                                                                                                                                           "ss")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (case
                                                                                                                                                     "NOT tt = tca2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "horizontal_tca_dot_zero")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "vv"
                                                                                                                                                             "ss")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "sqv(ss+tca2*vv)<=sq(DMOD)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "sqv")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "horizontal_tca_min")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "vv"
                                                                                                                                                                       "ss"
                                                                                                                                                                       "t")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "horizontal_sq_dtca_eq")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT tca2 = horizontal_tca(ss,vv)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "horizontal_tca"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1
                                                                                                                                                                               :dir
                                                                                                                                                                               rl)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "sqv")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "tca2"
                                                                                               +)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "dot_add_left")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "sqv")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "NOT ss*vv < 0")
                                                                                        (("1"
                                                                                          (hide
                                                                                           3)
                                                                                          (("1"
                                                                                            (copy
                                                                                             "Bdot")
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "sqv(vv)")
                                                                                              (("1"
                                                                                                (mult-by
                                                                                                 -1
                                                                                                 "B")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (-1
                                                                                                    -2
                                                                                                    1))
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (case
                                                                                             "sqv(ss + tt * vv) <= sq(DMOD)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (mult-by
                                                                                                 -3
                                                                                                 "TAU")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               3)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "horizontal_los_inside_Theta[DMOD]")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "vv"
                                                                                                   "ss"
                                                                                                   "tt")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "tt"
                                                                                                         +)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "td"
                                                                                                           +)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "Theta_D"
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "root2b")
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "Delta_discr2b[DMOD]")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "tca2"
                                                                                                                         +)
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "minus_div2"
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "sqrt(Delta[DMOD](ss,vv))/sqv(vv) > 0")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (cross-mult
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "vv = zero")
                                                                                                                                          (("1"
                                                                                                                                            (replaces
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "NOT Delta[DMOD](ss,vv)=0")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     "NOT td = tca2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (copy
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           "Delta_discr2b[DMOD]")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "vv"
                                                                                                                                                               "ss")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "td"
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "Theta_D"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "root2b"
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -1
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (case
                                                                                                                                                         "NOT tt = tca2")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "NOT tca2 = horizontal_tca(ss,vv)")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "horizontal_tca"
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "horizontal_tca_dot_zero")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (cross-mult
                                                                                                                                         2)
                                                                                                                                        (("2"
                                                                                                                                          (name-replace
                                                                                                                                           "SS"
                                                                                                                                           "sqrt(Delta[DMOD](ss, vv))")
                                                                                                                                          (("2"
                                                                                                                                            (field
                                                                                                                                             2)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (rewrite
                                                                                                                                 "minus_div2"
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "div_distributes"
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "sqrt(Delta[DMOD](ss,vv))/sqv(vv) > 0")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (cross-mult
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (ground)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "NOT Delta[DMOD](ss,vv)=0")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "NOT td = tca2")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "td"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "Theta_D"
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "root2b"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -3
                                                                                                                                                           :dir
                                                                                                                                                           rl)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (case
                                                                                                                                                   "NOT tt = tca2")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (case
                                                                                                                                                       "NOT tca2 = horizontal_tca(ss,vv)")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "horizontal_tca"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "horizontal_tca_dot_zero")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (name-replace
                                                                                                                                           "SS"
                                                                                                                                           "sqrt(Delta[DMOD](ss, vv))")
                                                                                                                                          (("2"
                                                                                                                                            (field
                                                                                                                                             2)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 3)
                                                                                (("2"
                                                                                  (expand
                                                                                   "td"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "Theta_D"
                                                                                     +)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "Delta_discr2b[DMOD]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "root2b")
                                                                                            (("2"
                                                                                              (replaces
                                                                                               -1
                                                                                               :dir
                                                                                               rl)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "minus_div2"
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "sqrt(Delta[DMOD](ss,vv))/sqv(vv) > 0")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "tca2"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (cross-mult
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (ground)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "vv = zero")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "sqv_eq_0")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (lemma
                                                                               "horizontal_los_inside_Theta[DMOD]")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "Theta_D_horizontal_dir[DMOD]")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "1"
                                                                                         "ss"
                                                                                         "vv")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "sqv(vv)")
                                                                                            (("2"
                                                                                              (mult-by
                                                                                               -1
                                                                                               "B - Theta_D[DMOD](ss,vv,1)")
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -2
                                                                                                  "Bdot"))
                                                                                                (("2"
                                                                                                  (grind
                                                                                                   :exclude
                                                                                                   "Theta_D")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "Delta_ge_0_2[DMOD]")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "vv"
                                                                             "ss")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "t")
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (replaces
                                                                                 -1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (case
                                                                       "(ss + tca2*vv)*vv = 0")
                                                                      (("1"
                                                                        (split
                                                                         +)
                                                                        (("1"
                                                                          (case
                                                                           "sqv(vv)>0")
                                                                          (("1"
                                                                            (mult-by
                                                                             -1
                                                                             "tca2-t")
                                                                            (("1"
                                                                              (case
                                                                               "(so + t * vo - (si + t * vi)) * vv = (ss + t*vv)*vv")
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -2
                                                                                    -4))
                                                                                  (("1"
                                                                                    (expand
                                                                                     "sqv")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "dot_add_left")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "dot_add_left")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "ss*vv = -tca2*(vv*vv)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "vv")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "ss")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "sqv_eq_0")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "tca2"
                                                                           1)
                                                                          (("2"
                                                                            (cross-mult
                                                                             1)
                                                                            (("2"
                                                                              (ground)
                                                                              (("1"
                                                                                (typepred
                                                                                 "sqv(vv)")
                                                                                (("1"
                                                                                  (mult-by
                                                                                   -1
                                                                                   "B")
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      1
                                                                                      "Bdot"))
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "sqv_eq_0")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "tca2"
                                                                           1)
                                                                          (("2"
                                                                            (rewrite
                                                                             "dot_add_left")
                                                                            (("2"
                                                                              (expand
                                                                               "sqv")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (lemma
                                                                     "sqv_eq_0")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (inst + "t")
                                              (("2"
                                                (expand "ra_tau_at")
                                                (("2"
                                                  (case
                                                   "NOT (so-si)*(vo-vi)<0")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 3)
                                                      (("1"
                                                        (typepred
                                                         "sqv(vo-vi)")
                                                        (("1"
                                                          (mult-by
                                                           -1
                                                           "B")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1
                                                              "Bdot"
                                                              1))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (invoke
                                                       (case "%1 = 0")
                                                       (! 1 1))
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (split +)
                                                        (("1"
                                                          (hide -)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "NOT ((so - si + t * (vo - vi)) * (vo - vi)) < 0")
                                                            (("1"
                                                              (hide-all-but
                                                               (1 3 4))
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (mult-by
                                                               -1
                                                               "TAU")
                                                              (("2"
                                                                (hide
                                                                 (-2
                                                                  -3
                                                                  "Bdot"
                                                                  2
                                                                  3))
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand "tau_current")
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (case
                                                   "NOT (so - si) * (vo - vi) < 0")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide 3)
                                                      (("1"
                                                        (typepred
                                                         "sqv(vo-vi)")
                                                        (("1"
                                                          (mult-by
                                                           -1
                                                           "t")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1 +))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (cross-mult -2)
                                                      (("2"
                                                        (inst + "t")
                                                        (("2"
                                                          (expand
                                                           "ra_tau_at")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split +)
                                                              (("1"
                                                                (hide
                                                                 -)
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (mult-by
                                                                 2
                                                                 "TAU")
                                                                (("2"
                                                                  (hide-all-but
                                                                   (-2
                                                                    -3
                                                                    +))
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (inst + "t")
                                        (("2"
                                          (expand "ra_tau_at")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Delta const-decl "real" horizontal ACCoRD)
    (Theta_D_horizontal_dir formula-decl nil horizontal ACCoRD)
    (det const-decl "real" det_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (scal_neg_1 formula-decl nil vectors_2D vectors)
    (horizontal_los_inside_Theta formula-decl nil horizontal ACCoRD)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (Delta_eq_0_eq_tca formula-decl nil horizontal ACCoRD)
    (sqrt_0 formula-decl nil sqrt reals)
    (sq_gt_0 formula-decl nil sq reals)
    (sq_sqrt formula-decl nil sqrt reals)
    (root2b const-decl "real" quadratic_2b reals)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (Sign type-eq-decl nil sign reals)
    (Delta_ge_0_2 formula-decl nil horizontal ACCoRD)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (horizontal_RA_at_rewrite formula-decl nil horizontal_RA nil)
    (horizontal_RA const-decl "bool" horizontal_RA nil)
    (scal_0 formula-decl nil vectors_2D vectors)
    (dot_zero_left formula-decl nil vectors_2D vectors)
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (horizontal_sq_dtca_eq formula-decl nil definitions ACCoRD)
    (horizontal_tca_min formula-decl nil definitions ACCoRD)
    (horizontal_tca_dot_zero formula-decl nil definitions ACCoRD)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (* const-decl "Vector" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (sq_le formula-decl nil sq reals)
    (sq const-decl "nonneg_real" sq reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sq_norm formula-decl nil vectors_2D vectors)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (horizontal_RA_at const-decl "bool" horizontal_RA nil)
    (sq_nz_pos application-judgement "posreal" sq reals))
   shostak))
 (to_lookahead_TCC1 0
  (to_lookahead_TCC1-1 nil 3544269882
   ("" (skeep*) (("" (min_max) (("" (assert) nil nil)) nil)) nil)
   ((min_le formula-decl nil real_defs nil)
    (le_max formula-decl nil real_defs nil)
    (max_ge formula-decl nil real_defs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (max_le formula-decl nil real_defs nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (to_lookahead subtype
    "real_defs.max(tcasra2d.B, real_defs.min(tcasra2d.T, tcasra2d.r))"
    "Lookahead[B, T]")))
 (nominal_tau_TCC1 0
  (nominal_tau_TCC1-1 nil 3543766521
   ("" (skeep*) (("" (assert) (("" (assert) nil nil)) nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil (nominal_tau subtype "tcasra2d.B" "Lookahead[B, T]")))
 (nominal_tau_TCC2 0
  (nominal_tau_TCC2-1 nil 3543766521
   ("" (lemma "sqv_eq_0")
    (("" (skosimp*) (("" (inst?) (("" (assert) nil nil)) nil)) nil))
    nil)
   ((Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors))
   nil
   (nominal_tau subtype "tcasra2d.vi"
    "{vi | tcas_tau.vi /= tcasra2d.vo}")))
 (nom_tau_dot_lt2 0
  (nom_tau_dot_lt2-1 nil 3543823327
   ("" (skeep)
    (("" (name "sss" "so-si")
      (("" (replace -1)
        (("" (name "vv" "vo-vi")
          (("" (replace -1)
            (("" (assert)
              (("" (flatten)
                (("" (case "t>=nominal_tau(so,vo,si,vi,p)")
                  (("1" (mult-by -1 "sqv(vv)")
                    (("1" (grind :exclude "nominal_tau") nil nil)) nil)
                   ("2" (case "t < nominal_tau(so,vo,si,vi,p)")
                    (("1" (hide 1)
                      (("1" (expand "nominal_tau")
                        (("1" (expand "unbounded_nominal_tau")
                          (("1" (case "vo = vi")
                            (("1" (assert) nil nil)
                             ("2" (assert)
                              (("2"
                                (name
                                 "tt"
                                 "-((so - si) * (vo - vi)) / sqv(vo - vi) - p / 2")
                                (("2"
                                  (replaces -1)
                                  (("2"
                                    (expand "max")
                                    (("2"
                                      (lift-if)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (ground)
                                          (("2"
                                            (expand "min")
                                            (("2"
                                              (lift-if)
                                              (("2"
                                                (ground)
                                                (("1"
                                                  (lemma
                                                   "nom_tau_dot_lt")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "p"
                                                     "si"
                                                     "so"
                                                     "vi"
                                                     "vo")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split -)
                                                        (("1"
                                                          (expand "tt")
                                                          (("1"
                                                            (expand
                                                             "unbounded_nominal_tau")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide -)
                                                          (("2"
                                                            (hide 2)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (case
                                                                 "vo = vi + (vo-vi)")
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (decompose-equality)
                                                                    (("1"
                                                                      (grind)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case
                                                   "(sss + tt*vv)*vv < 0")
                                                  (("1"
                                                    (mult-by
                                                     1
                                                     "sqv(vv)")
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "nom_tau_dot_lt")
                                                    (("2"
                                                      (inst
                                                       -
                                                       "p"
                                                       "si"
                                                       "so"
                                                       "vi"
                                                       "vo")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (split -)
                                                          (("1"
                                                            (expand
                                                             "tt")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "unbounded_nominal_tau")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case
                                                             "vo = vi + (vo-vi)")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (replace
                                                                 -2)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (decompose-equality)
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (nominal_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (TRUE const-decl "bool" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (nom_tau_dot_lt formula-decl nil tcas_tau nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (< const-decl "bool" reals nil))
   shostak))
 (nominal_tau_def 0
  (nominal_tau_def-1 nil 3543766826
   ("" (skeep)
    (("" (case "TAU = 0")
      (("1" (replace -1)
        (("1" (expand "ra_tau?")
          (("1" (expand "ra_tau_at")
            (("1" (replace -1)
              (("1" (assert)
                (("1" (ground)
                  (("1" (skeep)
                    (("1" (expand "nominal_tau")
                      (("1" (lift-if)
                        (("1" (ground)
                          (("1" (typepred "t")
                            (("1" (mult-by -2 "sqv(vo-vi)")
                              (("1" (grind) nil nil)) nil))
                            nil)
                           ("2" (expand "unbounded_nominal_tau")
                            (("2" (expand "max")
                              (("2"
                                (expand "min")
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (lift-if)
                                    (("2"
                                      (lift-if)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (case
                                           "NOT horizontal_tca(so-si,vo-vi) = -((so - si) * (vo - vi)) / sqv(vo - vi)")
                                          (("1"
                                            (expand "horizontal_tca")
                                            (("1" (propax) nil nil))
                                            nil)
                                           ("2"
                                            (replace -1 :dir rl)
                                            (("2"
                                              (ground)
                                              (("1"
                                                (rewrite
                                                 "horizontal_tca_dot_zero")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "t")
                                                (("2"
                                                  (mult-by
                                                   -2
                                                   "sqv(vo-vi)")
                                                  (("2"
                                                    (hide-all-but
                                                     (-1 -7 2))
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (lemma
                                                 "horizontal_tca_dot_zero")
                                                (("3"
                                                  (inst?)
                                                  (("3"
                                                    (mult-by
                                                     1
                                                     "sqv(vo-vi)")
                                                    (("3"
                                                      (hide-all-but
                                                       (-1 +))
                                                      (("3"
                                                        (grind
                                                         :exclude
                                                         "horizontal_tca")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (lemma "sqv_eq_0")
                                            (("3"
                                              (inst?)
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (replaces -1)
                                                  (("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (flatten)
                                            (("4"
                                              (replaces -1)
                                              (("4" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (skeep)
                    (("2" (expand "nominal_tau")
                      (("2" (expand "unbounded_nominal_tau")
                        (("2"
                          (case "-((so - si) * (vo - vi)) / sqv(vo - vi) = horizontal_tca(so-si,vo-vi)")
                          (("1" (replace -1)
                            (("1" (assert)
                              (("1"
                                (lemma "horizontal_tca_min")
                                (("1"
                                  (inst - "vo-vi" "so-si" _)
                                  (("1"
                                    (inst-cp - "t")
                                    (("1"
                                      (rewrite "horizontal_sq_dtca_eq")
                                      (("1"
                                        (name
                                         "tt"
                                         "horizontal_tca(so-si,vo-vi)")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "max")
                                              (("1"
                                                (expand "min")
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (replaces
                                                             -1)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "sqv_increasing_after_horizontal_tca")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "vo-vi"
                                                               "so-si")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "t"
                                                                   "B")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (lemma
                                                             "sqv_decreasing_before_horizontal_tca")
                                                            (("3"
                                                              (inst
                                                               -
                                                               "vo-vi"
                                                               "so-si")
                                                              (("3"
                                                                (assert)
                                                                (("3"
                                                                  (inst
                                                                   -
                                                                   "T"
                                                                   "t")
                                                                  (("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "horizontal_tca")
                            (("2" (propax) nil nil)) nil)
                           ("3" (flatten)
                            (("3" (replaces -1)
                              (("3" (assert) nil nil)) nil))
                            nil)
                           ("4" (lemma "sqv_eq_0")
                            (("4" (inst?)
                              (("4"
                                (assert)
                                (("4"
                                  (replaces -1)
                                  (("4" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (inst?) (("3" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (case "NOT TAU > 0")
        (("1" (assert) nil nil)
         ("2" (hide 1)
          (("2" (name "vv" "vo-vi")
            (("2" (name "sss" "so-si")
              (("2" (name "a" "sqv(vv)")
                (("2" (case "NOT a > 0")
                  (("1" (case "vo=vi")
                    (("1" (replace -1)
                      (("1" (assert)
                        (("1" (replace -4 :dir rl)
                          (("1" (assert)
                            (("1" (expand "ra_tau?")
                              (("1"
                                (expand "ra_tau_at")
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide-all-but (1 2))
                      (("2" (expand "a")
                        (("2" (lemma "sqv_eq_0")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (case "vo = vi+vv")
                                (("1"
                                  (replace -2)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (hide-all-but 1)
                                  (("2"
                                    (expand "vv")
                                    (("2"
                                      (decompose-equality)
                                      (("1" (grind) nil nil)
                                       ("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (label "apos" -1)
                    (("2" (label "sssname" -3)
                      (("2" (label "vvname" -4)
                        (("2" (label "aname" -2)
                          (("2" (name "b" "(2*sss+TAU*vv)*vv")
                            (("2" (label "bname" -1)
                              (("2"
                                (name
                                 "c"
                                 "(sss+TAU*vv)*sss - sq(DMOD)")
                                (("2"
                                  (label "cname" -1)
                                  (("2"
                                    (name
                                     "tz"
                                     "-((so - si) * (vo - vi)) / sqv(vo - vi) - TAU / 2")
                                    (("1"
                                      (label "tzname" -1)
                                      (("1"
                                        (case "tz = -b/(2*a)")
                                        (("1"
                                          (label "tzdef" -1)
                                          (("1"
                                            (name
                                             "ff"
                                             "quadratic(a,b,c)")
                                            (("1"
                                              (lemma "quad_min")
                                              (("1"
                                                (inst - "a" "b" "c")
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (replace
                                                     "tzdef"
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (label
                                                           "ffname"
                                                           -2)
                                                          (("1"
                                                            (label
                                                             "tzmin"
                                                             -1)
                                                            (("1"
                                                              (case
                                                               "(EXISTS (t): ff(t) <= 0) IFF ff(nominal_tau(so,vo,si,vi,TAU)) <= 0")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (split
                                                                   +)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (expand
                                                                       "ra_tau?")
                                                                      (("1"
                                                                        (skeep
                                                                         -1)
                                                                        (("1"
                                                                          (split
                                                                           -2)
                                                                          (("1"
                                                                            (hide
                                                                             -3)
                                                                            (("1"
                                                                              (expand
                                                                               "ra_tau_at")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "nom_tau_dot_lt2")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "t")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "sssname")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 "vvname")
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (-2
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "ff")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "a")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "b")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "c")
                                                                                                              (("1"
                                                                                                                (grind
                                                                                                                 :exclude
                                                                                                                 "nominal_tau")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "NOT (sss+B*vv)*vv <= 0")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (hide-all-but
                                                                                                           (-3
                                                                                                            1))
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "t")
                                                                                                            (("1"
                                                                                                              (typepred
                                                                                                               "sqv(vv)")
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -1
                                                                                                                 "t-B")
                                                                                                                (("1"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (name
                                                                                                         "nt"
                                                                                                         "nominal_tau(so, vo, si, vi, TAU)")
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "tca2"
                                                                                                             "horizontal_tca(sss,vv)")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "nt <= tca2")
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "horizontal_tca_dot_zero")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "vv"
                                                                                                                   "sss")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          -2
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (mult-by
                                                                                                                           -2
                                                                                                                           "sqv(vv)")
                                                                                                                          (("1"
                                                                                                                            (grind)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "nt"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "nt = B")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "nt"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "nominal_tau"
                                                                                                                         +)
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "max")
                                                                                                                                    (("2"
                                                                                                                                      (lift-if)
                                                                                                                                      (("2"
                                                                                                                                        (split
                                                                                                                                         +)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "unbounded_nominal_tau(so, vo, si, vi, TAU) <= tca2")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (expand
                                                                                                                                                 "unbounded_nominal_tau"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "tca2"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "horizontal_tca"
                                                                                                                                                     +)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        1))
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "ff")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "a")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "b")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "c")
                                                                                                              (("2"
                                                                                                                (grind
                                                                                                                 :exclude
                                                                                                                 "nominal_tau")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "ra_tau_at"
                                                                             -1)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   "sssname")
                                                                                  (("2"
                                                                                    (replace
                                                                                     "vvname")
                                                                                    (("2"
                                                                                      (inst
                                                                                       +
                                                                                       "t")
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (-3
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "ff")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "c")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "b")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "a")
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (expand
                                                                       "ra_tau?")
                                                                      (("2"
                                                                        (inst?)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (skeep
                                                                     -1)
                                                                    (("1"
                                                                      (hide
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "ff")
                                                                        (("1"
                                                                          (expand
                                                                           "nominal_tau")
                                                                          (("1"
                                                                            (expand
                                                                             "unbounded_nominal_tau")
                                                                            (("1"
                                                                              (expand
                                                                               "max")
                                                                              (("1"
                                                                                (expand
                                                                                 "min")
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (lift-if)
                                                                                      (("1"
                                                                                        (replace
                                                                                         "tzname")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (replaces
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   "vvname"
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "is_minimum?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "t")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (lemma
                                                                                               "quad_min_mono_inc")
                                                                                              (("3"
                                                                                                (inst
                                                                                                 -
                                                                                                 "a"
                                                                                                 "b"
                                                                                                 "c"
                                                                                                 "t"
                                                                                                 "B")
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("4"
                                                                                              (lemma
                                                                                               "quad_min_mono_dec")
                                                                                              (("4"
                                                                                                (inst
                                                                                                 -
                                                                                                 "a"
                                                                                                 "b"
                                                                                                 "c"
                                                                                                 "t"
                                                                                                 "T")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (inst?)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (cross-mult 1)
                                          (("2"
                                            (replace "sssname")
                                            (("2"
                                              (replace "vvname")
                                              (("2"
                                                (replace
                                                 "tzname"
                                                 +
                                                 :dir
                                                 rl)
                                                (("2"
                                                  (hide-all-but
                                                   ("apos" 1))
                                                  (("2"
                                                    (expand "a")
                                                    (("2"
                                                      (expand "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (rewrite
                                                           "dot_add_left")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "sqv")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TAU formal-const-decl "nnreal" tcasra2d nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (ra_tau? const-decl "bool" tcasra2d nil)
    (nominal_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (horizontal_tca_dot_zero formula-decl nil definitions ACCoRD)
    (> const-decl "bool" reals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (TRUE const-decl "bool" booleans nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (horizontal_sq_dtca_eq formula-decl nil definitions ACCoRD)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (sqv_increasing_after_horizontal_tca formula-decl nil definitions
     ACCoRD)
    (sqv_decreasing_before_horizontal_tca formula-decl nil definitions
     ACCoRD)
    (horizontal_tca_min formula-decl nil definitions ACCoRD)
    (dot_zero_left formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (ra_tau_at const-decl "bool" tcasra2d nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (div_cancel4 formula-decl nil real_props nil)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (quad_min formula-decl nil quad_minmax reals)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (nom_tau_dot_lt2 formula-decl nil tcasra2d nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (quad_min_mono_dec formula-decl nil quad_minmax reals)
    (quad_min_mono_inc formula-decl nil quad_minmax reals)
    (is_minimum? const-decl "bool" quad_minmax reals)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (quadratic const-decl "real" quadratic reals)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sq const-decl "nonneg_real" sq reals)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil))
   shostak))
 (time_of_min_tau_TCC1 0
  (time_of_min_tau_TCC1-1 nil 3574445791
   ("" (skosimp*) (("" (assert) (("" (assert) nil nil)) nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil (time_of_min_tau subtype "tcasra2d.B" "Lookahead[B, T]")))
 (time_of_min_tau_TCC2 0
  (time_of_min_tau_TCC2-1 nil 3574445791
   ("" (skeep*)
    (("" (assert)
      (("" (flatten) (("" (replaces -2) (("" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (time_of_min_tau subtype "tcasra2d.vi"
    "{vi | booleans.AND(tcas_tau.vi /= tcasra2d.vo, reals.<=(horizontal[tcasra2d.DMOD].Delta((vectors_2D.-)(tcasra2d.so, tcasra2d.si), (vectors_2D.-)(tcasra2d.vo, tcas_tau.vi)), 0))}")))
 (time_of_min_tau_TCC3 0
  (time_of_min_tau_TCC3-1 nil 3574445791
   ("" (skeep*) (("" (assert) nil nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil (time_of_min_tau subtype "tcasra2d.T" "Lookahead[B, T]")))
 (min_tau_dot_lt 0
  (min_tau_dot_lt-1 nil 3544275271
   ("" (case "B < T")
    (("1" (skeep)
      (("1" (copy -3)
        (("1" (copy -3)
          (("1" (hide -4)
            (("1" (hide -4)
              (("1" (skeep -2)
                (("1" (expand "time_of_min_tau")
                  (("1" (assert)
                    (("1" (expand "nominal_tau")
                      (("1" (lift-if)
                        (("1" (ground)
                          (("1" (typepred "sqv(vo-vi)")
                            (("1" (mult-by -1 "t-B")
                              (("1" (grind) nil nil)) nil))
                            nil)
                           ("2" (expand "min")
                            (("2" (expand "max")
                              (("2"
                                (lift-if)
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (lift-if)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (ground)
                                        (("1"
                                          (lemma "nom_tau_dot_lt")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand
                                               "tau_current_min_unbounded"
                                               1)
                                              (("2"
                                                (cross-mult 1)
                                                (("2"
                                                  (ground)
                                                  (("2"
                                                    (lemma
                                                     "schwartz_converse")
                                                    (("2"
                                                      (inst?)
                                                      (("1"
                                                        (split -)
                                                        (("1"
                                                          (skeep -1)
                                                          (("1"
                                                            (replace
                                                             -1
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (lemma
                                                               "sqv_eq_0")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "sqv_eq_0")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (lemma "nom_tau_dot_lt")
                                          (("2"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split -)
                                                (("1"
                                                  (typepred
                                                   "sqv(vo-vi)")
                                                  (("1"
                                                    (mult-by
                                                     -1
                                                     "unbounded_nominal_tau(so, vo, si, vi,
                                                  tau_current_min_unbounded(so, vo, si, vi))-T")
                                                    (("1"
                                                      (hide-all-but
                                                       (-1 -2 -3 2))
                                                      (("1"
                                                        (grind
                                                         :exclude
                                                         ("unbounded_nominal_tau"
                                                          "tau_current_min_unbounded"))
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (expand
                                                 "tau_current_min_unbounded")
                                                (("2"
                                                  (cross-mult 1)
                                                  (("2"
                                                    (ground)
                                                    (("2"
                                                      (lemma
                                                       "schwartz_converse")
                                                      (("2"
                                                        (inst?)
                                                        (("1"
                                                          (split -)
                                                          (("1"
                                                            (skeep -1)
                                                            (("1"
                                                              (replace
                                                               -1
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (lemma
                                                                 "sqv_eq_0")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (case "NOT B = T")
      (("1" (assert) nil nil)
       ("2" (skeep 2) (("2" (assert) nil nil)) nil))
      nil))
    nil)
   ((time_of_min_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (nominal_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (det const-decl "real" det_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (nom_tau_dot_lt formula-decl nil tcas_tau nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (minus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (div_mult_pos_neg_gt1 formula-decl nil extra_real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (tau_current_min_unbounded const-decl "nnreal" tcas_tau nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil))
   shostak))
 (nominal_tau_min_TCC1 0
  (nominal_tau_min_TCC1-1 nil 3544271097
   ("" (skeep*) (("" (grind) nil nil)) nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (time_of_min_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (nominal_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (tau_current_min_unbounded const-decl "nnreal" tcas_tau nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (det const-decl "real" det_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (* const-decl "real" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (nominal_tau_min subtype "tcasra2d.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcasra2d.so, vectors_2D.*(tcasra2d.t, tcasra2d.vo)), (vectors_2D.+)(tcasra2d.si, vectors_2D.*(tcasra2d.t, tcasra2d.vi)))), ((vectors_2D.-)(tcasra2d.vo, vi_1))) /= 0}")))
 (nominal_tau_min_TCC2 0
  (nominal_tau_min_TCC2-1 nil 3544271097
   ("" (lemma "min_tau_dot_lt")
    (("" (skeep)
      (("" (inst?)
        (("" (assert)
          (("" (split -)
            (("1" (skeep)
              (("1" (assert)
                (("1" (replace -4 :dir rl)
                  (("1" (hide-all-but (-1 -5)) (("1" (grind) nil nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2) (("2" (inst + "t") nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (min_tau_dot_lt formula-decl nil tcasra2d nil))
   nil
   (nominal_tau_min subtype "tcasra2d.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcasra2d.so, vectors_2D.*(tcasra2d.mt, tcasra2d.vo)), (vectors_2D.+)(tcasra2d.si, vectors_2D.*(tcasra2d.mt, tcasra2d.vi)))), ((vectors_2D.-)(tcasra2d.vo, vi_1))) /= 0}")))
 (nominal_tau_min 0
  (nominal_tau_min-1 nil 3544271876
   ("" (skeep)
    (("" (skoletin 1)
      (("" (expand "time_of_min_tau")
        (("" (expand "nominal_tau")
          (("" (expand "max")
            (("" (expand "min")
              ((""
                (name "ubt" "unbounded_nominal_tau(so,
                                                            vo,
                                                            si,
                                                            vi,
                                                            tau_current_min_unbounded
                                                            (so, vo, si, vi))")
                (("1" (replace -1)
                  (("1" (lift-if)
                    (("1" (lift-if)
                      (("1" (lift-if)
                        (("1" (lift-if)
                          (("1" (lift-if)
                            (("1" (assert)
                              (("1"
                                (ground)
                                (("1"
                                  (hide-all-but (-1 -5))
                                  (("1"
                                    (typepred "sqv(vo-vi)")
                                    (("1"
                                      (mult-by -1 "t-B")
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -1)
                                  (("2" (assert) nil nil))
                                  nil)
                                 ("3"
                                  (case "t > mt")
                                  (("1"
                                    (lemma "tau_current_increasing")
                                    (("1"
                                      (inst
                                       -
                                       "si"
                                       "so"
                                       "vi"
                                       "vo"
                                       "mt"
                                       "t")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (mult-by -1 "sqv(vo-vi)")
                                          (("1"
                                            (hide-all-but (-1 -7 1))
                                            (("1" (grind) nil nil))
                                            nil)
                                           ("2"
                                            (lemma "sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (lemma "tau_current_decreasing")
                                    (("2"
                                      (inst
                                       -
                                       "si"
                                       "so"
                                       "vi"
                                       "vo"
                                       "t"
                                       "mt")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (lemma "nom_tau_dot_lt")
                                          (("2"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand
                                               "tau_current_min_unbounded")
                                              (("2"
                                                (cross-mult 1)
                                                (("2"
                                                  (ground)
                                                  (("2"
                                                    (lemma "sqv_eq_0")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (lemma "tau_current_increasing")
                                  (("4"
                                    (inst
                                     -
                                     "si"
                                     "so"
                                     "vi"
                                     "vo"
                                     "B"
                                     "t")
                                    (("4" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("5"
                                  (lemma "tau_current_decreasing")
                                  (("5"
                                    (inst
                                     -
                                     "si"
                                     "so"
                                     "vi"
                                     "vo"
                                     "t"
                                     "T")
                                    (("5"
                                      (assert)
                                      (("5"
                                        (lemma "nom_tau_dot_lt")
                                        (("5"
                                          (inst?)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split -)
                                              (("1"
                                                (replace -3)
                                                (("1"
                                                  (typepred
                                                   "sqv(vo-vi)")
                                                  (("1"
                                                    (mult-by
                                                     -1
                                                     "ubt-T")
                                                    (("1"
                                                      (hide-all-but
                                                       (-1 -2 1))
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand
                                             "tau_current_min_unbounded"
                                             1)
                                            (("2"
                                              (cross-mult 1)
                                              (("2"
                                                (ground)
                                                (("2"
                                                  (lemma "sqv_eq_0")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (assert)
                  (("2" (flatten)
                    (("2" (replace -1) (("2" (assert) nil nil)) nil))
                    nil))
                  nil)
                 ("3" (flatten)
                  (("3" (assert)
                    (("3" (replace -1) (("3" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (time_of_min_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (norm const-decl "nnreal" vectors_2D vectors)
    (< const-decl "bool" reals nil)
    (nominal_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (tau_current_increasing formula-decl nil tcas_tau nil)
    (nom_tau_dot_lt formula-decl nil tcas_tau nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (div_mult_pos_neg_gt1 formula-decl nil extra_real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (tau_current_decreasing formula-decl nil tcas_tau nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tau_current_min_unbounded const-decl "nnreal" tcas_tau nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil))
   shostak))
 (min_tau_Delta_nonneg 0
  (min_tau_Delta_nonneg-1 nil 3574004609
   ("" (skeep)
    (("" (skoletin 1)
      (("" (skeep)
        (("" (expand "time_of_min_tau")
          (("" (assert)
            (("" (lift-if)
              (("" (split -)
                (("1" (lemma "sqv_increasing_after_horizontal_tca")
                  (("1" (case "vo-vi = zero")
                    (("1" (replace -1) (("1" (assert) nil nil)) nil)
                     ("2" (inst - "vo-vi" "so-si")
                      (("1" (assert)
                        (("1" (inst - "B" "t")
                          (("1"
                            (case "B >= horizontal_tca(so - si, vo - vi)")
                            (("1" (assert) nil nil)
                             ("2" (flatten)
                              (("2"
                                (expand "horizontal_tca")
                                (("2"
                                  (cross-mult 1)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (lemma "sqv_eq_0")
                                      (("2"
                                        (inst?)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (hide-all-but (-1 2))
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (split -)
                    (("1" (flatten)
                      (("1"
                        (lemma "sqv_decreasing_before_horizontal_tca")
                        (("1" (case "vo-vi = zero")
                          (("1" (replaces -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (inst - "vo-vi" "so-si")
                            (("1" (assert)
                              (("1"
                                (inst - "T" "t")
                                (("1"
                                  (assert)
                                  (("1"
                                    (case
                                     "T<=horizontal_tca(so-si,vo-vi)")
                                    (("1" (assert) nil nil)
                                     ("2"
                                      (expand "horizontal_tca" 1)
                                      (("2"
                                        (cross-mult 1)
                                        (("2"
                                          (lemma "sqv_eq_0")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide-all-but (-1 2))
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (case "vo-vi = zero")
                        (("1" (replaces -1) (("1" (assert) nil nil))
                          nil)
                         ("2"
                          (case "NOT mt = horizontal_tca(so-si,vo-vi)")
                          (("1" (assert)
                            (("1" (replaces -1)
                              (("1"
                                (assert)
                                (("1"
                                  (case
                                   "B<horizontal_tca(so-si,vo-vi)")
                                  (("1"
                                    (case
                                     "horizontal_tca(so-si,vo-vi)<=T")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "nominal_tau")
                                        (("1"
                                          (case
                                           "unbounded_nominal_tau(so, vo, si, vi, 0) = horizontal_tca(so-si,vo-vi)")
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (case "vo=vi")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (hide-all-but
                                                   (-1 -2 2))
                                                  (("2"
                                                    (grind
                                                     :exclude
                                                     "horizontal_tca")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand
                                             "unbounded_nominal_tau"
                                             1)
                                            (("2"
                                              (expand
                                               "horizontal_tca"
                                               1)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (assert)
                                            (("3"
                                              (flatten)
                                              (("3"
                                                (replaces -1)
                                                (("3"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "horizontal_tca")
                                      (("2"
                                        (cross-mult 1)
                                        (("2"
                                          (lemma "sqv_eq_0")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide-all-but (2 5))
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "horizontal_tca")
                                    (("2"
                                      (cross-mult 1)
                                      (("2"
                                        (lemma "sqv_eq_0")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (hide-all-but (2 6))
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (replace -1)
                            (("2" (lemma "horizontal_tca_min")
                              (("2"
                                (inst?)
                                (("2"
                                  (rewrite "horizontal_sq_dtca_eq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (time_of_min_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (div_mult_pos_neg_lt2 formula-decl nil extra_real_props nil)
    (nominal_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (div_mult_pos_neg_le1 formula-decl nil extra_real_props nil)
    (< const-decl "bool" reals nil)
    (horizontal_tca_min formula-decl nil definitions ACCoRD)
    (horizontal_sq_dtca_eq formula-decl nil definitions ACCoRD)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (div_mult_pos_neg_le2 formula-decl nil extra_real_props nil)
    (sqv_decreasing_before_horizontal_tca formula-decl nil definitions
     ACCoRD)
    (sqv_increasing_after_horizontal_tca formula-decl nil definitions
     ACCoRD)
    (/= const-decl "boolean" notequal nil)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (div_mult_pos_neg_ge2 formula-decl nil extra_real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis))
   shostak))
 (min_tau_def 0
  (min_tau_def-1 nil 3544275130
   ("" (skeep)
    (("" (lemma "min_tau_dot_lt")
      (("" (inst?)
        (("" (assert)
          (("" (label "hyp1" -1)
            (("" (split +)
              (("1" (flatten)
                (("1" (expand "ra_tau?")
                  (("1" (skeep -1)
                    (("1" (split -)
                      (("1" (expand "ra_tau_at")
                        (("1" (flatten)
                          (("1" (assert)
                            (("1" (lemma "nominal_tau_min")
                              (("1"
                                (inst - _ _ "t" _ _)
                                (("1"
                                  (inst?)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split -)
                                      (("1"
                                        (case
                                         "tau_current(so+t*vo,vo,si+t*vi,vi) <= TAU")
                                        (("1"
                                          (case
                                           "tau_current(so + time_of_min_tau(so, vo, si, vi) * vo, vo,
                                             si + time_of_min_tau(so, vo, si, vi) * vi, vi) <= TAU")
                                          (("1"
                                            (expand "tau_current" -1)
                                            (("1"
                                              (cross-mult -1)
                                              (("1"
                                                (ground)
                                                (("1"
                                                  (hide-all-but
                                                   (-1 "hyp1"))
                                                  (("1"
                                                    (grind
                                                     :exclude
                                                     "time_of_min_tau")
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but (-1 2))
                                                  (("2"
                                                    (grind
                                                     :exclude
                                                     "time_of_min_tau")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (expand "tau_current" 1)
                                            (("2"
                                              (cross-mult 1)
                                              (("2"
                                                (ground)
                                                (("1"
                                                  (hide-all-but
                                                   (-1 -5))
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but (-5 2))
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (invoke
                                           (case "%1 = 0")
                                           (! 1 1))
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lemma
                                                 "Delta_ge_0_2[DMOD]")
                                                (("1"
                                                  (inst
                                                   -
                                                   "vo-vi"
                                                   "so-si")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst + "t")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (replace -1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "ra_tau_at" -)
                        (("2" (inst + "t")
                          (("2" (ground)
                            (("2" (invoke (case "%1 = 0") (! 1 1))
                              (("1"
                                (replace -1)
                                (("1"
                                  (assert)
                                  (("1"
                                    (lemma "Delta_ge_0_2[DMOD]")
                                    (("1"
                                      (inst - "vo-vi" "so-si")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst + "t")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (replace -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "ra_tau?") (("2" (inst?) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((min_tau_dot_lt formula-decl nil tcasra2d nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ra_tau? const-decl "bool" tcasra2d nil)
    (nominal_tau_min formula-decl nil tcasra2d nil)
    (time_of_min_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_mult_pos_neg_le1 formula-decl nil extra_real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sq const-decl "nonneg_real" sq reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (norm const-decl "nnreal" vectors_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (TAU formal-const-decl "nnreal" tcasra2d nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (Delta_ge_0_2 formula-decl nil horizontal ACCoRD)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_times_real_is_real application-judgement "real" reals nil)
    (ra_tau_at const-decl "bool" tcasra2d nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil))
   shostak))
 (min_tau_def_B_dot_nonneg 0
  (min_tau_def_B_dot_nonneg-1 nil 3548071492
   ("" (skeep)
    (("" (case "NOT Delta[DMOD](so-si,vo-vi)>=0")
      (("1" (assert)
        (("1" (lemma "min_tau_def")
          (("1" (inst?) (("1" (assert) nil nil)) nil)) nil))
        nil)
       ("2" (name "mt" "time_of_min_tau(so,vo,si,vi)")
        (("2" (replace -1)
          (("2" (expand "time_of_min_tau")
            (("2" (assert)
              (("2" (replace -1 :dir rl)
                (("2" (hide -1)
                  (("2" (expand "ra_tau?")
                    (("2" (ground)
                      (("1" (skeep -1)
                        (("1" (expand "ra_tau_at")
                          (("1" (flatten)
                            (("1" (assert)
                              (("1"
                                (case
                                 "NOT (so - si + B * (vo - vi)) * (vo - vi)  = 0")
                                (("1"
                                  (assert)
                                  (("1"
                                    (case
                                     "NOT (so - si + B * (vo - vi)) * (vo - vi)  <= 0")
                                    (("1"
                                      (typepred "sqv(vo-vi)")
                                      (("1"
                                        (mult-by -1 "t-B")
                                        (("1"
                                          (hide-all-but (-1 -3 1))
                                          (("1" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (replace -1)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (case
                                         "NOT (so - si + t * (vo - vi)) * (vo - vi)  = 0")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (typepred "sqv(vo-vi)")
                                            (("1"
                                              (mult-by -1 "t-B")
                                              (("1"
                                                (grind
                                                 :exclude
                                                 "Delta")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -1)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (case
                                               "FORALL (ttrr:real): (so - si + ttrr * (vo - vi)) * (vo - vi) = 0 IMPLIES ttrr = horizontal_tca(so-si,vo-vi)")
                                              (("1"
                                                (inst-cp - "t")
                                                (("1"
                                                  (inst - "B")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (case "vo -vi = zero")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but (1 2))
                                                  (("2"
                                                    (skeep 2)
                                                    (("2"
                                                      (expand
                                                       "horizontal_tca")
                                                      (("2"
                                                        (cross-mult 2)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (skosimp*)
                                                (("3"
                                                  (replaces -2)
                                                  (("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (inst?) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vector type-eq-decl nil vectors_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (min_tau_def formula-decl nil tcasra2d nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (ra_tau_at const-decl "bool" tcasra2d nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (minus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (div_cancel4 formula-decl nil real_props nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (TRUE const-decl "bool" booleans nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (ra_tau? const-decl "bool" tcasra2d nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nnreal type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (time_of_min_tau const-decl "Lookahead[B, T]" tcasra2d nil))
   shostak))
 (RA2D_def 0
  (RA2D_def-2 nil 3548580434
   ("" (skeep)
    (("" (lemma "ra_tau_def")
      (("" (inst?)
        (("" (case "((so - si) + B * (vo - vi)) * (vo - vi) < 0")
          (("1" (assert)
            (("1" (label "Bdot" -1)
              (("1" (copy 1)
                (("1" (label "ans2" 2)
                  (("1" (hide "ans2")
                    (("1" (replace -2 :dir rl)
                      (("1" (hide -2)
                        (("1" (expand "RA2D")
                          (("1"
                            (name "mt" "time_of_min_tau(so,vo,si,vi)")
                            (("1" (case "Delta[DMOD](so-si,vo-vi)<0")
                              (("1"
                                (assert)
                                (("1"
                                  (ground)
                                  (("1"
                                    (lemma "min_tau_def")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma
                                           "horizontal_RA_at_rewrite")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand
                                                   "ra_tau_at"
                                                   -)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (lemma "min_tau_def")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (lemma
                                           "horizontal_RA_at_rewrite")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (split -)
                                                (("1"
                                                  (replace -4)
                                                  (("1"
                                                    (lemma
                                                     "Delta_ge_0_2[DMOD]")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst?)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (expand
                                                     "ra_tau_at")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (label "mtname" -1)
                                (("2"
                                  (assert)
                                  (("2"
                                    (case
                                     "((so-si) + T*(vo-vi))*(vo-vi) < 0")
                                    (("1"
                                      (label "Tdot" -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (ground)
                                          (("1"
                                            (expand "ra_tau?")
                                            (("1"
                                              (skeep -1)
                                              (("1"
                                                (expand
                                                 "time_of_min_tau")
                                                (("1"
                                                  (copy -1)
                                                  (("1"
                                                    (expand
                                                     "ra_tau_at"
                                                     -2)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "tau_current_decreasing_Delta_nonneg")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "si"
                                                             "so"
                                                             "vi"
                                                             "vo"
                                                             "t"
                                                             "T")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "vi/=vo")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (case
                                                                     "NOT t = T")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (case
                                                                           "horizontal_RA_at(so, vo, si, vi)(t)")
                                                                          (("1"
                                                                            (expand
                                                                             "horizontal_RA_at")
                                                                            (("1"
                                                                              (expand
                                                                               "horizontal_RA")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (case
                                                                                   "NOT (so - si + t * (vo - vi)) * (vo - vi) < 0")
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     ("Tdot"
                                                                                      1))
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "sqv(vo-vi)")
                                                                                      (("1"
                                                                                        (mult-by
                                                                                         -1
                                                                                         "T-t")
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "(so + t * vo - (si + t * vi)) * (vo - vi) >= 0")
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (-1
                                                                                            -2))
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (case
                                                                                             "(so + T * vo - (si + T * vi)) * (vo - vi) >= 0")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                "Tdot"))
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "vo -vi=zero")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (name
                                                                                                       "tca2"
                                                                                                       "horizontal_tca(so-si,vo-vi)")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "T<=tca2")
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "sqv_decreasing_before_horizontal_tca")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "vo-vi"
                                                                                                             "so-si")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "t"
                                                                                                                     "T")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "sqrt_gt")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "sqrt_sqv_norm")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "sqrt_sqv_norm")
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "FORALL (rr:real): so - si + rr * (vo - vi)=so + rr * vo - (si + rr * vi)")
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       -
                                                                                                                                       "t")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "T")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            2
                                                                                                            3))
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "horizontal_tca_dot_zero")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "vo-vi"
                                                                                                               "so-si")
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "sqv(vo-vi)")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -1
                                                                                                                   "T-tca2")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "tca2")
                                                                                                                    (("1"
                                                                                                                      (grind
                                                                                                                       :exclude
                                                                                                                       "horizontal_tca")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide
                                                                               -1)
                                                                              (("2"
                                                                                (lemma
                                                                                 "horizontal_RA_at_rewrite")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replace
                                                                       -1)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "horizontal_RA_at_rewrite")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (replace
                                                                       -1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace -3)
                                            (("2"
                                              (lemma
                                               "horizontal_RA_at_rewrite")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (split -)
                                                    (("1"
                                                      (expand
                                                       "ra_tau?")
                                                      (("1"
                                                        (inst + "mt")
                                                        (("1"
                                                          (expand
                                                           "ra_tau_at")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (splash
                                                               +)
                                                              (("1"
                                                                (mult-by
                                                                 -1
                                                                 "TAU")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 ("Tdot"
                                                                  1))
                                                                (("2"
                                                                  (typepred
                                                                   "sqv(vo-vi)")
                                                                  (("2"
                                                                    (mult-by
                                                                     -1
                                                                     "T-mt")
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 ("Tdot"
                                                                  1))
                                                                (("3"
                                                                  (typepred
                                                                   "sqv(vo-vi)")
                                                                  (("3"
                                                                    (mult-by
                                                                     -1
                                                                     "T")
                                                                    (("3"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (expand
                                                         "ra_tau?")
                                                        (("2"
                                                          (inst + "mt")
                                                          (("2"
                                                            (expand
                                                             "ra_tau_at")
                                                            (("2"
                                                              (case
                                                               "(so - si) * (vo - vi) < 0 AND
                                                                                                                     (so - si + mt * (vo - vi)) * (vo - vi) < 0")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (split
                                                                   +)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     ("Tdot"
                                                                      1))
                                                                    (("2"
                                                                      (typepred
                                                                       "sqv(vo-vi)")
                                                                      (("2"
                                                                        (mult-by
                                                                         -1
                                                                         "T-mt")
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (label "Tdot" 1)
                                        (("2"
                                          (case
                                           "Delta[DMOD](so-si,vo-vi) = 0")
                                          (("1"
                                            (lemma
                                             "tau_current_at_Delta_0")
                                            (("1"
                                              (inst
                                               -
                                               "si"
                                               "so"
                                               "vi"
                                               "vo")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (case
                                                   "vi/=vo AND (so-si)*(vo-vi)<0")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (label
                                                         "dotneg"
                                                         -1)
                                                        (("1"
                                                          (case
                                                           "NOT sqv(vo-vi)>0")
                                                          (("1"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (case
                                                                   "vi + zero = vi + (vo-vi)")
                                                                  (("1"
                                                                    (hide-all-but
                                                                     (-1
                                                                      2))
                                                                    (("1"
                                                                      (decompose-equality
                                                                       +)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (name
                                                             "tca2"
                                                             "(-(so - si) * (vo - vi)) / sqv(vo - vi)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (label
                                                                 "tcaname"
                                                                 -1)
                                                                (("1"
                                                                  (case
                                                                   "((so-si) + tca2*(vo-vi))*(vo-vi) = 0")
                                                                  (("1"
                                                                    (label
                                                                     "dotzero"
                                                                     -1)
                                                                    (("1"
                                                                      (case
                                                                       "B < tca2 AND tca2 <= T")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (label
                                                                           "Btca"
                                                                           -1)
                                                                          (("1"
                                                                            (label
                                                                             "tcaT"
                                                                             -2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (reveal
                                                                                 "ans2")
                                                                                (("1"
                                                                                  (case
                                                                                   "horizontal_ra?(so, vo, si, vi)")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (name
                                                                                       "ig"
                                                                                       "max(tca2-TAU/2,B)")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "ig")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "horizontal_ra?")
                                                                                          (("1"
                                                                                            (inst
                                                                                             +
                                                                                             "ig")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "horizontal_RA_at")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "horizontal_RA")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "B <= ig AND ig<T")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "(so + ig * vo - (si + ig * vi)) * (vo - vi) < 0")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (invoke
                                                                                                             (case
                                                                                                              "%1 = %2")
                                                                                                             (!
                                                                                                              -11
                                                                                                              1)
                                                                                                             (!
                                                                                                              2
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -12)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "tau_current_at"
                                                                                                               +)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "tau_current_at_denominator")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "tau_current_at_numerator")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "/")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "tau_current")
                                                                                                                      (("2"
                                                                                                                        (invoke
                                                                                                                         (case
                                                                                                                          "%1 = -%2 AND %3 = -%4")
                                                                                                                         (!
                                                                                                                          1
                                                                                                                          1
                                                                                                                          1)
                                                                                                                         (!
                                                                                                                          1
                                                                                                                          2
                                                                                                                          1)
                                                                                                                         (!
                                                                                                                          1
                                                                                                                          1
                                                                                                                          2)
                                                                                                                         (!
                                                                                                                          1
                                                                                                                          2
                                                                                                                          2))
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "ig < tca2")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "posreal_times_posreal_is_posreal")
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "r2d2"
                                                                                                               "tca2-ig")
                                                                                                              (("1"
                                                                                                                (name
                                                                                                                 "iggy"
                                                                                                                 "sqv(vo-vi)")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "iggy"
                                                                                                                   "r2d2")
                                                                                                                  (("1"
                                                                                                                    (replaces
                                                                                                                     -1
                                                                                                                     :dir
                                                                                                                     rl)
                                                                                                                    (("1"
                                                                                                                      (replaces
                                                                                                                       -1
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          "dotzero"
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (case
                                                                                                             "NOT TAU = 0")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ig"
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "max"
                                                                                                                 2)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (ground)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "ra_tau?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "ra_tau_at")
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "ig"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "max"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "NOT ig = tca2")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "ig"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "max"
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "Delta_ge_0[DMOD]")
                                                                                                                                        (("2"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (skosimp*)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "horizontal_tca_min")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "vo-vi"
                                                                                                                                                   "so-si"
                                                                                                                                                   "t!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "horizontal_sq_dtca_eq")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "horizontal_tca(so-si,vo-vi) = tca2")
                                                                                                                                                        (("1"
                                                                                                                                                          (replaces
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "sq_le"
                                                                                                                                                             3
                                                                                                                                                             :dir
                                                                                                                                                             rl)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "sq_norm")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   (-1
                                                                                                                                                                    -2
                                                                                                                                                                    3))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (grind
                                                                                                                                                                     :exclude
                                                                                                                                                                     "sqv")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (expand
                                                                                                                                                           "horizontal_tca"
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "tca2"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (replaces
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (flatten)
                                                                                                                                            (("2"
                                                                                                                                              (replaces
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ig"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "max"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "TAU > 0")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (case
                                                                                                                 "NOT TAU = 0")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "max"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -1
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "norm(so + tca2 * vo - (si + tca2 * vi)) <= DMOD")
                                                                                                                              (("1"
                                                                                                                                (ground)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 3)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "Delta_ge_0[DMOD]")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "horizontal_tca_min")
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (rewrite
                                                                                                                                                 "horizontal_sq_dtca_eq")
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "horizontal_tca(so-si,vo-vi) = tca2")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "sq_le"
                                                                                                                                                       1
                                                                                                                                                       :dir
                                                                                                                                                       rl)
                                                                                                                                                      (("1"
                                                                                                                                                        (rewrite
                                                                                                                                                         "sq_norm")
                                                                                                                                                        (("1"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (-2
                                                                                                                                                            -3
                                                                                                                                                            1))
                                                                                                                                                          (("1"
                                                                                                                                                            (grind
                                                                                                                                                             :exclude
                                                                                                                                                             "sqv")
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "tca2")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "horizontal_tca")
                                                                                                                                                        (("2"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (replaces
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (replaces
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "max")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (ground)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "ig < tca2")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "dot_at_neg?")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "dot_at")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sqv(vo-vi)>0")
                                                                                                (("1"
                                                                                                  (mult-by
                                                                                                   -1
                                                                                                   "tca2-ig")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      "dotzero"
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "ig"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "max"
                                                                                               1)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (ground)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "NOT TAU = 0")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "horizontal_ra?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "horizontal_RA_at")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "tca2")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "horizontal_RA")
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "norm(so + tca2 * vo - (si + tca2 * vi)) <= DMOD")
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       5)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "Delta_ge_0[DMOD]")
                                                                                                                        (("2"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (skosimp*)
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "horizontal_tca_min")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "horizontal_sq_dtca_eq")
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "horizontal_tca(so-si,vo-vi) = tca2")
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "sq_le"
                                                                                                                                             1
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "sq_norm")
                                                                                                                                              (("1"
                                                                                                                                                (hide-all-but
                                                                                                                                                 (-1
                                                                                                                                                  -2
                                                                                                                                                  1))
                                                                                                                                                (("1"
                                                                                                                                                  (grind
                                                                                                                                                   :exclude
                                                                                                                                                   "sqv")
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "tca2")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "horizontal_tca")
                                                                                                                                            (("2"
                                                                                                                                              (grind)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (replaces
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (replaces
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "sqv(vo-vi)>0")
                                                                        (("1"
                                                                          (split
                                                                           1)
                                                                          (("1"
                                                                            (mult-by
                                                                             -1
                                                                             "B-tca2")
                                                                            (("1"
                                                                              (hide-all-but
                                                                               (-1
                                                                                "dotzero"
                                                                                "Bdot"))
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (mult-by
                                                                             -1
                                                                             "tca2-T")
                                                                            (("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                "dotzero"
                                                                                "Tdot"))
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "tca2"
                                                                     1)
                                                                    (("2"
                                                                      (rewrite
                                                                       "dot_add_left")
                                                                      (("2"
                                                                        (rewrite
                                                                         "dot_neg_left")
                                                                        (("2"
                                                                          (expand
                                                                           "sqv")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -1)
                                                    (("2"
                                                      (case "vi = vo")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (typepred
                                                           "sqv(vo-vi)")
                                                          (("2"
                                                            (mult-by
                                                             -1
                                                             "B")
                                                            (("2"
                                                              (hide-all-but
                                                               (-1
                                                                "Bdot"
                                                                2))
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "time_of_min_tau")
                                            (("2"
                                              (case
                                               "EXISTS (t:Lookahead[B,T]): ((so - si) + t * (vo - vi)) * (vo - vi) < 0 AND sqv(so - si + t * (vo - vi)) < sq(DMOD)")
                                              (("1"
                                                (skeep -1)
                                                (("1"
                                                  (case
                                                   "horizontal_ra?(so,vo,si,vi)")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "horizontal_ra?")
                                                    (("2"
                                                      (inst + "t")
                                                      (("2"
                                                        (expand
                                                         "horizontal_RA_at")
                                                        (("2"
                                                          (expand
                                                           "horizontal_RA")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split 1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (hide-all-but
                                                                   (-1
                                                                    -2))
                                                                  (("1"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "tau_current")
                                                                  (("2"
                                                                    (cross-mult
                                                                     3)
                                                                    (("2"
                                                                      (mult-by
                                                                       -1
                                                                       "TAU")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-1
                                                                          -2
                                                                          3))
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "NOT TAU = 0")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (rewrite
                                                                               "sq_le"
                                                                               3
                                                                               :dir
                                                                               rl)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "sq_norm")
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   (-3
                                                                                    3))
                                                                                  (("2"
                                                                                    (grind
                                                                                     :exclude
                                                                                     "sqv")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 5)
                                                (("2"
                                                  (hide -1)
                                                  (("2"
                                                    (inst-cp + "B")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (name
                                                         "tca2"
                                                         "-((so-si)*(vo-vi))/sqv(vo-vi)")
                                                        (("1"
                                                          (case
                                                           "((so-si)+tca2*(vo-vi))*(vo-vi) = 0")
                                                          (("1"
                                                            (name
                                                             "td"
                                                             "Theta_D[DMOD](so-si,vo-vi,-1)")
                                                            (("1"
                                                              (case
                                                               "td >= B AND td < tca2")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (name
                                                                   "tnew"
                                                                   "(td + tca2)/2")
                                                                  (("1"
                                                                    (inst
                                                                     +
                                                                     "tnew")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "sqv(vo-vi) >0")
                                                                        (("1"
                                                                          (mult-by
                                                                           -1
                                                                           "tca2-tnew")
                                                                          (("1"
                                                                            (split
                                                                             1)
                                                                            (("1"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -6
                                                                                1))
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (lemma
                                                                               "horizontal_los_inside_Theta[DMOD]")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "vo-vi"
                                                                                 "so-si"
                                                                                 "tnew")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "NOT tnew < tca2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "Theta_D"
                                                                                       +)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "root2b")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "Delta_discr2b[DMOD]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "div_distributes"
                                                                                                         1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -8)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "(sqrt(Delta[DMOD](so - si, vo - vi)) / sqv(vo - vi)) >= 0")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (cross-mult
                                                                                                                 1)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (lemma
                                                                           "sqv_eq_0")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "((so - si) + tnew * (vo - vi)) * (vo - vi) < 0")
                                                                          (("1"
                                                                            (typepred
                                                                             "sqv(vo-vi)")
                                                                            (("1"
                                                                              (mult-by
                                                                               -1
                                                                               "tnew - T")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -2
                                                                                  "Tdot"))
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "NOT tnew < tca2")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "sqv(vo-vi) >0")
                                                                              (("1"
                                                                                (mult-by
                                                                                 -1
                                                                                 "tca2-tnew")
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -7
                                                                                    1))
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "sqv_eq_0")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "horizontal_los_inside_Theta[DMOD]")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "vo-vi"
                                                                   "so-si"
                                                                   "B")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "td"
                                                                             2)
                                                                            (("1"
                                                                              (expand
                                                                               "Theta_D"
                                                                               2)
                                                                              (("1"
                                                                                (expand
                                                                                 "root2b")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "Delta_discr2b[DMOD]")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "minus_div2"
                                                                                           :dir
                                                                                           rl)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sqrt(Delta[DMOD](so - si, vo - vi)) / sqv(vo - vi)>0")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (ground)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "sqv_eq_0")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "Theta_D_horizontal_dir[DMOD]")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "sqv(vo-vi)")
                                                                                  (("2"
                                                                                    (mult-by
                                                                                     -1
                                                                                     "B-Theta_D[DMOD](so-si,vo-vi,1)")
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -2
                                                                                        "Bdot"))
                                                                                      (("2"
                                                                                        (grind
                                                                                         :exclude
                                                                                         "Theta_D")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "tca2"
                                                             1)
                                                            (("2"
                                                              (rewrite
                                                               "dot_add_left")
                                                              (("2"
                                                                (expand
                                                                 "sqv")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "sqv_eq_0")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (assert)
            (("2" (expand "RA2D")
              (("2" (expand "time_of_min_tau")
                (("2" (expand "horizontal_ra?")
                  (("2" (expand "horizontal_RA_at")
                    (("2" (hide -1)
                      (("2" (ground)
                        (("1" (skeep -1)
                          (("1" (expand "horizontal_RA")
                            (("1" (assert)
                              (("1"
                                (split +)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (lemma
                                           "sqv_increasing_after_horizontal_tca")
                                          (("1"
                                            (case "vo-vi=zero")
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (case "vo = vi")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide (-1 -2 -3))
                                                      (("1"
                                                        (grind
                                                         :exclude
                                                         "norm")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (-1 1))
                                                    (("2"
                                                      (case
                                                       "vi + zero = vi + (vo-vi)")
                                                      (("1"
                                                        (case
                                                         "vo+zero = vi+zero")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace -1)
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case "sqv(vo-vi)=0")
                                              (("1"
                                                (lemma "sqv_eq_0")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (inst
                                                 -
                                                 "vo-vi"
                                                 "so-si")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst - "B" "t")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (case
                                                         "B >= horizontal_tca(so - si, vo - vi)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lemma
                                                             "sqrt_gt")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (rewrite
                                                                   "sqrt_sqv_norm")
                                                                  (("1"
                                                                    (rewrite
                                                                     "sqrt_sqv_norm")
                                                                    (("1"
                                                                      (case
                                                                       "FORALL (rr:real): so - si + rr * (vo - vi)=so + rr * vo - (si + rr * vi)")
                                                                      (("1"
                                                                        (inst-cp
                                                                         -
                                                                         "t")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "B")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide -1)
                                                          (("2"
                                                            (lemma
                                                             "horizontal_tca_dot_zero")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "vo-vi"
                                                               "so-si")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (case
                                                                   "sqv(vo-vi)>0")
                                                                  (("1"
                                                                    (mult-by
                                                                     -1
                                                                     "horizontal_tca(so-si,vo-vi)-B")
                                                                    (("1"
                                                                      (grind
                                                                       :exclude
                                                                       "horizontal_tca")
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (typepred "sqv(vo-vi)")
                                            (("2"
                                              (mult-by -1 "t-B")
                                              (("2"
                                                (hide-all-but
                                                 (-1 -3 1))
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (hide-all-but (1 4))
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (inst + "B") (("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ra_tau_def formula-decl nil tcasra2d nil)
    (B formal-const-decl "nnreal" tcasra2d nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (< const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (RA2D const-decl "bool" tcasra2d nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcasra2d nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (horizontal_RA_at_rewrite formula-decl nil horizontal_RA nil)
    (TAU formal-const-decl "nnreal" tcasra2d nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (ra_tau_at const-decl "bool" tcasra2d nil)
    (min_tau_def formula-decl nil tcasra2d nil)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (Delta_ge_0_2 formula-decl nil horizontal ACCoRD)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (horizontal_ra? const-decl "bool" tcasra2d nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (dot_at const-decl "real" tcas_tau nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (tau_current_at_numerator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (tau_current_at_denominator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (tau_current_at const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (norm const-decl "nnreal" vectors_2D vectors)
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (posreal_times_posreal_is_posreal judgement-tcc nil real_types nil)
    (sq_norm formula-decl nil vectors_2D vectors)
    (sq_le formula-decl nil sq reals)
    (horizontal_sq_dtca_eq formula-decl nil definitions ACCoRD)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (horizontal_tca_min formula-decl nil definitions ACCoRD)
    (Delta_ge_0 formula-decl nil horizontal ACCoRD)
    (dot_zero_left formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (dot_at_neg? const-decl "bool" tcas_tau nil)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (dot_neg_left formula-decl nil vectors_2D vectors)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (tau_current_at_Delta_0 formula-decl nil tcas_tau nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (div_mult_neg_le1 formula-decl nil real_props nil)
    (horizontal_los_inside_Theta formula-decl nil horizontal ACCoRD)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (div_distributes formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (root2b const-decl "real" quadratic_2b reals)
    (Theta_D_horizontal_dir formula-decl nil horizontal ACCoRD)
    (minus_div2 formula-decl nil real_props nil)
    (div_mult_pos_neg_gt1 formula-decl nil extra_real_props nil)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (Sign type-eq-decl nil sign reals)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (tau_current_decreasing_Delta_nonneg formula-decl nil tcas_tau nil)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (horizontal_RA_at const-decl "bool" horizontal_RA nil)
    (horizontal_RA const-decl "bool" horizontal_RA nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (horizontal_tca_dot_zero formula-decl nil definitions ACCoRD)
    (sqv_decreasing_before_horizontal_tca formula-decl nil definitions
     ACCoRD)
    (sqrt_sqv_norm formula-decl nil vectors_2D vectors)
    (sqrt_gt formula-decl nil sqrt reals)
    (sq const-decl "nonneg_real" sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (ra_tau? const-decl "bool" tcasra2d nil)
    (TRUE const-decl "bool" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (time_of_min_tau const-decl "Lookahead[B, T]" tcasra2d nil)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (T formal-const-decl "{AB: nnreal | AB >= B}" tcasra2d nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_increasing_after_horizontal_tca formula-decl nil definitions
     ACCoRD)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil))
   nil)
  (RA2D_def-1 nil 3548068002
   ("" (skeep)
    (("" (lemma "ra_tau_def")
      (("" (inst?)
        (("" (case "((so - si) + B * (vo - vi)) * (vo - vi) < 0")
          (("1" (assert)
            (("1" (label "Bdot" -1)
              (("1" (copy 1)
                (("1" (label "ans2" 2)
                  (("1" (hide "ans2")
                    (("1" (replace -2 :dir rl)
                      (("1" (hide -2)
                        (("1" (expand "RA2D")
                          (("1"
                            (name "mt" "time_of_min_tau(so,vo,si,vi)")
                            (("1" (case "Delta[DMOD](so-si,vo-vi)<0")
                              (("1"
                                (assert)
                                (("1"
                                  (ground)
                                  (("1"
                                    (lemma "min_tau_def")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma
                                           "horizontal_RA_at_rewrite")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand
                                                   "ra_tau_at"
                                                   -)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (lemma "min_tau_def")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (lemma
                                           "horizontal_RA_at_rewrite")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (split -)
                                                (("1"
                                                  (lemma
                                                   "Delta_gt_0[DMOD]")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split +)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "horizontal_conflict_ever?")
                                                          (("2"
                                                            (inst?)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (expand
                                                     "ra_tau_at")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (label "mtname" -1)
                                (("2"
                                  (assert)
                                  (("2"
                                    (case
                                     "((so-si) + T*(vo-vi))*(vo-vi) < 0")
                                    (("1"
                                      (label "Tdot" -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (ground)
                                          (("1"
                                            (expand "ra_tau?")
                                            (("1"
                                              (skeep -1)
                                              (("1"
                                                (expand
                                                 "time_of_min_tau")
                                                (("1"
                                                  (copy -1)
                                                  (("1"
                                                    (expand
                                                     "ra_tau_at"
                                                     -2)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "tau_current_decreasing_Delta_nonneg")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "si"
                                                             "so"
                                                             "vi"
                                                             "vo"
                                                             "t"
                                                             "T")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "vi/=vo")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (case
                                                                     "NOT t = T")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (case
                                                                           "horizontal_RA_at(so, vo, si, vi)(t)")
                                                                          (("1"
                                                                            (expand
                                                                             "horizontal_RA_at")
                                                                            (("1"
                                                                              (expand
                                                                               "horizontal_RA")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (ground)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      "Tdot"))
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      -6))
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      "Tdot"))
                                                                                    (("3"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (lemma
                                                                               "horizontal_RA_at_rewrite")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replace
                                                                       -1)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "horizontal_RA_at_rewrite")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (replace
                                                                       -1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace -3)
                                            (("2"
                                              (lemma
                                               "horizontal_RA_at_rewrite")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand "ra_tau?")
                                                    (("2"
                                                      (inst + "mt")
                                                      (("2"
                                                        (expand
                                                         "ra_tau_at")
                                                        (("2"
                                                          (case
                                                           "(so - si) * (vo - vi) < 0 AND
                                                                      (so - si + mt * (vo - vi)) * (vo - vi) < 0")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (mult-by
                                                                   -3
                                                                   "TAU")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (case
                                                               "FORALL (rr:real): rr <= T IMPLIES (so - si + rr * (vo - vi)) * (vo - vi) < 0")
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "0")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "mt")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-3
                                                                  1))
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (typepred
                                                                     "sqv(vo-vi)")
                                                                    (("2"
                                                                      (mult-by
                                                                       -1
                                                                       "T-rr")
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (label "Tdot" 1)
                                        (("2"
                                          (case
                                           "Delta[DMOD](so-si,vo-vi) = 0")
                                          (("1"
                                            (lemma
                                             "tau_current_at_Delta_0")
                                            (("1"
                                              (inst
                                               -
                                               "si"
                                               "so"
                                               "vi"
                                               "vo")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (case
                                                   "vi/=vo AND (so-si)*(vo-vi)<0")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (label
                                                         "dotneg"
                                                         -1)
                                                        (("1"
                                                          (name
                                                           "tca2"
                                                           "(-(so - si) * (vo - vi)) / sqv(vo - vi)")
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (label
                                                               "tcaname"
                                                               -1)
                                                              (("1"
                                                                (case
                                                                 "((so-si) + tca2*(vo-vi))*(vo-vi) = 0")
                                                                (("1"
                                                                  (label
                                                                   "dotzero"
                                                                   -1)
                                                                  (("1"
                                                                    (case
                                                                     "B < tca2 AND tca2 <= T")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (label
                                                                         "Btca"
                                                                         -1)
                                                                        (("1"
                                                                          (label
                                                                           "tcaT"
                                                                           -2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (reveal
                                                                               "ans2")
                                                                              (("1"
                                                                                (case
                                                                                 "horizontal_ra?(so, vo, si, vi)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (name
                                                                                     "ig"
                                                                                     "max(tca2-TAU/2,B)")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ig")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "horizontal_ra?")
                                                                                        (("1"
                                                                                          (inst
                                                                                           +
                                                                                           "ig")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "horizontal_RA_at")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "horizontal_RA")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "B <= ig AND ig<T")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "(so + ig * vo - (si + ig * vi)) * (vo - vi) < 0")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (invoke
                                                                                                         (case
                                                                                                          "%1 = %2")
                                                                                                         (!
                                                                                                          -10
                                                                                                          1)
                                                                                                         (!
                                                                                                          1
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -11)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "tau_current_at"
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "tau_current_at_denominator")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "tau_current_at_numerator")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "/")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "tau_current")
                                                                                                                    (("2"
                                                                                                                      (cross-mult
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (name
                                                                                                                         "ss"
                                                                                                                         "so-si")
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (name
                                                                                                                             "vv"
                                                                                                                             "vo-vi")
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "(so + ig * vo - (si + ig * vi)) = ss + ig*vv")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "dot_neg_left")
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "dot_neg_left")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "ss")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "vv")
                                                                                                                                      (("2"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "ig < tca2")
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "posreal_times_posreal_is_posreal")
                                                                                                          (("1"
                                                                                                            (name
                                                                                                             "r2d2"
                                                                                                             "tca2-ig")
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "iggy"
                                                                                                               "sqv(vo-vi)")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "iggy"
                                                                                                                 "r2d2")
                                                                                                                (("1"
                                                                                                                  (replaces
                                                                                                                   -1
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (replaces
                                                                                                                     -1
                                                                                                                     :dir
                                                                                                                     rl)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-1
                                                                                                                        "dotzero"
                                                                                                                        1))
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (lemma
                                                                                                                   "sqv_eq_0")
                                                                                                                  (("3"
                                                                                                                    (inst?)
                                                                                                                    (("3"
                                                                                                                      (case
                                                                                                                       "iggy = 0")
                                                                                                                      (("1"
                                                                                                                        (replaces
                                                                                                                         -3
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "vo-vi = zero")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 "dotneg")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               (-2
                                                                                                                                1))
                                                                                                                              (("2"
                                                                                                                                (ground)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide-all-but
                                                                                                                         (-2
                                                                                                                          1
                                                                                                                          2))
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "ig"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "max"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (ground)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "ig"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "max"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "ig"
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "max"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "ig < tca2")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "dot_at_neg?")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "dot_at")
                                                                                            (("1"
                                                                                              (case
                                                                                               "sqv(vo-vi)>0")
                                                                                              (("1"
                                                                                                (mult-by
                                                                                                 -1
                                                                                                 "tca2-ig")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (-1
                                                                                                    "dotzero"
                                                                                                    1))
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "sqv_eq_0")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "ig"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "max"
                                                                                             1)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (case
                                                                       "sqv(vo-vi)>0")
                                                                      (("1"
                                                                        (split
                                                                         1)
                                                                        (("1"
                                                                          (mult-by
                                                                           -1
                                                                           "B-tca2")
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-1
                                                                              "dotzero"
                                                                              "Bdot"))
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (mult-by
                                                                           -1
                                                                           "tca2-T")
                                                                          (("2"
                                                                            (hide-all-but
                                                                             (-1
                                                                              "dotzero"
                                                                              "Tdot"))
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (lemma
                                                                         "sqv_eq_0")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "tca2"
                                                                   1)
                                                                  (("2"
                                                                    (rewrite
                                                                     "dot_add_left")
                                                                    (("2"
                                                                      (rewrite
                                                                       "dot_neg_left")
                                                                      (("2"
                                                                        (expand
                                                                         "sqv")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -1)
                                                    (("2"
                                                      (case "vi = vo")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (typepred
                                                           "sqv(vo-vi)")
                                                          (("2"
                                                            (mult-by
                                                             -1
                                                             "B")
                                                            (("2"
                                                              (hide-all-but
                                                               (-1
                                                                "Bdot"
                                                                2))
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "time_of_min_tau")
                                            (("2"
                                              (case
                                               "EXISTS (t:Lookahead): ((so - si) + t * (vo - vi)) * (vo - vi) < 0 AND sqv(so - si + t * (vo - vi)) < sq(DMOD)")
                                              (("1"
                                                (skeep -1)
                                                (("1"
                                                  (case
                                                   "horizontal_ra?(so,vo,si,vi)")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "horizontal_ra?")
                                                    (("2"
                                                      (inst + "t")
                                                      (("2"
                                                        (expand
                                                         "horizontal_RA_at")
                                                        (("2"
                                                          (expand
                                                           "horizontal_RA")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split 1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (hide-all-but
                                                                   (-1
                                                                    -2))
                                                                  (("1"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "tau_current")
                                                                  (("2"
                                                                    (cross-mult
                                                                     2)
                                                                    (("2"
                                                                      (mult-by
                                                                       -1
                                                                       "TAU")
                                                                      (("2"
                                                                        (hide-all-but
                                                                         (-1
                                                                          -2
                                                                          2))
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 5)
                                                (("2"
                                                  (hide -1)
                                                  (("2"
                                                    (inst-cp + "B")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (name
                                                         "tca2"
                                                         "-((so-si)*(vo-vi))/sqv(vo-vi)")
                                                        (("1"
                                                          (case
                                                           "((so-si)+tca2*(vo-vi))*(vo-vi) = 0")
                                                          (("1"
                                                            (name
                                                             "td"
                                                             "Theta_D[DMOD](so-si,vo-vi,-1)")
                                                            (("1"
                                                              (case
                                                               "td >= B AND td < tca2")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (name
                                                                   "tnew"
                                                                   "(td + tca2)/2")
                                                                  (("1"
                                                                    (inst
                                                                     +
                                                                     "tnew")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "sqv(vo-vi) >0")
                                                                        (("1"
                                                                          (mult-by
                                                                           -1
                                                                           "tca2-tnew")
                                                                          (("1"
                                                                            (split
                                                                             1)
                                                                            (("1"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -6
                                                                                1))
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (lemma
                                                                               "horizontal_los_inside_Theta[DMOD]")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "vo-vi"
                                                                                 "so-si"
                                                                                 "tnew")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "NOT tnew < tca2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "Theta_D"
                                                                                       +)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "root2b")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "Delta_discr2b[DMOD]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "div_distributes"
                                                                                                         1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -8)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "(sqrt(Delta[DMOD](so - si, vo - vi)) / sqv(vo - vi)) >= 0")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (cross-mult
                                                                                                                 1)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (lemma
                                                                           "sqv_eq_0")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "((so - si) + tnew * (vo - vi)) * (vo - vi) < 0")
                                                                          (("1"
                                                                            (typepred
                                                                             "sqv(vo-vi)")
                                                                            (("1"
                                                                              (mult-by
                                                                               -1
                                                                               "tnew - T")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -2
                                                                                  "Tdot"))
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "NOT tnew < tca2")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "sqv(vo-vi) >0")
                                                                              (("1"
                                                                                (mult-by
                                                                                 -1
                                                                                 "tca2-tnew")
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -7
                                                                                    1))
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "sqv_eq_0")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "horizontal_los_inside_Theta[DMOD]")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "vo-vi"
                                                                   "so-si"
                                                                   "B")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "td"
                                                                             2)
                                                                            (("1"
                                                                              (expand
                                                                               "Theta_D"
                                                                               2)
                                                                              (("1"
                                                                                (expand
                                                                                 "root2b")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "Delta_discr2b[DMOD]")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "minus_div2"
                                                                                           :dir
                                                                                           rl)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sqrt(Delta[DMOD](so - si, vo - vi)) / sqv(vo - vi)>0")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (ground)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "sqv_eq_0")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "Theta_D_horizontal_dir[DMOD]")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "sqv(vo-vi)")
                                                                                  (("2"
                                                                                    (mult-by
                                                                                     -1
                                                                                     "B-Theta_D[DMOD](so-si,vo-vi,1)")
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -2
                                                                                        "Bdot"))
                                                                                      (("2"
                                                                                        (grind
                                                                                         :exclude
                                                                                         "Theta_D")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "tca2"
                                                             1)
                                                            (("2"
                                                              (rewrite
                                                               "dot_add_left")
                                                              (("2"
                                                                (expand
                                                                 "sqv")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "sqv_eq_0")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (assert)
            (("2" (expand "RA2D")
              (("2" (expand "time_of_min_tau")
                (("2" (expand "horizontal_ra?")
                  (("2" (expand "horizontal_RA_at")
                    (("2" (hide -1)
                      (("2" (ground)
                        (("1" (skeep -1)
                          (("1" (expand "horizontal_RA")
                            (("1" (assert)
                              (("1"
                                (split +)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (lemma "Delta_gt_0[DMOD]")
                                          (("1"
                                            (inst - "so-si" "vo-vi")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split -)
                                                (("1"
                                                  (lemma
                                                   "horizontal_los_inside_Theta[DMOD]")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "vo-vi"
                                                     "so-si"
                                                     _)
                                                    (("1"
                                                      (inst-cp - "t")
                                                      (("1"
                                                        (inst - "B")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case
                                                             "sqv(so - si + t * (vo - vi)) < sq(DMOD)")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "sqv(so - si + B * (vo - vi)) < sq(DMOD)")
                                                                (("1"
                                                                  (hide-all-but
                                                                   (-1
                                                                    1))
                                                                  (("1"
                                                                    (lemma
                                                                     "sqrt_lt")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (rewrite
                                                                           "sqrt_sqv_norm")
                                                                          (("1"
                                                                            (hide
                                                                             -2)
                                                                            (("1"
                                                                              (grind
                                                                               :exclude
                                                                               "norm")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (lemma
                                                                         "Theta_D_horizontal_dir[DMOD]")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (case
                                                                               "NOT -1 *
                              ((so - si + B * (vo - vi)) * (vo - vi))
                              >= 0")
                                                                              (("1"
                                                                                (typepred
                                                                                 "sqv(vo-vi)")
                                                                                (("1"
                                                                                  (mult-by
                                                                                   -1
                                                                                   "Theta_D[DMOD](so-si,vo-vi,-1) - B")
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      -2
                                                                                      1))
                                                                                    (("1"
                                                                                      (grind
                                                                                       :exclude
                                                                                       "Theta_D")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (case
                                                                                   "NOT ((so-si)+B*(vo-vi))*(vo-vi) = 0")
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      -9
                                                                                      1))
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "horizontal_tca_min")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "vo-vi"
                                                                                       "so-si"
                                                                                       "t")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "horizontal_sq_dtca_eq")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "horizontal_tca")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "B = -((so - si) * (vo - vi)) / sqv(vo - vi)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (cross-mult
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (hide-all-but
                                                                                                       (-2
                                                                                                        1))
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide-all-but
                                                                 (-4
                                                                  1))
                                                                (("2"
                                                                  (lemma
                                                                   "sqrt_lt")
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (rewrite
                                                                         "sqrt_sqv_norm")
                                                                        (("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (grind
                                                                             :exclude
                                                                             "norm")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "vo = vi")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (hide-all-but
                                                                   (-5
                                                                    1))
                                                                  (("1"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "vo + zero = vi + (vo-vi)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case
                                                         "vo = vi")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (hide-all-but
                                                             (-4 2))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case
                                                           "vo + zero = vi + (vo-vi)")
                                                          (("1"
                                                            (replace
                                                             -2)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             1)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (expand
                                                   "horizontal_conflict_ever?")
                                                  (("3"
                                                    (inst + "t")
                                                    (("3"
                                                      (lemma "sqrt_lt")
                                                      (("3"
                                                        (inst?)
                                                        (("3"
                                                          (assert)
                                                          (("3"
                                                            (rewrite
                                                             "sqrt_sqv_norm")
                                                            (("3"
                                                              (hide-all-but
                                                               (-2 1))
                                                              (("3"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (typepred "sqv(vo-vi)")
                                            (("2"
                                              (mult-by -1 "t-B")
                                              (("2"
                                                (hide-all-but
                                                 (-1 -3 1))
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (hide-all-but (1 3))
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (inst + "B") (("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (Delta_gt_0 formula-decl nil horizontal ACCoRD)
    (horizontal_conflict_ever? const-decl "bool" horizontal ACCoRD)
    (scal_zero formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (dot_neg_left formula-decl nil vectors_2D vectors)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (norm const-decl "nnreal" vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (horizontal_los_inside_Theta formula-decl nil horizontal ACCoRD)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (root2b const-decl "real" quadratic_2b reals)
    (Theta_D_horizontal_dir formula-decl nil horizontal ACCoRD)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (Sign type-eq-decl nil sign reals)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Lookahead type-eq-decl nil Lookahead ACCoRD)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (horizontal_sq_dtca_eq formula-decl nil definitions ACCoRD)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (horizontal_tca_min formula-decl nil definitions ACCoRD)
    (sqrt_sqv_norm formula-decl nil vectors_2D vectors)
    (sqrt_sq formula-decl nil sqrt reals)
    (sqrt_pos application-judgement "posreal" sqrt reals)
    (sqrt_lt formula-decl nil sqrt reals)
    (Vect2 type-eq-decl nil vectors_2D_def vectors))
   shostak)))

