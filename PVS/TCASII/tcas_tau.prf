(tcas_tau
 (dot_at_neg_deriv_domain 0
  (dot_at_neg_deriv_domain-1 nil 3543913277
   ("" (skeep)
    (("" (expand "deriv_domain?")
      (("" (skosimp*)
        (("" (typepred "x!1")
          (("" (expand "dot_at_neg?")
            (("" (expand "dot_at")
              ((""
                (case "EXISTS (y:posreal): y<e!1 AND y*sqv(vo-vi) < - (((so - si) + x!1 * (vo - vi)) * (vo - vi))")
                (("1" (skosimp*)
                  (("1" (inst + "y!1")
                    (("1" (expand "abs") (("1" (propax) nil nil)) nil)
                     ("2" (hide -3) (("2" (grind) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (case "vo = vi")
                    (("1" (replace -1) (("1" (assert) nil nil)) nil)
                     ("2"
                      (inst +
                       "min(e!1/2,(-(((so - si) + x!1 * (vo - vi)) * (vo - vi)))/(2*sqv(vo-vi)))")
                      (("1" (assert)
                        (("1" (split +)
                          (("1" (expand "min")
                            (("1" (lift-if) (("1" (ground) nil nil))
                              nil))
                            nil)
                           ("2" (expand "min")
                            (("2" (lift-if)
                              (("2"
                                (ground)
                                (("2" (cross-mult 1) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (expand "min")
                          (("2" (lift-if)
                            (("2" (ground)
                              (("1"
                                (cross-mult 1)
                                (("1"
                                  (ground)
                                  (("1"
                                    (lemma "sqv_eq_0")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (case
                                           "vo + zero = vi + (vo-vi)")
                                          (("1"
                                            (replace -2)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (hide-all-but 1)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (cross-mult 1)
                                (("2"
                                  (ground)
                                  (("2"
                                    (lemma "sqv_eq_0")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (case
                                           "vo + zero = vi + (vo-vi)")
                                          (("1"
                                            (replace -2)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (hide-all-but 1)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (lemma "sqv_eq_0")
                        (("3" (inst?)
                          (("3" (assert)
                            (("3" (case "vo + zero = vi + (vo-vi)")
                              (("1"
                                (replace -2)
                                (("1" (assert) nil nil))
                                nil)
                               ("2"
                                (hide-all-but 1)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_plus_real_is_real application-judgement "real" reals nil)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (dot_at_neg? const-decl "bool" tcas_tau nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (dot_at const-decl "real" tcas_tau nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (<= const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    nil (div_mult_pos_gt1 formula-decl nil extra_real_props nil)
    (div_mult_pos_gt2 formula-decl nil extra_real_props nil)
    (times_div2 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (div_mult_pos_neg_ge1 formula-decl nil extra_real_props nil)
    (div_mult_pos_neg_gt1 formula-decl nil extra_real_props nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (/= const-decl "boolean" notequal nil)
    (nzreal nonempty-type-eq-decl nil reals nil) nil nil
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    nil nil nil nil
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors) nil
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors))
   shostak))
 (dot_at_neg_not_one_element 0
  (dot_at_neg_not_one_element-1 nil 3543915370
   ("" (skeep)
    (("" (expand "not_one_element?")
      (("" (skosimp*)
        (("" (typepred "x!1")
          (("" (expand "dot_at_neg?")
            (("" (expand "dot_at")
              ((""
                (case "EXISTS (y:posreal): y*sqv(vo-vi) < - (((so - si) + x!1 * (vo - vi)) * (vo - vi))")
                (("1" (skosimp*)
                  (("1" (inst + "x!1+y!1")
                    (("1" (assert) nil nil) ("2" (grind) nil nil))
                    nil))
                  nil)
                 ("2"
                  (inst +
                   "(-(((so - si) + x!1 * (vo - vi)) * (vo - vi)))/(2*sqv(vo-vi))")
                  (("1" (assert) nil nil)
                   ("2" (assert)
                    (("2" (case "vo-vi = zero")
                      (("1" (replace -1) (("1" (assert) nil nil)) nil)
                       ("2" (case "sqv(vo-vi) > 0")
                        (("1" (split)
                          (("1" (cross-mult 1) nil nil)
                           ("2" (cross-mult 1) nil nil))
                          nil)
                         ("2" (lemma "sqv_eq_0")
                          (("2" (inst?) (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (lemma "sqv_eq_0")
                    (("3" (inst?)
                      (("3" (assert)
                        (("3" (replace -1) (("3" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((not_one_element? const-decl "bool" deriv_domain_def analysis)
    (dot_at_neg? const-decl "bool" tcas_tau nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (dot_at const-decl "real" tcas_tau nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (div_mult_pos_gt1 formula-decl nil extra_real_props nil)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    nil nil
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    nil nil nil nil
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors) nil
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors))
   shostak))
 (tau_mod_TCC1 0
  (tau_mod_TCC1-1 nil 3546791114
   ("" (skeep :preds? t)
    (("" (hide -1)
      (("" (replaces -1)
        (("" (lemma "norm_eq_0")
          (("" (inst?)
            (("" (assert)
              (("" (replaces -1) (("" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((norm_eq_0 formula-decl nil vectors_2D vectors)
    (dot_zero_left formula-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil (tau_mod subtype "tcas_tau.r" "nznum")))
 (tau_mod_TCC2 0
  (tau_mod_TCC2-1 nil 3546791114
   ("" (skeep* :preds? t) (("" (grind) nil nil)) nil)
   ((* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil (tau_mod subtype "tcas_tau.c" "nznum")))
 (tau_mod_TCC3 0
  (tau_mod_TCC3-1 nil 3546791114
   ("" (skeep* :preds? t)
    (("" (case "c >=0")
      (("1" (field 2)
        (("1" (rewrite "sq" :dir rl)
          (("1" (replaces -6 2)
            (("1" (both-sides-f -8 "sq")
              (("1" (rewrite "sq_ge") nil nil)) nil))
            nil))
          nil))
        nil)
       ("2" (replaces -4 1)
        (("2" (cross-mult 1) (("2" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (sq_ge formula-decl nil sq reals)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    nil (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (div_cancel2 formula-decl nil real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil) nil
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (sq const-decl "nonneg_real" sq reals)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (both_sides_times_pos_ge1 formula-decl nil real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (> const-decl "bool" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal type-eq-decl nil real_types nil)
    (/= const-decl "boolean" notequal nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (* const-decl "real" vectors_2D vectors)
    (- const-decl "[numfield -> numfield]" number_fields nil) nil
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (tau_mod subtype
    "number_fields./(((number_fields.-)(tcas_tau.r, number_fields./(sq.sq(tcas_tau.DMOD), tcas_tau.r))), tcas_tau.c)"
    "{rr: reals.real | booleans.IMPLIES(booleans.AND(reals.<(vectors_2D.*(tcas_tau.s, tcas_tau.v), 0), reals.>=(vectors_2D.norm(tcas_tau.s), tcas_tau.DMOD)), reals.>=(rr, 0))}")))
 (tau_mod_def_TCC1 0
  (tau_mod_def_TCC1-1 nil 3598209708
   ("" (skeep)
    (("" (cross-mult 1)
      (("" (grind-reals)
        (("" (both-sides-f -2 "sq")
          (("1" (rewrite "sq_norm") (("1" (assert) nil nil)) nil)
           ("2" (rewrite "sq_ge") nil nil))
          nil))
        nil))
      nil))
    nil)
   nil nil
   (tau_mod_def subtype "(vectors_2D.*(tcas_tau.s, tcas_tau.v))"
    "nznum")))
 (tau_mod_def_TCC2 0
  (tau_mod_def_TCC2-1 nil 3625222166
   ("" (skeep)
    (("" (both-sides-f -2 "sq")
      (("1" (rewrite "sq_norm")
        (("1" (cross-mult 1) (("1" (assert) nil nil)) nil)) nil)
       ("2" (rewrite "sq_ge") nil nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_mult_neg_ge1 formula-decl nil real_props nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (< const-decl "bool" reals nil) nil
    (/= const-decl "boolean" notequal nil) nil
    (* const-decl "real" vectors_2D vectors)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sq_norm formula-decl nil vectors_2D vectors)
    (sq_ge formula-decl nil sq reals))
   nil
   (tau_mod_def subtype
    "number_fields./(((number_fields.-)(sq.sq(tcas_tau.DMOD), vectors_2D.sqv(tcas_tau.s))), (vectors_2D.*(tcas_tau.s, tcas_tau.v)))"
    "{rr: reals.real | booleans.IMPLIES(booleans.AND(reals.<(vectors_2D.*(tcas_tau.s, tcas_tau.v), 0), reals.>=(vectors_2D.norm(tcas_tau.s), tcas_tau.DMOD)), reals.>=(rr, 0))}")))
 (tau_mod_eq 0
  (tau_mod_eq-1 nil 3598210184
   ("" (skeep)
    (("" (expand "tau_mod")
      (("" (expand "tau_mod_def")
        (("" (field 2)
          (("" (rewrite "sq" :dir rl)
            (("" (rewrite "sq_norm") nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((sq_nz_pos application-judgement "posreal" sq reals)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (tau_mod const-decl
     "{rr: real | s * v < 0 AND norm(s) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (TRUE const-decl "bool" booleans nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (/= const-decl "boolean" notequal nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (* const-decl "real" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (norm const-decl "nnreal" vectors_2D vectors)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (both_sides_times1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (div_cancel2 formula-decl nil real_props nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (both_sides_times2 formula-decl nil real_props nil)
    (sq_norm formula-decl nil vectors_2D vectors)
    (tau_mod_def const-decl
     "{rr: real | s * v < 0 AND norm(s) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil))
   nil))
 (tau_current_TCC1 0
  (tau_current_TCC1-1 nil 3543828654
   ("" (skeep* :preds? t) (("" (assert) nil nil)) nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (tau_current subtype "(vectors_2D.*(tcas_tau.s, tcas_tau.v))"
    "nznum")))
 (tau_current_TCC2 0
  (tau_current_TCC2-1 nil 3546872937
   ("" (skeep)
    (("" (skeep)
      (("" (cross-mult 1)
        (("" (lemma "sq_ge")
          (("" (inst - "norm(s)" "DMOD")
            (("" (assert)
              (("" (rewrite "sq_norm") (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sq_ge formula-decl nil sq reals)
    (sq_norm formula-decl nil vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (< const-decl "bool" reals nil) nil nil
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (* const-decl "real" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (div_mult_neg_ge1 formula-decl nil real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil
   (tau_current subtype
    "number_fields./(((number_fields.-)(sq.sq(tcas_tau.DMOD), vectors_2D.sqv(tcas_tau.s))), (vectors_2D.*(tcas_tau.s, tcas_tau.v)))"
    "{rr: reals.real | booleans.IMPLIES(booleans.AND(reals.<(vectors_2D.*(((vectors_2D.-)(tcas_tau.so, tcas_tau.si)), ((vectors_2D.-)(tcas_tau.vo, tcas_tau.vi))), 0), reals.>=(vectors_2D.norm((vectors_2D.-)(tcas_tau.so, tcas_tau.si)), tcas_tau.DMOD)), reals.>=(rr, 0))}")))
 (tau_mod_current_TCC1 0
  (tau_mod_current_TCC1-1 nil 3598206322 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (/= const-decl "boolean" notequal nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (* const-decl "real" vectors_2D vectors) nil
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (tau_mod_current subtype "(vectors_2D.-)(tcas_tau.vo, tcas_tau.vi)"
    "{v | vectors_2D.*((vectors_2D.-)(tcas_tau.so, tcas_tau.si), tcas_tau.v) /= 0}")))
 (tau_mod_current 0
  (tau_mod_current-2 nil 3546873738
   ("" (skeep)
    (("" (lemma "tau_mod_eq")
      (("" (inst?)
        (("" (assert)
          (("" (replaces -1)
            (("" (expand "tau_mod_def")
              (("" (expand "tau_current") (("" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((tau_mod_eq formula-decl nil tcas_tau nil)
    (tau_mod_def const-decl
     "{rr: real | s * v < 0 AND norm(s) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (* const-decl "real" vectors_2D vectors)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (/= const-decl "boolean" notequal nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil) nil
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil))
   nil)
  (tau_mod_current-1 nil 3546855173
   ("" (rewrite "tau_mod_rew")
    (("" (expand "tau_current") (("" (propax) nil nil)) nil)) nil)
   nil shostak))
 (tau_mod_tca_TCC1 0
  (tau_mod_tca_TCC1-1 nil 3595672988
   ("" (skeep) (("" (replaces -3) (("" (grind) nil nil)) nil)) nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (* const-decl "real" vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors))
   nil (tau_mod_tca subtype "tcas_tau.v" "Nz_vect2")))
 (tau_mod_tca_TCC2 0
  (tau_mod_tca_TCC2-1 nil 3595672988 ("" (subtype-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (* const-decl "real" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (tau_mod_tca subtype "tcas_tau.v"
    "{v | vectors_2D.*(tcas_tau.s, tcas_tau.v) /= 0}")))
 (tau_mod_tca 0
  (tau_mod_tca-1 nil 3595672990
   ("" (skeep)
    (("" (rewrite "tau_mod_eq")
      (("" (expand "Delta")
        (("" (expand "horizontal_tca")
          (("" (expand "tau_mod_def")
            (("" (cross-mult 1)
              (("" (ground)
                (("1" (cross-mult 1)
                  (("1" (expand "sq")
                    (("1" (expand "sqv")
                      (("1" (typepred "DMOD")
                        (("1" (hide -1)
                          (("1" (expand "*")
                            (("1" (expand "det")
                              (("1" (metit *) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (lemma "sqv_eq_0")
                  (("2" (inst?)
                    (("2" (assert)
                      (("2" (replaces -1) (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((tau_mod_eq formula-decl nil tcas_tau nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_mult_pos_neg_ge1 formula-decl nil extra_real_props nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D vectors)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (/= const-decl "boolean" notequal nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (times_div2 formula-decl nil real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (div_mult_neg_ge2 formula-decl nil real_props nil)
    (<= const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (det const-decl "real" det_2D vectors)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tau_mod_def const-decl
     "{rr: real | s * v < 0 AND norm(s) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (sq_nz_pos application-judgement "posreal" sq reals))
   shostak))
 (tau_mod_Theta_D 0
  (tau_mod_Theta_D-1 nil 3595587488
   ("" (skeep)
    (("" (rewrite "tau_mod_eq")
      (("" (expand "tau_mod_def")
        (("" (assert)
          (("" (expand "Theta_D")
            (("" (expand "root2b")
              (("" (cross-mult 2)
                (("1" (cross-mult 2)
                  (("1" (ground)
                    (("1"
                      (mult-by -3
                       "sqrt(discr2b(sqv(v), s * v, sqv(s) - sq(DMOD)))")
                      (("1" (assert)
                        (("1" (lemma "sq_ge")
                          (("1"
                            (inst -
                             "-sqrt(discr2b(sqv(v), s * v, sqv(s) - sq(DMOD))) * (s * v)"
                             "sq(DMOD) * sqv(v) - sqv(s) * sqv(v) +sq(s*v)")
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (hide -2)
                                  (("1"
                                    (split -)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (hide-all-but (-1 1))
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (rewrite "sq_times")
                                        (("1"
                                          (rewrite "sq_neg")
                                          (("1"
                                            (rewrite "sq_sqrt")
                                            (("1"
                                              (expand "discr2b")
                                              (("1"
                                                (expand "sq" 1 6)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "sq")
                                                    (("1"
                                                      (expand "sqv")
                                                      (("1"
                                                        (expand
                                                         "Delta")
                                                        (("1"
                                                          (typepred
                                                           "DMOD")
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (expand
                                                               "*")
                                                              (("1"
                                                                (expand
                                                                 "sqv")
                                                                (("1"
                                                                  (expand
                                                                   "*")
                                                                  (("1"
                                                                    (expand
                                                                     "det")
                                                                    (("1"
                                                                      (hide
                                                                       2)
                                                                      (("1"
                                                                        (expand
                                                                         "sq")
                                                                        (("1"
                                                                          (metit
                                                                           *)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2) (("2" (grind) nil nil)) nil)
                             ("3" (hide 2) (("3" (grind) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (lemma "sqrt_eq_0")
                        (("2" (inst?)
                          (("2" (split -)
                            (("1" (replace -1)
                              (("1"
                                (assert)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil)
                       ("3" (hide 2) (("3" (grind) nil nil)) nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (lemma "sqv_eq_0")
                        (("2" (inst?) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 3) (("2" (grind) nil nil)) nil))
                  nil)
                 ("2" (hide 3) (("2" (grind) nil nil)) nil)
                 ("3" (flatten) (("3" (rewrite "sqv_eq_0") nil nil))
                  nil)
                 ("4" (hide 3) (("4" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((tau_mod_eq formula-decl nil tcas_tau nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (root2b const-decl "real" quadratic_2b reals)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (sq_ge formula-decl nil sq reals)
    (sq_neg formula-decl nil sq reals)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_times formula-decl nil sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sqrt_0 formula-decl nil sqrt reals)
    (sqrt_eq_0 formula-decl nil sqrt reals)
    (times_div2 formula-decl nil real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil) nil
    (* const-decl "real" vectors_2D vectors) nil
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (discr2b const-decl "real" quadratic_2b reals)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (/= const-decl "boolean" notequal nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (div_mult_pos_neg_ge1 formula-decl nil extra_real_props nil)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (tau_mod_def const-decl
     "{rr: real | s * v < 0 AND norm(s) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil))
   shostak))
 (tau_current_at_numerator_TCC1 0
  (tau_current_at_numerator_TCC1-2 nil 3546876456
   ("" (skeep)
    (("" (lemma "dot_at_neg_deriv_domain") (("" (insteep) nil nil))
      nil))
    nil)
   ((dot_at_neg_deriv_domain formula-decl nil tcas_tau nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors))
   nil
   (tau_current_at_numerator assuming
    "analysis@derivatives[(tcas_tau.dot_at_neg?(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"))
  (tau_current_at_numerator_TCC1-1 nil 3543916507
   ("" (skeep)
    (("" (lemma "dot_at_neg_deriv_domain")
      (("" (inst - "si" "so" "vi" "vo") nil nil)) nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors)) nil
   (tau_current_at_numerator assuming
    "analysis@derivatives[(tcas_tau.dot_at_neg?(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?")))
 (tau_current_at_numerator_TCC2 0
  (tau_current_at_numerator_TCC2-2 nil 3546876482
   ("" (skeep)
    (("" (lemma "dot_at_neg_not_one_element") (("" (insteep) nil nil))
      nil))
    nil)
   ((dot_at_neg_not_one_element formula-decl nil tcas_tau nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors))
   nil
   (tau_current_at_numerator assuming
    "analysis@derivatives[(tcas_tau.dot_at_neg?(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"))
  (tau_current_at_numerator_TCC2-1 nil 3546876309
   ("" (assuming-tcc) nil nil) nil nil
   (tau_current_at_numerator assuming
    "analysis@derivatives[(tcas_tau.dot_at_neg?(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?")))
 (tau_current_at_numerator_TCC3 0
  (tau_current_at_numerator_TCC3-2 nil 3546876507
   ("" (skeep)
    (("" (lemma "derivable_sum[((dot_at_neg?(so, vo, si, vi)))]")
      ((""
        (inst -
         "LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv((so - si) + tr * (vo - vi))"
         "LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): -sq(DMOD)")
        (("1" (expand "+")
          (("1" (expand "sqv")
            (("1" (expand "*") (("1" (assert) nil nil)) nil)) nil))
          nil)
         ("2" (hide 2)
          (("2"
            (lemma "derivable_const[((dot_at_neg?(so, vo, si, vi)))]")
            (("2" (inst - "-sq(DMOD)")
              (("2" (expand "const_fun") (("2" (propax) nil nil)) nil))
              nil))
            nil))
          nil)
         ("3" (hide 2)
          (("3"
            (lemma "derivable_sum[((dot_at_neg?(so, vo, si, vi)))]")
            (("3"
              (inst -
               "LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vo-vi)*sq(tr)"
               "LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(so-si) + 2*tr*((so-si)*(vo-vi))")
              (("1" (expand "+")
                (("1" (expand "sqv")
                  (("1" (expand "*")
                    (("1" (assert)
                      (("1" (expand "sq") (("1" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2"
                  (lemma
                   "derivable_sum[((dot_at_neg?(so, vo, si, vi)))]")
                  (("2"
                    (inst -
                     "LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(so-si)"
                     "LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): 2*tr*((so-si)*(vo-vi))")
                    (("1" (expand "+") (("1" (propax) nil nil)) nil)
                     ("2" (expand "sqv")
                      (("2" (hide 2)
                        (("2"
                          (lemma
                           "derivable_prod[((dot_at_neg?(so, vo, si, vi)))]")
                          (("2"
                            (inst - "const_fun(2*((so-si)*(vo-vi)))"
                             "I[(dot_at_neg?(so, vo, si, vi))]")
                            (("2" (expand "*")
                              (("2"
                                (expand "I")
                                (("2"
                                  (expand "const_fun")
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (hide 2)
                      (("3"
                        (lemma
                         "derivable_const[((dot_at_neg?(so, vo, si, vi)))]")
                        (("3" (inst - "sqv(so-si)")
                          (("3" (expand "const_fun")
                            (("3" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (hide 2)
                (("3"
                  (lemma
                   "deriv_x_to_n[((dot_at_neg?(so, vo, si, vi)))]")
                  (("3" (inst - "2" "sqv(vo-vi)")
                    (("3" (assert)
                      (("3" (flatten)
                        (("3" (expand "^")
                          (("3" (expand "expt")
                            (("3" (expand "expt")
                              (("3"
                                (expand "expt")
                                (("3"
                                  (expand "sq")
                                  (("3" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dot_at_neg? const-decl "bool" tcas_tau nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (derivable_sum judgement-tcc nil derivatives analysis)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (derivable_prod judgement-tcc nil derivatives analysis) nil
    (bijective? const-decl "bool" functions nil)
    (I const-decl "(bijective?[T, T])" identity nil)
    (derivable_const application-judgement "deriv_fun" derivatives
     analysis)
    nil
    (constant_seq1 application-judgement "(convergent?)"
     convergence_ops analysis)
    (derivable_id name-judgement "deriv_fun" derivatives analysis)
    (id_fun_continuous name-judgement "continuous_fun"
     continuous_functions analysis)
    nil (deriv_x_to_n formula-decl nil derivatives analysis)
    (^ const-decl "real" exponentiation nil)
    (expt def-decl "real" exponentiation nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (const_fun const-decl "[T -> real]" real_fun_ops reals)
    (derivable_const judgement-tcc nil derivatives analysis)
    (real_minus_real_is_real application-judgement "real" reals nil)
    nil
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (* const-decl "real" vectors_2D vectors)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil) nil nil nil nil
    (derivable? const-decl "bool" derivatives analysis)
    (Vector type-eq-decl nil vectors_2D vectors)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors) nil
    (* const-decl "Vector" vectors_2D vectors)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (sq_nz_pos application-judgement "posreal" sq reals))
   nil
   (tau_current_at_numerator subtype
    "(LAMBDA (tr: (tcas_tau.dot_at_neg?(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi))): (number_fields.-)(vectors_2D.sqv((vectors_2D.+)(((vectors_2D.-)(tcas_tau.so, tcas_tau.si)), vectors_2D.*(tr, ((vectors_2D.-)(tcas_tau.vo, tcas_tau.vi))))), sq.sq(tcas_tau.DMOD)))"
    "deriv_fun[(dot_at_neg?(so, vo, si, vi))]"))
  (tau_current_at_numerator_TCC3-1 nil 3546876309
   ("" (subtype-tcc) nil nil) nil nil
   (tau_current_at_numerator subtype
    "(LAMBDA (tr: (tcas_tau.dot_at_neg?(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi))): (number_fields.-)(vectors_2D.sqv((vectors_2D.+)(((vectors_2D.-)(tcas_tau.so, tcas_tau.si)), vectors_2D.*(tr, ((vectors_2D.-)(tcas_tau.vo, tcas_tau.vi))))), sq.sq(tcas_tau.DMOD)))"
    "deriv_fun[(dot_at_neg?(so, vo, si, vi))]")))
 (tau_current_at_denominator_TCC1 0
  (tau_current_at_denominator_TCC1-2 nil 3546876538
   ("" (skeep)
    (("" (lemma "deriv_linear_fun[((dot_at_neg?(so, vo, si, vi)))]")
      (("" (inst - "-sqv(vo-vi)" "-(so-si)*(vo-vi)")
        (("" (assert)
          (("" (flatten)
            (("" (hide -2) (("" (grind :exclude "derivable?") nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dot_at_neg? const-decl "bool" tcas_tau nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (deriv_linear_fun formula-decl nil derivatives analysis)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (real_minus_real_is_real application-judgement "real" reals nil)
    nil (* const-decl "real" vectors_2D vectors) nil
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (minus_real_is_real application-judgement "real" reals nil))
   nil
   (tau_current_at_denominator subtype
    "(LAMBDA (tr: (tcas_tau.dot_at_neg?(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi))): vectors_2D.*((vectors_2D.-)(((vectors_2D.+)(((vectors_2D.-)(tcas_tau.so, tcas_tau.si)), vectors_2D.*(tr, ((vectors_2D.-)(tcas_tau.vo, tcas_tau.vi)))))), ((vectors_2D.-)(tcas_tau.vo, tcas_tau.vi))))"
    "deriv_fun[(dot_at_neg?(so, vo, si, vi))]"))
  (tau_current_at_denominator_TCC1-1 nil 3543916507
   ("" (skeep)
    (("" (lemma "deriv_linear_fun[((dot_at_neg?(so, vo, si, vi)))]")
      (("" (inst - "-sqv(vo-vi)" "-(so-si)*(vo-vi)")
        (("" (assert)
          (("" (flatten)
            (("" (hide -2) (("" (grind :exclude "derivable?") nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors)
    (deriv_linear_fun formula-decl nil derivatives analysis)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors))
   nil
   (tau_current_at_denominator subtype
    "(LAMBDA (tr: (tcas_tau.dot_at_neg?(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi))): vectors_2D.*((vectors_2D.-)(((vectors_2D.+)(((vectors_2D.-)(tcas_tau.so, tcas_tau.si)), vectors_2D.*(tr, ((vectors_2D.-)(tcas_tau.vo, tcas_tau.vi)))))), ((vectors_2D.-)(tcas_tau.vo, tcas_tau.vi))))"
    "deriv_fun[(dot_at_neg?(so, vo, si, vi))]")))
 (tau_current_at_TCC1 0
  (tau_current_at_TCC1-1 nil 3543916507 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (dot_at_neg? const-decl "bool" tcas_tau nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dot_at const-decl "real" tcas_tau nil) nil
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors) nil
    (* const-decl "real" vectors_2D vectors)
    (tau_current_at_denominator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil))
   nil
   (tau_current_at subtype
    "tcas_tau.tau_current_at_denominator(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi)"
    "[(tcas_tau.dot_at_neg?(tcas_tau.so, tcas_tau.vo, tcas_tau.si, tcas_tau.vi)) -> nzreal]")))
 (tau_current_min_unbounded_TCC1 0
  (tau_current_min_unbounded_TCC1-1 nil 3543839804
   ("" (skosimp*)
    (("" (lemma "cauchy_schwartz")
      (("" (inst?) (("" (assert) nil nil)) nil)) nil))
    nil)
   ((minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil
   (tau_current_min_unbounded subtype
    "(number_fields.-)(horizontal[tcas_tau.DMOD].Delta(tcas_tau.s, tcas_tau.v))"
    "nnreal")))
 (tau_current_min_unbounded_TCC2 0
  (tau_current_min_unbounded_TCC2-1 nil 3543839804
   ("" (skosimp*)
    (("" (lemma "sqv_eq_0")
      (("" (inst?)
        (("" (assert)
          (("" (case "vo!1 = vi!1 + v!1")
            (("1" (replace -2) (("1" (assert) nil nil)) nil)
             ("2" (replace -3)
              (("2" (hide -)
                (("2" (decompose-equality)
                  (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (<= const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (Delta const-decl "real" horizontal ACCoRD) nil
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil))
   nil
   (tau_current_min_unbounded subtype "vectors_2D.sqv(tcas_tau.v)"
    "nznum")))
 (tau_current_min_unbounded_TCC3 0
  (tau_current_min_unbounded_TCC3-1 nil 3543839804
   ("" (skosimp*)
    (("" (cross-mult 1)
      (("" (ground)
        (("" (lemma "sqv_eq_0")
          (("" (inst?)
            (("" (assert)
              (("" (case "vo!1 = vi!1 + v!1")
                (("1" (replace -2) (("1" (assert) nil nil)) nil)
                 ("2" (replace -3)
                  (("2" (hide-all-but 1)
                    (("2" (decompose-equality)
                      (("1" (grind) nil nil) ("2" (grind) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_mult_pos_neg_ge1 formula-decl nil extra_real_props nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (/= const-decl "boolean" notequal nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (add_zero_right formula-decl nil vectors_2D vectors) nil
    (Delta const-decl "real" horizontal ACCoRD)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil
   (tau_current_min_unbounded subtype
    "number_fields./(number_fields.*(2, sqrt.sqrt(tcas_tau.cs)), vectors_2D.sqv(tcas_tau.v))"
    "nnreal")))
 (tau_current_min_unbounded_def_TCC1 0
  (tau_current_min_unbounded_def_TCC1-1 nil 3543840768
   ("" (subtype-tcc) nil nil)
   ((real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (/= const-decl "boolean" notequal nil) nil
    (sq const-decl "nonneg_real" sq reals)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (tau_current_min_unbounded_def subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.tr, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.tr, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}")))
 (tau_current_min_unbounded_def_TCC2 0
  (tau_current_min_unbounded_def_TCC2-1 nil 3546791114
   ("" (subtype-tcc) nil nil)
   ((real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (/= const-decl "boolean" notequal nil) nil
    (sq const-decl "nonneg_real" sq reals)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (tau_current_min_unbounded_def subtype "tcas_tau.vi"
    "{vi | booleans.AND(tcas_tau.vi /= tcas_tau.vo, reals.<=(horizontal[tcas_tau.DMOD].Delta((vectors_2D.-)(tcas_tau.so, tcas_tau.si), (vectors_2D.-)(tcas_tau.vo, tcas_tau.vi)), 0))}")))
 (tau_current_min_unbounded_def 0
  (tau_current_min_unbounded_def-1 nil 3543840770
   ("" (skeep)
    (("" (name "ss" "so-si")
      (("" (replace -1)
        (("" (name "vv" "vo-vi")
          (("" (replace -1)
            (("" (assert)
              (("" (flatten)
                (("" (skeep 2)
                  (("" (expand "tau_current")
                    (("" (cross-mult 2)
                      (("" (ground)
                        (("1" (hide +)
                          (("1" (replace -2 :dir rl)
                            (("1" (replace -3 :dir rl)
                              (("1" (grind) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (name "a" "sqv(vv)")
                          (("2" (case "NOT a > 0")
                            (("1" (case "vo=vi")
                              (("1"
                                (replace -1)
                                (("1" (propax) nil nil))
                                nil)
                               ("2"
                                (hide-all-but (1 2))
                                (("2"
                                  (expand "a")
                                  (("2"
                                    (lemma "sqv_eq_0")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (case "vo = vi+vv")
                                          (("1"
                                            (replace -2)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (hide-all-but 1)
                                            (("2"
                                              (expand "vv")
                                              (("2"
                                                (decompose-equality)
                                                (("1" (grind) nil nil)
                                                 ("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (label "apos" -1)
                              (("2"
                                (label "sssname" -4)
                                (("2"
                                  (label "vvname" -3)
                                  (("2"
                                    (label "aname" -2)
                                    (("2"
                                      (name
                                       "RR"
                                       "tau_current_min_unbounded(so, vo, si, vi)")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (label "RRname" -1)
                                          (("2"
                                            (name
                                             "b"
                                             "(2*ss+RR*vv)*vv")
                                            (("2"
                                              (label "bname" -1)
                                              (("2"
                                                (name
                                                 "c"
                                                 "(ss+RR*vv)*ss-sq(DMOD)")
                                                (("2"
                                                  (label "cname" -1)
                                                  (("2"
                                                    (name
                                                     "ff"
                                                     "quadratic(a,b,c)")
                                                    (("2"
                                                      (case
                                                       "discr(a,b,c) = 0")
                                                      (("1"
                                                        (case
                                                         "NOT ff(tr) < 0")
                                                        (("1"
                                                          (replace
                                                           "vvname")
                                                          (("1"
                                                            (case
                                                             "(so + tr * vo - (si + tr * vi)) = ss + tr*vv")
                                                            (("1"
                                                              (replaces
                                                               -1)
                                                              (("1"
                                                                (hide
                                                                 -1)
                                                                (("1"
                                                                  (hide
                                                                   -)
                                                                  (("1"
                                                                    (hide
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "ff")
                                                                      (("1"
                                                                        (expand
                                                                         "c")
                                                                        (("1"
                                                                          (expand
                                                                           "b")
                                                                          (("1"
                                                                            (expand
                                                                             "a")
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "ss")
                                                                (("2"
                                                                  (expand
                                                                   "vv")
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "a_gt_0_discr_gt_0")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "a"
                                                             "b"
                                                             "c"
                                                             "tr")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "ff"
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "quadratic")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 3)
                                                        (("2"
                                                          (hide-all-but
                                                           ("apos"
                                                            1
                                                            3))
                                                          (("2"
                                                            (expand
                                                             "a")
                                                            (("2"
                                                              (expand
                                                               "b")
                                                              (("2"
                                                                (expand
                                                                 "c")
                                                                (("2"
                                                                  (expand
                                                                   "discr")
                                                                  (("2"
                                                                    (rewrite
                                                                     "dot_add_left")
                                                                    (("2"
                                                                      (rewrite
                                                                       "dot_add_left")
                                                                      (("2"
                                                                        (rewrite
                                                                         "sq_plus")
                                                                        (("2"
                                                                          (expand
                                                                           "sqv")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (case
                                                                               "ss*vv=vv*ss")
                                                                              (("1"
                                                                                (replace
                                                                                 -1
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (case
                                                                                       "RR*(vv*vv) = 2*sqrt(-Delta[DMOD](ss,vv))")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "sq_times")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "sq_times")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sq")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "Delta")
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "RR"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "tau_current_min_unbounded")
                                                                                            (("2"
                                                                                              (reveal
                                                                                               "sssname")
                                                                                              (("2"
                                                                                                (reveal
                                                                                                 "vvname")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "sqv")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_mult_pos_neg_ge1 formula-decl nil extra_real_props nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (tau_current_min_unbounded const-decl "nnreal" tcas_tau nil)
    (nnreal type-eq-decl nil real_types nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (/= const-decl "boolean" notequal nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (discr const-decl "real" quadratic reals)
    (a_gt_0_discr_gt_0 formula-decl nil quadratic reals) nil
    (TRUE const-decl "bool" booleans nil) nil nil nil
    (< const-decl "bool" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_times formula-decl nil sq reals) nil
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (sq_plus formula-decl nil sq reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (quadratic const-decl "real" quadratic reals) nil
    (add_zero_right formula-decl nil vectors_2D vectors) nil
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (det const-decl "real" det_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil))
   shostak))
 (tau_current_at_Delta_0_TCC1 0
  (tau_current_at_Delta_0_TCC1-1 nil 3548413845
   ("" (skosimp*)
    (("" (lemma "sqv_eq_0")
      (("" (inst?)
        (("" (assert) (("" (replace -1) (("" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil))
   nil
   (tau_current_at_Delta_0 subtype "vectors_2D.sqv(tcas_tau.v)"
    "nznum")))
 (tau_current_at_Delta_0 0
  (tau_current_at_Delta_0-1 nil 3548413846
   ("" (skeep)
    (("" (name "ss" "so-si")
      (("" (replace -1)
        (("" (label "ssname" -1)
          (("" (name "vv" "vo-vi")
            (("" (replace -1)
              (("" (label "vvname" -1)
                (("" (assert)
                  (("" (flatten)
                    (("" (skeep 2)
                      (("" (name "tca2" "(-ss * vv) / sqv(vv)")
                        (("" (replace -1)
                          (("" (name "sn" "ss + tca2*vv")
                            (("" (case "Delta[DMOD](sn,vv) = 0")
                              (("1"
                                (case "sn*vv = 0")
                                (("1"
                                  (expand "tau_current_at")
                                  (("1"
                                    (expand
                                     "tau_current_at_denominator")
                                    (("1"
                                      (expand
                                       "tau_current_at_numerator")
                                      (("1"
                                        (expand "/")
                                        (("1"
                                          (replace "ssname")
                                          (("1"
                                            (replace "vvname")
                                            (("1"
                                              (name "td" "r-tca2")
                                              (("1"
                                                (case
                                                 "ss + r*vv = sn + td*vv")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (rewrite
                                                       "dot_neg_left")
                                                      (("1"
                                                        (rewrite
                                                         "dot_neg_left")
                                                        (("1"
                                                          (rewrite
                                                           "dot_add_left")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (rewrite
                                                               "sqv_add")
                                                              (("1"
                                                                (case
                                                                 "sqv(sn) = sq(DMOD)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (rewrite
                                                                           "sqv_scal")
                                                                          (("1"
                                                                            (replace
                                                                             -4)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "sqv")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (cross-mult
                                                                                     2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "sq")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "Theta_D_on_D[DMOD]")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "-1"
                                                                     "vv"
                                                                     "ss")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "Theta_D")
                                                                        (("1"
                                                                          (expand
                                                                           "root2b")
                                                                          (("1"
                                                                            (lemma
                                                                             "Delta_discr2b[DMOD]")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "vv"
                                                                               "ss")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1
                                                                                   :dir
                                                                                   rl)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -11)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (replace
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace -1 :dir rl)
                                                  (("2"
                                                    (expand "sn" +)
                                                    (("2"
                                                      (rewrite
                                                       "scal_sub_left")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "sn" +)
                                  (("2"
                                    (expand "tca2" +)
                                    (("2"
                                      (rewrite "dot_add_left")
                                      (("2"
                                        (expand "sqv")
                                        (("2"
                                          (rewrite "dot_neg_left")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "sn")
                                (("2"
                                  (rewrite "Delta_eq" + :dir rl)
                                  nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (Delta const-decl "real" horizontal ACCoRD) nil
    (tau_current_at const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (tau_current_at_numerator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (dot_at_neg? const-decl "bool" tcas_tau nil)
    (scal_sub_left formula-decl nil vectors_2D vectors) nil
    (dot_neg_left formula-decl nil vectors_2D vectors)
    (minus_real_is_real application-judgement "real" reals nil)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (sqv_add formula-decl nil vectors_2D vectors)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (dot_scal_canon formula-decl nil vectors_2D vectors)
    (Theta_D_on_D formula-decl nil horizontal ACCoRD)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (root2b const-decl "real" quadratic_2b reals)
    (sqrt_0 formula-decl nil sqrt reals)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Sign type-eq-decl nil sign reals)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors) nil
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (div_cancel3 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    nil
    (tau_current_at_denominator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (Delta_eq formula-decl nil horizontal ACCoRD)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (* const-decl "real" vectors_2D vectors) nil
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors))
   shostak))
 (unbounded_nominal_tau_TCC1 0
  (unbounded_nominal_tau_TCC1-2 nil 3574549922
   ("" (skosimp*)
    (("" (lemma "sqv_eq_0")
      (("" (inst?)
        (("" (assert)
          (("" (typepred "vi!1")
            (("" (flatten)
              (("" (case "vo!1 = vi!1 + v!1")
                (("1" (replace -2) (("1" (assert) nil nil)) nil)
                 ("2" (replace -3)
                  (("2" (hide-all-but 1)
                    (("2" (decompose-equality)
                      (("1" (grind) nil nil) ("2" (grind) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    nil
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil))
   nil
   (unbounded_nominal_tau subtype "vectors_2D.sqv(tcas_tau.v)"
    "nznum"))
  (unbounded_nominal_tau_TCC1-1 nil 3574549823
   ("" (subtype-tcc) nil nil) nil nil
   (unbounded_nominal_tau subtype "vectors_2D.sqv(tcas_tau.v)"
    "nznum")))
 (nom_tau_dot_lt_TCC1 0
  (nom_tau_dot_lt_TCC1-2 nil 3574551627
   ("" (skosimp*) (("" (replace -3) (("" (assert) nil nil)) nil)) nil)
   ((sub_eq_args formula-decl nil vectors_2D vectors)) nil
   (nom_tau_dot_lt subtype "tcas_tau.vi"
    "{vi | tcas_tau.vi /= tcas_tau.vo}"))
  (nom_tau_dot_lt_TCC1-1 nil 3574551208 ("" (subtype-tcc) nil nil) nil
   nil
   (nom_tau_dot_lt subtype "tcas_tau.vi"
    "{vi | tcas_tau.vi /= tcas_tau.vo}")))
 (nom_tau_dot_lt 0
  (nom_tau_dot_lt-1 nil 3574551213
   ("" (skeep)
    (("" (expand "unbounded_nominal_tau")
      (("" (assert)
        (("" (name "tz" "-((so - si) * (vo - vi)) / sqv(vo - vi)")
          (("" (case "((so-si) + tz*(vo-vi))*(vo-vi) = 0")
            (("1" (case "sqv(vo-vi) > 0")
              (("1" (mult-by -1 "p/2")
                (("1" (replace -3)
                  (("1" (hide (-3 1)) (("1" (grind) nil nil)) nil))
                  nil))
                nil)
               ("2" (lemma "sqv_eq_0")
                (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
              nil)
             ("2" (hide 3)
              (("2" (hide -1)
                (("2" (expand "tz" +)
                  (("2" (rewrite "dot_add_left")
                    (("2" (expand "sqv") (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors) nil
    (* const-decl "real" vectors_2D vectors)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil) nil
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (> const-decl "bool" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis))
   nil))
 (tau_current_min_unbounded_attained_TCC1 0
  (tau_current_min_unbounded_attained_TCC1-2 nil 3574552327
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (tau_current_min_unbounded_attained subtype "tcas_tau.vi"
    "{vi | booleans.AND(tcas_tau.vi /= tcas_tau.vo, reals.<=(horizontal[tcas_tau.DMOD].Delta((vectors_2D.-)(tcas_tau.so, tcas_tau.si), (vectors_2D.-)(tcas_tau.vo, tcas_tau.vi)), 0))}"))
  (tau_current_min_unbounded_attained_TCC1-1 nil 3574551985
   ("" (subtype-tcc) nil nil) nil nil
   (tau_current_min_unbounded_attained subtype "tcas_tau.vi"
    "{vi | booleans.AND(tcas_tau.vi /= tcas_tau.vo, reals.<=(horizontal[tcas_tau.DMOD].Delta((vectors_2D.-)(tcas_tau.so, tcas_tau.si), (vectors_2D.-)(tcas_tau.vo, tcas_tau.vi)), 0))}")))
 (tau_current_min_unbounded_attained_TCC2 0
  (tau_current_min_unbounded_attained_TCC2-2 nil 3574552348
   ("" (skeep*)
    (("" (replace -1 :hide? T)
      (("" (replace -1 :hide? t)
        (("" (hide-all-but (-5 -6)) (("" (grind) nil nil)) nil)) nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (* const-decl "real" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (tau_current_min_unbounded_attained subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.tr, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.tr, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}"))
  (tau_current_min_unbounded_attained_TCC2-1 nil 3574551985
   ("" (subtype-tcc) nil nil) nil nil
   (tau_current_min_unbounded_attained subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.tr, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.tr, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}")))
 (tau_current_min_unbounded_attained 0
  (tau_current_min_unbounded_attained-3 nil 3574552259
   ("" (skeep)
    (("" (name "ss" "so-si")
      (("" (label "ssname" -1)
        (("" (replace -1)
          (("" (name "vv" "vo-vi")
            (("" (replace -1)
              (("" (label "vvname" -1)
                ((""
                  (name "RR"
                        "tau_current_min_unbounded(so, vo, si, vi)")
                  (("1" (replace -1)
                    (("1" (label "RRname" -1)
                      (("1" (assert)
                        (("1" (flatten)
                          (("1" (case "NOT RR>0")
                            (("1" (hide 3)
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "RR")
                                  (("1"
                                    (expand
                                     "tau_current_min_unbounded")
                                    (("1"
                                      (cross-mult 1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (ground)
                                          (("1"
                                            (replace "vvname")
                                            (("1"
                                              (replace "ssname")
                                              (("1"
                                                (lemma "sqv_eq_0")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "vo +zero = vi + (vo-vi)")
                                                      (("1"
                                                        (replace
                                                         "vvname")
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2"
                                (case
                                 "NOT (ss + unbounded_nominal_tau(so, vo, si, vi, RR) * vv) * vv < 0")
                                (("1"
                                  (hide 3)
                                  (("1"
                                    (expand "unbounded_nominal_tau")
                                    (("1"
                                      (name
                                       "tca1"
                                       "-((so - si) * (vo - vi)) / sqv(vo - vi)")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (case
                                           "(ss + tca1*vv)*vv = 0")
                                          (("1"
                                            (case "sqv(vv) > 0")
                                            (("1"
                                              (mult-by -1 "RR")
                                              (("1"
                                                (hide-all-but
                                                 (-1 -2 1))
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (lemma "sqv_eq_0")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (case
                                                     "vo +zero = vi + vv")
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (replace
                                                       "vvname"
                                                       +
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace "ssname")
                                            (("2"
                                              (replace "vvname")
                                              (("2"
                                                (replace -1 :dir rl)
                                                (("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (rewrite
                                                     "dot_add_left")
                                                    (("2"
                                                      (expand "sqv")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (label "RRpos" -2)
                                    (("2"
                                      (name "a" "sqv(vv)")
                                      (("2"
                                        (case "NOT a > 0")
                                        (("1"
                                          (hide-all-but (1 2))
                                          (("1"
                                            (expand "a")
                                            (("1"
                                              (lemma "sqv_eq_0")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case
                                                     "vo +zero = vi + vv")
                                                    (("1"
                                                      (expand "vv")
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (expand "vv")
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (label "apos" -1)
                                          (("2"
                                            (label "aname" -2)
                                            (("2"
                                              (name
                                               "b"
                                               "(2*ss+RR*vv)*vv")
                                              (("2"
                                                (label "bname" -1)
                                                (("2"
                                                  (name
                                                   "c"
                                                   "(ss+RR*vv)*ss-sq(DMOD)")
                                                  (("2"
                                                    (label "cname" -1)
                                                    (("2"
                                                      (name
                                                       "ff"
                                                       "quadratic(a,b,c)")
                                                      (("2"
                                                        (case
                                                         "discr(a,b,c) = 0")
                                                        (("1"
                                                          (case
                                                           "ff(-b/(2*a)) = 0")
                                                          (("1"
                                                            (expand
                                                             "tau_current"
                                                             +)
                                                            (("1"
                                                              (case
                                                               "(so + unbounded_nominal_tau(so, vo, si, vi, RR) * vo -
                                                                                (si + unbounded_nominal_tau(so, vo, si, vi, RR) * vi)) = ss + unbounded_nominal_tau(so, vo, si, vi, RR) * vv")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (replace
                                                                   "vvname")
                                                                  (("1"
                                                                    (cross-mult
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "ff"
                                                                       -2)
                                                                      (("1"
                                                                        (case
                                                                         "NOT unbounded_nominal_tau(so, vo, si, vi, RR) = -b/(2*a)")
                                                                        (("1"
                                                                          (expand
                                                                           "unbounded_nominal_tau"
                                                                           1)
                                                                          (("1"
                                                                            (replace
                                                                             "vvname")
                                                                            (("1"
                                                                              (replace
                                                                               "ssname")
                                                                              (("1"
                                                                                (expand
                                                                                 "b"
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "a"
                                                                                   1)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "dot_add_left")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sqv")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replace
                                                                           -1
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (hide-all-but
                                                                             (-3
                                                                              +))
                                                                            (("2"
                                                                              (expand
                                                                               "a")
                                                                              (("2"
                                                                                (expand
                                                                                 "b")
                                                                                (("2"
                                                                                  (expand
                                                                                   "c")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "quadratic")
                                                                                    (("2"
                                                                                      (hide
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind
                                                                                         :exclude
                                                                                         "unbounded_nominal_tau")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "ss")
                                                                  (("2"
                                                                    (expand
                                                                     "vv")
                                                                    (("2"
                                                                      (grind
                                                                       :exclude
                                                                       "unbounded_nominal_tau")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case
                                                             "sq(b)/a = 4*c")
                                                            (("1"
                                                              (hide-all-but
                                                               (-1 1))
                                                              (("1"
                                                                (expand
                                                                 "ff")
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (cross-mult
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "discr"
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "discr"
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "b"
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "a"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "c"
                                                                 1)
                                                                (("2"
                                                                  (rewrite
                                                                   "dot_add_left")
                                                                  (("2"
                                                                    (rewrite
                                                                     "sq_plus")
                                                                    (("2"
                                                                      (rewrite
                                                                       "sq_times")
                                                                      (("2"
                                                                        (rewrite
                                                                         "sq_times")
                                                                        (("2"
                                                                          (expand
                                                                           "RR"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "tau_current_min_unbounded")
                                                                            (("2"
                                                                              (rewrite
                                                                               "sq_div")
                                                                              (("2"
                                                                                (replace
                                                                                 "vvname")
                                                                                (("2"
                                                                                  (replace
                                                                                   "ssname")
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "dot_add_left")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "dot_add_left")
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "dot_add_left")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "sqv")
                                                                                          (("2"
                                                                                            (name
                                                                                             "vvsq"
                                                                                             "vv*vv")
                                                                                            (("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "sq")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (name
                                                                                                     "A"
                                                                                                     "sqrt(-Delta[DMOD](ss,vv))")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "ss*vv=vv*ss")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "A*A = -Delta[DMOD](ss,vv)")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "Delta_discr2b[DMOD]")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "vv"
                                                                                                                         "ss")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1
                                                                                                                             +)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "discr2b")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "sq")
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "vvsq")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "sqv")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "vo +zero = vi + vv")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "vv"
                                                                                                                               +)
                                                                                                                              (("2"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "A"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "sq_sqrt")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "-Delta[DMOD](ss,vv)")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert)
                    (("2" (replace -1)
                      (("2" (replace -2) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (tau_current_min_unbounded const-decl "nnreal" tcas_tau nil)
    (nnreal type-eq-decl nil real_types nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sq const-decl "nonneg_real" sq reals)
    (quadratic const-decl "real" quadratic reals)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq_times formula-decl nil sq reals)
    (sq_div formula-decl nil sq reals) nil
    (sq_sqrt formula-decl nil sqrt reals)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors) nil
    (discr2b const-decl "real" quadratic_2b reals)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (sq_plus formula-decl nil sq reals) nil nil
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    nil (sq_nz_pos application-judgement "posreal" sq reals)
    (div_cancel3 formula-decl nil real_props nil) nil
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (discr const-decl "real" quadratic reals) nil nil
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (* const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (< const-decl "bool" reals nil) nil
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_mult_pos_neg_gt1 formula-decl nil extra_real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals) nil
    nil nil nil
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (+ const-decl "Vector" vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil)
  (tau_current_min_unbounded_attained-2 nil 3574552154
   ("" (skeep)
    (("" (name "ss" "so-si")
      (("" (label "ssname" -1)
        (("" (replace -1)
          (("" (name "vv" "vo-vi")
            (("" (replace -1)
              (("" (label "vvname" -1)
                ((""
                  (name "r"
                        "tau_current_min_unbounded(so, vo, si, vi)")
                  (("1" (replace -1)
                    (("1" (label "rname" -1)
                      (("1" (assert)
                        (("1" (flatten)
                          (("1" (case "NOT r>0")
                            (("1" (hide 3)
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "r")
                                  (("1"
                                    (expand
                                     "tau_current_min_unbounded")
                                    (("1"
                                      (cross-mult 1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (ground)
                                          (("1"
                                            (replace "vvname")
                                            (("1"
                                              (replace "ssname")
                                              (("1"
                                                (lemma "sqv_eq_0")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "vo +zero = vi + (vo-vi)")
                                                      (("1"
                                                        (replace
                                                         "vvname")
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (assert)
                                                            nil)))))
                                                       ("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil)))))))))))))))))))
                                       ("2" (assert) nil)))))))))))
                             ("2" (assert)
                              (("2"
                                (case
                                 "NOT (ss + unbounded_nominal_tau(so, vo, si, vi, r) * vv) * vv < 0")
                                (("1"
                                  (hide 3)
                                  (("1"
                                    (expand "unbounded_nominal_tau")
                                    (("1"
                                      (name
                                       "tca1"
                                       "-((so - si) * (vo - vi)) / sqv(vo - vi)")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (case
                                           "(ss + tca1*vv)*vv = 0")
                                          (("1"
                                            (case "sqv(vv) > 0")
                                            (("1"
                                              (mult-by -1 "r")
                                              (("1"
                                                (hide-all-but
                                                 (-1 -2 1))
                                                (("1" (grind) nil)))))
                                             ("2"
                                              (lemma "sqv_eq_0")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (case
                                                     "vo +zero = vi + vv")
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (assert)
                                                        nil)))
                                                     ("2"
                                                      (replace
                                                       "vvname"
                                                       +
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil)))))))))))))))
                                           ("2"
                                            (replace "ssname")
                                            (("2"
                                              (replace "vvname")
                                              (("2"
                                                (replace -1 :dir rl)
                                                (("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (rewrite
                                                     "dot_add_left")
                                                    (("2"
                                                      (expand "sqv")
                                                      (("2"
                                                        (assert)
                                                        nil)))))))))))))))))))))))
                                 ("2"
                                  (assert)
                                  (("2"
                                    (label "rpos" -2)
                                    (("2"
                                      (name "a" "sqv(vv)")
                                      (("2"
                                        (case "NOT a > 0")
                                        (("1"
                                          (hide-all-but (1 2))
                                          (("1"
                                            (expand "a")
                                            (("1"
                                              (lemma "sqv_eq_0")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case
                                                     "vo +zero = vi + vv")
                                                    (("1"
                                                      (expand "vv")
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (assert)
                                                          nil)))))
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (expand "vv")
                                                        (("2"
                                                          (grind)
                                                          nil)))))))))))))))))
                                         ("2"
                                          (label "apos" -1)
                                          (("2"
                                            (label "aname" -2)
                                            (("2"
                                              (name
                                               "b"
                                               "(2*ss+r*vv)*vv")
                                              (("2"
                                                (label "bname" -1)
                                                (("2"
                                                  (name
                                                   "c"
                                                   "(ss+r*vv)*ss-sq(DMOD)")
                                                  (("2"
                                                    (label "cname" -1)
                                                    (("2"
                                                      (name
                                                       "ff"
                                                       "quadratic(a,b,c)")
                                                      (("2"
                                                        (case
                                                         "discr(a,b,c) = 0")
                                                        (("1"
                                                          (case
                                                           "ff(-b/(2*a)) = 0")
                                                          (("1"
                                                            (expand
                                                             "tau_current"
                                                             +)
                                                            (("1"
                                                              (case
                                                               "(so + unbounded_nominal_tau(so, vo, si, vi, r) * vo -
                                                                                                   (si + unbounded_nominal_tau(so, vo, si, vi, r) * vi)) = ss + unbounded_nominal_tau(so, vo, si, vi, r) * vv")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (replace
                                                                   "vvname")
                                                                  (("1"
                                                                    (cross-mult
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "ff"
                                                                       -2)
                                                                      (("1"
                                                                        (case
                                                                         "NOT unbounded_nominal_tau(so, vo, si, vi, r) = -b/(2*a)")
                                                                        (("1"
                                                                          (expand
                                                                           "unbounded_nominal_tau"
                                                                           1)
                                                                          (("1"
                                                                            (replace
                                                                             "vvname")
                                                                            (("1"
                                                                              (replace
                                                                               "ssname")
                                                                              (("1"
                                                                                (expand
                                                                                 "b"
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "a"
                                                                                   1)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "dot_add_left")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sqv")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)))))))))))))))))
                                                                         ("2"
                                                                          (replace
                                                                           -1
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (hide-all-but
                                                                             (-3
                                                                              +))
                                                                            (("2"
                                                                              (expand
                                                                               "a")
                                                                              (("2"
                                                                                (expand
                                                                                 "b")
                                                                                (("2"
                                                                                  (expand
                                                                                   "c")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "quadratic")
                                                                                    (("2"
                                                                                      (hide
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind
                                                                                         :exclude
                                                                                         "unbounded_nominal_tau")
                                                                                        nil)))))))))))))))))))))))))
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "ss")
                                                                  (("2"
                                                                    (expand
                                                                     "vv")
                                                                    (("2"
                                                                      (grind
                                                                       :exclude
                                                                       "unbounded_nominal_tau")
                                                                      nil)))))))))))
                                                           ("2"
                                                            (case
                                                             "sq(b)/a = 4*c")
                                                            (("1"
                                                              (hide-all-but
                                                               (-1 1))
                                                              (("1"
                                                                (expand
                                                                 "ff")
                                                                (("1"
                                                                  (grind)
                                                                  nil)))))
                                                             ("2"
                                                              (cross-mult
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "discr"
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  nil)))))))
                                                           ("3"
                                                            (assert)
                                                            nil)))
                                                         ("2"
                                                          (expand
                                                           "discr"
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "b"
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "a"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "c"
                                                                 1)
                                                                (("2"
                                                                  (rewrite
                                                                   "dot_add_left")
                                                                  (("2"
                                                                    (rewrite
                                                                     "sq_plus")
                                                                    (("2"
                                                                      (rewrite
                                                                       "sq_times")
                                                                      (("2"
                                                                        (rewrite
                                                                         "sq_times")
                                                                        (("2"
                                                                          (expand
                                                                           "r"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "tau_current_min_unbounded")
                                                                            (("2"
                                                                              (rewrite
                                                                               "sq_div")
                                                                              (("2"
                                                                                (replace
                                                                                 "vvname")
                                                                                (("2"
                                                                                  (replace
                                                                                   "ssname")
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "dot_add_left")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "dot_add_left")
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "dot_add_left")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "sqv")
                                                                                          (("2"
                                                                                            (name
                                                                                             "vvsq"
                                                                                             "vv*vv")
                                                                                            (("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "sq")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (name
                                                                                                     "A"
                                                                                                     "sqrt(-Delta[DMOD](ss,vv))")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "ss*vv=vv*ss")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "A*A = -Delta[DMOD](ss,vv)")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "Delta_discr2b[DMOD]")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "vv"
                                                                                                                         "ss")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1
                                                                                                                             +)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "discr2b")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "sq")
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "vvsq")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "sqv")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil)))))))))))))))
                                                                                                                         ("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "vo +zero = vi + vv")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil)))
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "vv"
                                                                                                                               +)
                                                                                                                              (("2"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (grind)
                                                                                                                                  nil)))))))))))))))))
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "A"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "sq_sqrt")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "-Delta[DMOD](ss,vv)")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil)))))))))))))))
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))))))))
                                                         ("3"
                                                          (assert)
                                                          nil)))))))))))))))))))))))))))))))))))))))
                   ("2" (assert)
                    (("2" (replace -1)
                      (("2" (replace -2)
                        (("2" (assert) nil))))))))))))))))))))))
    nil)
   nil nil)
  (tau_current_min_unbounded_attained-1 nil 3574552009
   ("" (skeep)
    (("" (name "ss" "so-si")
      (("" (label "ssname" -1)
        (("" (replace -1)
          (("" (name "vv" "vo-vi")
            (("" (replace -1)
              (("" (label "vvname" -1)
                ((""
                  (name "RR"
                        "tau_current_min_unbounded(so, vo, si, vi)")
                  (("1" (replace -1)
                    (("1" (label "RRname" -1)
                      (("1" (assert)
                        (("1" (flatten)
                          (("1" (case "NOT RR>0")
                            (("1" (hide 3)
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "RR")
                                  (("1"
                                    (expand
                                     "tau_current_min_unbounded")
                                    (("1"
                                      (cross-mult 1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (ground)
                                          (("1"
                                            (replace "vvname")
                                            (("1"
                                              (replace "ssname")
                                              (("1"
                                                (lemma "sqv_eq_0")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "vo +zero = vi + (vo-vi)")
                                                      (("1"
                                                        (replace
                                                         "vvname")
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2"
                                (case
                                 "NOT (ss + unbounded_nominal_tau(so, vo, si, vi, RR) * vv) * vv < 0")
                                (("1"
                                  (hide 3)
                                  (("1"
                                    (expand "unbounded_nominal_tau")
                                    (("1"
                                      (name
                                       "tca1"
                                       "-((so - si) * (vo - vi)) / sqv(vo - vi)")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (case
                                           "(ss + tca1*vv)*vv = 0")
                                          (("1"
                                            (case "sqv(vv) > 0")
                                            (("1"
                                              (mult-by -1 "RR")
                                              (("1"
                                                (hide-all-but
                                                 (-1 -2 1))
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (lemma "sqv_eq_0")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (case
                                                     "vo +zero = vi + vv")
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (replace
                                                       "vvname"
                                                       +
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace "ssname")
                                            (("2"
                                              (replace "vvname")
                                              (("2"
                                                (replace -1 :dir rl)
                                                (("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (rewrite
                                                     "dot_add_left")
                                                    (("2"
                                                      (expand "sqv")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (label "RRpos" -2)
                                    (("2"
                                      (name "a" "sqv(vv)")
                                      (("2"
                                        (case "NOT a > 0")
                                        (("1"
                                          (hide-all-but (1 2))
                                          (("1"
                                            (expand "a")
                                            (("1"
                                              (lemma "sqv_eq_0")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case
                                                     "vo +zero = vi + vv")
                                                    (("1"
                                                      (expand "vv")
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (expand "vv")
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (label "apos" -1)
                                          (("2"
                                            (label "aname" -2)
                                            (("2"
                                              (name
                                               "b"
                                               "(2*ss+RR*vv)*vv")
                                              (("2"
                                                (label "bname" -1)
                                                (("2"
                                                  (name
                                                   "c"
                                                   "(ss+RR*vv)*ss-sq(DMOD)")
                                                  (("2"
                                                    (label "cname" -1)
                                                    (("2"
                                                      (name
                                                       "ff"
                                                       "quadratic(a,b,c)")
                                                      (("2"
                                                        (case
                                                         "discr(a,b,c) = 0")
                                                        (("1"
                                                          (case
                                                           "ff(-b/(2*a)) = 0")
                                                          (("1"
                                                            (expand
                                                             "tau_current"
                                                             +)
                                                            (("1"
                                                              (case
                                                               "(so + unbounded_nominal_tau(so, vo, si, vi, RR) * vo -
                                                                                (si + unbounded_nominal_tau(so, vo, si, vi, RR) * vi)) = ss + unbounded_nominal_tau(so, vo, si, vi, RR) * vv")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (replace
                                                                   "vvname")
                                                                  (("1"
                                                                    (cross-mult
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "ff"
                                                                       -2)
                                                                      (("1"
                                                                        (case
                                                                         "NOT unbounded_nominal_tau(so, vo, si, vi, RR) = -b/(2*a)")
                                                                        (("1"
                                                                          (expand
                                                                           "unbounded_nominal_tau"
                                                                           1)
                                                                          (("1"
                                                                            (replace
                                                                             "vvname")
                                                                            (("1"
                                                                              (replace
                                                                               "ssname")
                                                                              (("1"
                                                                                (expand
                                                                                 "b"
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "a"
                                                                                   1)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "dot_add_left")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sqv")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replace
                                                                           -1
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (hide-all-but
                                                                             (-3
                                                                              +))
                                                                            (("2"
                                                                              (expand
                                                                               "a")
                                                                              (("2"
                                                                                (expand
                                                                                 "b")
                                                                                (("2"
                                                                                  (expand
                                                                                   "c")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "quadratic")
                                                                                    (("2"
                                                                                      (hide
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind
                                                                                         :exclude
                                                                                         "unbounded_nominal_tau")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "ss")
                                                                  (("2"
                                                                    (expand
                                                                     "vv")
                                                                    (("2"
                                                                      (grind
                                                                       :exclude
                                                                       "unbounded_nominal_tau")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case
                                                             "sq(b)/a = 4*c")
                                                            (("1"
                                                              (hide-all-but
                                                               (-1 1))
                                                              (("1"
                                                                (expand
                                                                 "ff")
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (cross-mult
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "discr"
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "discr"
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "b"
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "a"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "c"
                                                                 1)
                                                                (("2"
                                                                  (rewrite
                                                                   "dot_add_left")
                                                                  (("2"
                                                                    (rewrite
                                                                     "sq_plus")
                                                                    (("2"
                                                                      (rewrite
                                                                       "sq_times")
                                                                      (("2"
                                                                        (rewrite
                                                                         "sq_times")
                                                                        (("2"
                                                                          (expand
                                                                           "RR"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "tau_current_min_unbounded")
                                                                            (("2"
                                                                              (rewrite
                                                                               "sq_div")
                                                                              (("2"
                                                                                (replace
                                                                                 "vvname")
                                                                                (("2"
                                                                                  (replace
                                                                                   "ssname")
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "dot_add_left")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "dot_add_left")
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "dot_add_left")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "sqv")
                                                                                          (("2"
                                                                                            (name
                                                                                             "vvsq"
                                                                                             "vv*vv")
                                                                                            (("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "sq")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (name
                                                                                                     "A"
                                                                                                     "sqrt(-Delta[DMOD](ss,vv))")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "ss*vv=vv*ss")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "A*A = -Delta[DMOD](ss,vv)")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "Delta_discr2b[DMOD]")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "vv"
                                                                                                                         "ss")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1
                                                                                                                             +)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "discr2b")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "sq")
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "vvsq")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "sqv")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "vo +zero = vi + vv")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "vv"
                                                                                                                               +)
                                                                                                                              (("2"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "A"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "sq_sqrt")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "-Delta[DMOD](ss,vv)")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert)
                    (("2" (replace -1)
                      (("2" (replace -2) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sqv_eq_0 formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (discr const-decl "real" quadratic reals)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sq_plus formula-decl nil sq reals)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (discr2b const-decl "real" quadratic_2b reals)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_div formula-decl nil sq reals)
    (sq_times formula-decl nil sq reals)
    (quadratic const-decl "real" quadratic reals)
    (sq const-decl "nonneg_real" sq reals)
    (Delta const-decl "real" horizontal ACCoRD)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors))
   nil))
 (tau_current_decreasing_TCC1 0
  (tau_current_decreasing_TCC1-2 nil 3574552684
   ("" (skeep*)
    (("" (replace -1 :hide? t)
      (("" (replace -1 :hide? t)
        (("" (hide -2 -3) (("" (grind) nil nil)) nil)) nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (det const-decl "real" det_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (- const-decl "Vector" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (tau_current_decreasing subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.t1, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.t1, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}"))
  (tau_current_decreasing_TCC1-1 nil 3574552408
   ("" (subtype-tcc) nil nil) nil nil
   (tau_current_decreasing subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.t1, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.t1, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}")))
 (tau_current_decreasing_TCC2 0
  (tau_current_decreasing_TCC2-1 nil 3574552408
   ("" (skeep*)
    (("" (replace -1 :hide? t)
      (("" (replace -1 :hide? t)
        (("" (hide -2 -3) (("" (grind) nil nil)) nil)) nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (det const-decl "real" det_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (- const-decl "Vector" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (tau_current_decreasing subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.t2, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.t2, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}")))
 (tau_current_decreasing 0
  (tau_current_decreasing-1 nil 3574552445
   ("" (skeep)
    (("" (name "ss" "so-si")
      (("" (replace -1)
        (("" (label "ssname" -1)
          (("" (name "vv" "vo-vi")
            (("" (replace -1)
              (("" (label "vvname" -1)
                (("" (lemma "dot_at_neg_not_one_element")
                  (("" (inst - "si" "so" "vi" "vo")
                    (("" (label "noe" -1)
                      (("" (lemma "dot_at_neg_deriv_domain")
                        (("" (inst - "si" "so" "vi" "vo")
                          (("" (label "dd" -1)
                            ((""
                              (case "(dot_at_neg?(so,vo,si,vi)) = ((dot_at_neg?(so,vo,si,vi)))")
                              (("1"
                                (label "typeeq" -1)
                                (("1"
                                  (hide "typeeq")
                                  (("1"
                                    (name
                                     "RR"
                                     "tau_current_min_unbounded(so, vo, si, vi)")
                                    (("1"
                                      (replace -1)
                                      (("1"
                                        (label "RRname" -1)
                                        (("1"
                                          (name
                                           "tr"
                                           "unbounded_nominal_tau(so, vo, si, vi, RR)")
                                          (("1"
                                            (label "trname" -1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (label "t1tp" -8)
                                                    (("1"
                                                      (label "t2tp" -9)
                                                      (("1"
                                                        (case
                                                         "FORALL (tzr:real): (so + tzr*vo) - (si + tzr*vi) = ss + tzr*vv")
                                                        (("1"
                                                          (inst-cp
                                                           -
                                                           "t1")
                                                          (("1"
                                                            (inst-cp
                                                             -
                                                             "t2")
                                                            (("1"
                                                              (inst-cp
                                                               -
                                                               "tr")
                                                              (("1"
                                                                (case
                                                                 "tau_current_at(so,vo,si,vi)(t1) > tau_current_at(so,vo,si,vi)(t2)")
                                                                (("1"
                                                                  (expand
                                                                   "tau_current_at")
                                                                  (("1"
                                                                    (expand
                                                                     "tau_current_at_numerator")
                                                                    (("1"
                                                                      (expand
                                                                       "tau_current_at_denominator")
                                                                      (("1"
                                                                        (expand
                                                                         "tau_current")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "/")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -4)
                                                                                (("1"
                                                                                  (replace
                                                                                   -5)
                                                                                  (("1"
                                                                                    (replace
                                                                                     "ssname")
                                                                                    (("1"
                                                                                      (replace
                                                                                       "vvname")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (cross-mult
                                                                                           -1)
                                                                                          (("1"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (cross-mult
                                                                                               2)
                                                                                              (("1"
                                                                                                (cross-mult
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-2
                                                                                                      2))
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     ("t2tp"
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               ("t1tp"
                                                                                                1))
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             ("t2tp"
                                                                                              1))
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   3)
                                                                  (("2"
                                                                    (lemma
                                                                     "mean_value[(dot_at_neg?(so, vo, si, vi))]")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "t1"
                                                                       "t2"
                                                                       "tau_current_at(so,vo,si,vi)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           "cc")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (case
                                                                               "deriv(tau_current_at(so, vo, si, vi), cc) < 0")
                                                                              (("1"
                                                                                (mult-by
                                                                                 -1
                                                                                 ("t2-t1"))
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "cc < tr")
                                                                                (("1"
                                                                                  (case
                                                                                   "NOT (ss + cc*vv)*vv < 0")
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-3
                                                                                      "t2tp"
                                                                                      1))
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "sqv(vv)")
                                                                                      (("1"
                                                                                        (mult-by
                                                                                         -1
                                                                                         "t2-cc")
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     (-3
                                                                                      -4
                                                                                      -5
                                                                                      -7
                                                                                      -8
                                                                                      -9))
                                                                                    (("2"
                                                                                      (hide
                                                                                       ("t1tp"
                                                                                        "t2tp"))
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "deriv_div[(dot_at_neg?(so,vo,si,vi))]")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "tau_current_at")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "derivable?[(dot_at_neg?(so,vo,si,vi))]
                                                                                                                                                                                                                                                                                     (tau_current_at_numerator(so, vo, si, vi), cc)
                                                                                                                                                                                                                                                                                  AND
                                                                                                                                                                                                                                                                                  derivable?[(dot_at_neg?(so,vo,si,vi))]
                                                                                                                                                                                                                                                                                      (tau_current_at_denominator(so, vo, si, vi), cc)")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -3
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (cross-mult
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (ground)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "NOT forall (eg1:real): 0*eg1 = 0")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (rewrite
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (name
                                                                                                                       "a"
                                                                                                                       "-sq(sqv(vv))")
                                                                                                                      (("2"
                                                                                                                        (label
                                                                                                                         "aname"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "a<0")
                                                                                                                          (("1"
                                                                                                                            (label
                                                                                                                             "aneg"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (name
                                                                                                                               "b"
                                                                                                                               "(-2)*((ss*vv)*sqv(vv))")
                                                                                                                              (("1"
                                                                                                                                (label
                                                                                                                                 "bname"
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (name
                                                                                                                                   "c"
                                                                                                                                   "(-2)*sq(ss*vv)+sqv(vv)*sqv(ss)-sq(DMOD)*sqv(vv)")
                                                                                                                                  (("1"
                                                                                                                                    (label
                                                                                                                                     "cname"
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "NOT discr(a,b,c)>0")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "discr")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "b"
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "a"
                                                                                                                                             1)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "c"
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (copy
                                                                                                                                                   -17)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "sq"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "-4 * (sqv(ss) * sqv(vv) * -1) +
                                                                                                                                                   4 * (sqv(vv) * DMOD * DMOD * -1)
                                                                                                                                                   + 8 * (ss * vv * (ss * vv) * -1)
                                                                                                                                                   + 4 * ( (ss * vv) * (ss * vv))
                                                                                                                                                   > 0")
                                                                                                                                                        (("1"
                                                                                                                                                          (mult-by
                                                                                                                                                           -1
                                                                                                                                                           "sq(sqv(vv))")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "sq")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (hide
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "Delta_discr2b[DMOD]")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-1
                                                                                                                                                                          1))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "discr2b")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (label
                                                                                                                                         "discrnn"
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (name
                                                                                                                                           "ff"
                                                                                                                                           "quadratic(a,b,c)")
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "ff(cc) < 0")
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "deriv(tau_current_at_numerator(so, vo, si, vi), cc) = 2*((ss+cc*vv)*vv) AND deriv(tau_current_at_denominator(so, vo, si, vi), cc) = -sqv(vv)")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (replaces
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "tau_current_at_denominator"
                                                                                                                                                       +)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "tau_current_at_numerator"
                                                                                                                                                         +)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           "ssname")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             "vvname")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-1
                                                                                                                                                                1))
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "ff")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "a")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "b")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "c")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (split
                                                                                                                                                   +)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "deriv_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "LAMBDA (tr: (dot_at_neg?(so, vo, si, vi))):
                                                                                                                                                              sqv((so - si) + tr * (vo - vi))"
                                                                                                                                                       "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):-sq(DMOD))"
                                                                                                                                                       "cc")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (split
                                                                                                                                                           -)
                                                                                                                                                          (("1"
                                                                                                                                                            (invoke
                                                                                                                                                             (case
                                                                                                                                                              "%1 = %2")
                                                                                                                                                             (!
                                                                                                                                                              -1
                                                                                                                                                              1)
                                                                                                                                                             (!
                                                                                                                                                              1
                                                                                                                                                              1))
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   (-1
                                                                                                                                                                    -2))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "deriv_const_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "-sq(DMOD)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "deriv"
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (decompose-equality
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "cc")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (hide
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "deriv_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vv)*tr^2)"
                                                                                                                                                                                       "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):2*(ss*vv)*tr + sqv(ss))"
                                                                                                                                                                                       "cc")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (invoke
                                                                                                                                                                                             (case
                                                                                                                                                                                              "%1 = %2")
                                                                                                                                                                                             (!
                                                                                                                                                                                              -1
                                                                                                                                                                                              1)
                                                                                                                                                                                             (!
                                                                                                                                                                                              1
                                                                                                                                                                                              1))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "2*(ss*vv)"
                                                                                                                                                                                                     "sqv(ss)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (decompose-equality
                                                                                                                                                                                                           -2)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "cc")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (invoke
                                                                                                                                                                                                               (case
                                                                                                                                                                                                                "%1 = %2")
                                                                                                                                                                                                               (!
                                                                                                                                                                                                                -1
                                                                                                                                                                                                                1)
                                                                                                                                                                                                               (!
                                                                                                                                                                                                                1
                                                                                                                                                                                                                1
                                                                                                                                                                                                                1))
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                                     "deriv_x_to_n[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (hide
                                                                                                                                                                                                                       (-2
                                                                                                                                                                                                                        -3))
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         -
                                                                                                                                                                                                                         "2"
                                                                                                                                                                                                                         "sqv(vv)")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (decompose-equality
                                                                                                                                                                                                                               -2)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -
                                                                                                                                                                                                                                 "cc")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (invoke
                                                                                                                                                                                                                                   (case
                                                                                                                                                                                                                                    "%1 = %2")
                                                                                                                                                                                                                                   (!
                                                                                                                                                                                                                                    -1
                                                                                                                                                                                                                                    1)
                                                                                                                                                                                                                                   (!
                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                    2))
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                                     :dir
                                                                                                                                                                                                                                     rl)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                       -2)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (reveal
                                                                                                                                                                                                                                       "typeeq")
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                         "deriv"
                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "deriv"
                                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (reveal
                                                                                                                                                                                                                   "typeeq")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "deriv"
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "deriv"
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "+"
                                                                                                                                                                                               +
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 "ssname")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   "vvname")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (reveal
                                                                                                                                                                                                         "typeeq")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (grind
                                                                                                                                                                                                           :exclude
                                                                                                                                                                                                           "deriv")
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "deriv_x_to_n[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -
                                                                                                                                                                                               "2"
                                                                                                                                                                                               "sqv(vv)")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                       (-1
                                                                                                                                                                                                        1))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (reveal
                                                                                                                                                                                                         "typeeq")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "derivable?"
                                                                                                                                                                                                           -2)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "cc")
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -
                                                                                                                                                                                               "2*(ss*vv)"
                                                                                                                                                                                               "sqv(ss)")
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("3"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "derivable?"
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -
                                                                                                                                                                                                       "cc")
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "const_derivable_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "-sq(DMOD)")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "derivable?"
                                                                                                                                                                                 -)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -
                                                                                                                                                                                   "x1!1")
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "tau_current_at_numerator"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 "ssname")
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   "vvname")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "+")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (grind
                                                                                                                                                                         :exclude
                                                                                                                                                                         "deriv")
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "deriv_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vv)*tr^2)"
                                                                                                                                                               "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):2*(ss*vv)*tr + sqv(ss))"
                                                                                                                                                               "cc")
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "derivable_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vv)*tr^2)"
                                                                                                                                                                     "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):2*(ss*vv)*tr + sqv(ss))")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "derivable?"
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -
                                                                                                                                                                           "cc")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (invoke
                                                                                                                                                                             (case
                                                                                                                                                                              "%1 = %2")
                                                                                                                                                                             (!
                                                                                                                                                                              -1
                                                                                                                                                                              1)
                                                                                                                                                                             (!
                                                                                                                                                                              1
                                                                                                                                                                              1))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (decompose-equality)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "+")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "ss")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "vv")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (grind)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "2*(ss*vv)"
                                                                                                                                                                         "sqv(ss)")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "deriv_x_to_n[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "2"
                                                                                                                                                                         "sqv(vv)")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("3"
                                                                                                                                                            (lemma
                                                                                                                                                             "const_derivable_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                            (("3"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "-sq(DMOD)")
                                                                                                                                                              (("3"
                                                                                                                                                                (expand
                                                                                                                                                                 "derivable?"
                                                                                                                                                                 -)
                                                                                                                                                                (("3"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "cc")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (expand
                                                                                                                                                     "tau_current_at_denominator"
                                                                                                                                                     +)
                                                                                                                                                    (("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "-sqv(vv)"
                                                                                                                                                         "-(ss*vv)")
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           "ssname")
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             "vvname")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (decompose-equality
                                                                                                                                                                   -2)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "cc")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-1
                                                                                                                                                                          1))
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "deriv")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "deriv")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (reveal
                                                                                                                                                                                 "typeeq")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (hide
                                                                                                                                                 (-9
                                                                                                                                                  -7
                                                                                                                                                  -8))
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "ff"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "quadratic"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (rewrite
                                                                                                                                                       "quadratic_lt_0")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide
                                                                                                                                                             2)
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "cc < root(a,b,c,1) AND root(a,b,c,1) < root(a,b,c,-1)")
                                                                                                                                                              (("1"
                                                                                                                                                                (ground)
                                                                                                                                                                nil
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (hide
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (split
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "root(a,b,c,1) = tr")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (hide
                                                                                                                                                                       2)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "root"
                                                                                                                                                                         +)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "tr"
                                                                                                                                                                           +)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "unbounded_nominal_tau"
                                                                                                                                                                             +)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (case
                                                                                                                                                                                 "-b/(2*a) = -((so - si) * (vo - vi)) / sqv(vo - vi)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -1
                                                                                                                                                                                     :dir
                                                                                                                                                                                     rl)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "sqrt(discr(a,b,c))/(2*a) = -RR/2")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (cross-mult
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "RR"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "sq_eq")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (hide
                                                                                                                                                                                                     2)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       "sq_times")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "sq_times")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                           "sq_times")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "a"
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                   "sq_neg")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                                     "sq_neg")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "tau_current_min_unbounded"
                                                                                                                                                                                                                       +)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                         "sq_div")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                                           "sq_times")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (cross-mult
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (cross-mult
                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   "ssname")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     "vvname")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                                                       "Delta_discr2b[DMOD]")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                         -
                                                                                                                                                                                                                                         "vv"
                                                                                                                                                                                                                                         "ss")
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (replace
                                                                                                                                                                                                                                             -1
                                                                                                                                                                                                                                             +)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "b")
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "c")
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (grind
                                                                                                                                                                                                                                                     :exclude
                                                                                                                                                                                                                                                     "*")
                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (case
                                                                                                                                                                                                                                             "vo + zero = vi + vv")
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                               -2)
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                               "vv")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (grind)
                                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                                             "sqv_eq_0")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (case
                                                                                                                                                                                                                                   "vo + zero = vi + (vo-vi)")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     -2)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "tau_current_min_unbounded(so, vo, si, vi) >=0")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       "-a")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "b"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "a"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "sq")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "root"
                                                                                                                                                                     +)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (mult-by
                                                                                                                                                                       1
                                                                                                                                                                       "-a")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "a = 0")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "sq_eq_0")
                                                                                                                                  (("1"
                                                                                                                                    (inst?)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "sqv_eq_0")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "vo + zero = vi + (vo-vi)")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide-all-but
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (invoke
                                                                                                                 (typepred
                                                                                                                  "sq(%1)")
                                                                                                                 (!
                                                                                                                  1
                                                                                                                  1
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "sq_eq_0")
                                                                                                                  (("2"
                                                                                                                    (invoke
                                                                                                                     (inst
                                                                                                                      -
                                                                                                                      "(%1)")
                                                                                                                     (!
                                                                                                                      1
                                                                                                                      1
                                                                                                                      1))
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "sq"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (ground)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "tau_current_at_denominator"
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               "ssname")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 "vvname")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-2
                                                                                                                                      -6))
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "sq")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "tau_current_at_numerator(so, vo, si, vi)")
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "tau_current_at_denominator(so, vo, si, vi)")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "derivable?"
                                                                                                           (-1
                                                                                                            -2))
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "cc")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "connected?")
                                                                      (("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "dot_at_neg?")
                                                                          (("2"
                                                                            (expand
                                                                             "dot_at")
                                                                            (("2"
                                                                              (typepred
                                                                               "x!1")
                                                                              (("2"
                                                                                (typepred
                                                                                 "y!1")
                                                                                (("2"
                                                                                  (expand
                                                                                   "dot_at_neg?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "dot_at")
                                                                                    (("2"
                                                                                      (replace
                                                                                       "ssname")
                                                                                      (("2"
                                                                                        (replace
                                                                                         "vvname")
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           (-1
                                                                                            -2
                                                                                            -3
                                                                                            -4
                                                                                            1))
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "sqv(vv)")
                                                                                            (("2"
                                                                                              (mult-by
                                                                                               -1
                                                                                               "y!1-z!1")
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (expand
                                                                   "dot_at_neg?")
                                                                  (("3"
                                                                    (expand
                                                                     "dot_at")
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (expand
                                                                   "dot_at_neg?")
                                                                  (("4"
                                                                    (expand
                                                                     "dot_at")
                                                                    (("4"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "ss")
                                                            (("2"
                                                              (expand
                                                               "vv")
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (dot_at_neg_not_one_element formula-decl nil tcas_tau nil)
    (dot_at_neg? const-decl "bool" tcas_tau nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    nil nil (dot_at const-decl "real" tcas_tau nil)
    (derivable? const-decl "bool" derivatives_def analysis)
    (deriv const-decl "real" derivatives_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil) nil nil nil nil nil
    nil
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (deriv_div formula-decl nil derivatives_def analysis)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (discr const-decl "real" quadratic reals)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    nil
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    nil (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (sq_0 formula-decl nil sq reals)
    (discr2b const-decl "real" quadratic_2b reals)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors) nil
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil) nil
    (quadratic const-decl "real" quadratic reals)
    (quadratic_lt_0 formula-decl nil quadratic reals)
    (nzint nonempty-type-eq-decl nil integers nil)
    (Sign type-eq-decl nil sign reals)
    (root const-decl "real" quadratic reals) nil
    (div_cancel3 formula-decl nil real_props nil)
    (div_cancel4 formula-decl nil real_props nil)
    (sq_eq formula-decl nil sq reals)
    (sq_times formula-decl nil sq reals)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_div formula-decl nil sq reals)
    (times_div1 formula-decl nil real_props nil)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sq_neg formula-decl nil sq reals) nil
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (TRUE const-decl "bool" booleans nil) nil
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (^ const-decl "real" exponentiation nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (deriv_linear_fun formula-decl nil derivatives analysis)
    (expt def-decl "real" exponentiation nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (deriv_x_to_n formula-decl nil derivatives analysis)
    (const_derivable_fun formula-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv_const_fun formula-decl nil derivatives analysis) nil
    (derivable_sum application-judgement "deriv_fun" derivatives
     analysis)
    nil (derivable_sum judgement-tcc nil derivatives analysis)
    (deriv_sum formula-decl nil derivatives_def analysis)
    (sq_eq_0 formula-decl nil sq reals)
    (scal_zero formula-decl nil vectors_2D vectors)
    (div_mult_pos_neg_lt1 formula-decl nil extra_real_props nil)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (connected? const-decl "bool" deriv_domain_def analysis)
    (mean_value formula-decl nil derivative_props analysis)
    (tau_current_at_denominator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (div_mult_pos_neg_gt2 formula-decl nil extra_real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (div_mult_neg_gt1 formula-decl nil extra_real_props nil)
    (times_div2 formula-decl nil real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil) nil
    (* const-decl "real" vectors_2D vectors)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (div_mult_pos_neg_gt1 formula-decl nil extra_real_props nil) nil
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (tau_current_at_numerator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (tau_current_at const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (<= const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (nnreal type-eq-decl nil real_types nil)
    (tau_current_min_unbounded const-decl "nnreal" tcas_tau nil)
    (dot_at_neg_deriv_domain formula-decl nil tcas_tau nil))
   nil))
 (tau_current_decreasing_Delta_nonneg_TCC1 0
  (tau_current_decreasing_Delta_nonneg_TCC1-1 nil 3574553104
   ("" (subtype-tcc) nil nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (/= const-decl "boolean" notequal nil)
    (- const-decl "Vector" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (tau_current_decreasing_Delta_nonneg subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.t1, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.t1, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}")))
 (tau_current_decreasing_Delta_nonneg_TCC2 0
  (tau_current_decreasing_Delta_nonneg_TCC2-1 nil 3574553104
   ("" (skeep*) (("" (grind) nil nil)) nil)
   ((- const-decl "Vector" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (tau_current_decreasing_Delta_nonneg subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.t2, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.t2, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}")))
 (tau_current_decreasing_Delta_nonneg 0
  (tau_current_decreasing_Delta_nonneg-1 nil 3574553130
   ("" (skeep)
    (("" (name "ss" "so-si")
      (("" (replace -1)
        (("" (label "ssname" -1)
          (("" (name "vv" "vo-vi")
            (("" (replace -1)
              (("" (label "vvname" -1)
                (("" (lemma "dot_at_neg_not_one_element")
                  (("" (inst - "si" "so" "vi" "vo")
                    (("" (label "noe" -1)
                      (("" (lemma "dot_at_neg_deriv_domain")
                        (("" (inst - "si" "so" "vi" "vo")
                          (("" (label "dd" -1)
                            ((""
                              (case "(dot_at_neg?(so,vo,si,vi)) = ((dot_at_neg?(so,vo,si,vi)))")
                              (("1"
                                (label "typeeq" -1)
                                (("1"
                                  (hide "typeeq")
                                  (("1"
                                    (name "RR" "0")
                                    (("1"
                                      (replace -1)
                                      (("1"
                                        (label "RRname" -1)
                                        (("1"
                                          (name
                                           "tr"
                                           "unbounded_nominal_tau(so, vo, si, vi, RR)")
                                          (("1"
                                            (label "trname" -1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (label "t1tp" -8)
                                                  (("1"
                                                    (label "t2tp" -9)
                                                    (("1"
                                                      (case
                                                       "FORALL (tzr:real): (so + tzr*vo) - (si + tzr*vi) = ss + tzr*vv")
                                                      (("1"
                                                        (inst-cp
                                                         -
                                                         "t1")
                                                        (("1"
                                                          (inst-cp
                                                           -
                                                           "t2")
                                                          (("1"
                                                            (inst-cp
                                                             -
                                                             "tr")
                                                            (("1"
                                                              (case
                                                               "tau_current_at(so,vo,si,vi)(t1) > tau_current_at(so,vo,si,vi)(t2)")
                                                              (("1"
                                                                (expand
                                                                 "tau_current_at")
                                                                (("1"
                                                                  (expand
                                                                   "tau_current_at_numerator")
                                                                  (("1"
                                                                    (expand
                                                                     "tau_current_at_denominator")
                                                                    (("1"
                                                                      (expand
                                                                       "tau_current")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "/")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -4)
                                                                              (("1"
                                                                                (replace
                                                                                 -5)
                                                                                (("1"
                                                                                  (replace
                                                                                   "ssname")
                                                                                  (("1"
                                                                                    (replace
                                                                                     "vvname")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (cross-mult
                                                                                         -1)
                                                                                        (("1"
                                                                                          (ground)
                                                                                          (("1"
                                                                                            (cross-mult
                                                                                             2)
                                                                                            (("1"
                                                                                              (cross-mult
                                                                                               -2)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (-2
                                                                                                    2))
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   ("t2tp"
                                                                                                    1))
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             ("t1tp"
                                                                                              1))
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           ("t2tp"
                                                                                            1))
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 3)
                                                                (("2"
                                                                  (lemma
                                                                   "mean_value[(dot_at_neg?(so, vo, si, vi))]")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "t1"
                                                                     "t2"
                                                                     "tau_current_at(so,vo,si,vi)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skolem
                                                                         -1
                                                                         "cc")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (case
                                                                             "deriv(tau_current_at(so, vo, si, vi), cc) < 0")
                                                                            (("1"
                                                                              (mult-by
                                                                               -1
                                                                               ("t2-t1"))
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "cc < tr")
                                                                              (("1"
                                                                                (case
                                                                                 "NOT (ss + cc*vv)*vv < 0")
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-3
                                                                                    "t2tp"
                                                                                    1))
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "sqv(vv)")
                                                                                    (("1"
                                                                                      (mult-by
                                                                                       -1
                                                                                       "t2-cc")
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   (-3
                                                                                    -4
                                                                                    -5
                                                                                    -7
                                                                                    -8
                                                                                    -9))
                                                                                  (("2"
                                                                                    (hide
                                                                                     ("t1tp"
                                                                                      "t2tp"))
                                                                                    (("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "deriv_div[(dot_at_neg?(so,vo,si,vi))]")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "tau_current_at")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "derivable?[(dot_at_neg?(so,vo,si,vi))]
                                                                                                                                                                                                                                                                                                                                   (tau_current_at_numerator(so, vo, si, vi), cc)
                                                                                                                                                                                                                                                                                                                                AND
                                                                                                                                                                                                                                                                                                                                derivable?[(dot_at_neg?(so,vo,si,vi))]
                                                                                                                                                                                                                                                                                                                                    (tau_current_at_denominator(so, vo, si, vi), cc)")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -3
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (cross-mult
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (ground)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "NOT forall (eg1:real): 0*eg1 = 0")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (rewrite
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (name
                                                                                                                     "a"
                                                                                                                     "-sq(sqv(vv))")
                                                                                                                    (("2"
                                                                                                                      (label
                                                                                                                       "aname"
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "a<0")
                                                                                                                        (("1"
                                                                                                                          (label
                                                                                                                           "aneg"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (name
                                                                                                                             "b"
                                                                                                                             "(-2)*((ss*vv)*sqv(vv))")
                                                                                                                            (("1"
                                                                                                                              (label
                                                                                                                               "bname"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (name
                                                                                                                                 "c"
                                                                                                                                 "(-2)*sq(ss*vv)+sqv(vv)*sqv(ss)-sq(DMOD)*sqv(vv)")
                                                                                                                                (("1"
                                                                                                                                  (label
                                                                                                                                   "cname"
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "NOT discr(a,b,c)<=0")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "discr")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "b"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "a"
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "c"
                                                                                                                                             1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "sq"
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "-4 * (sqv(ss) * sqv(vv) * -1) +
                                                                                                                                                                                                                     4 * (sqv(vv) * DMOD * DMOD * -1)
                                                                                                                                                                                                                     + 8 * (ss * vv * (ss * vv) * -1)
                                                                                                                                                                                                                     + 4 * ( (ss * vv) * (ss * vv))
                                                                                                                                                                                                                     <= 0")
                                                                                                                                                    (("1"
                                                                                                                                                      (mult-by
                                                                                                                                                       -1
                                                                                                                                                       "sq(sqv(vv))")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "sq")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "Delta_discr2b[DMOD]")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   "RRname"
                                                                                                                                                                   :dir
                                                                                                                                                                   rl)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (copy
                                                                                                                                                                     -18)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-1
                                                                                                                                                                          1))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "discr2b")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (label
                                                                                                                                       "discrnn"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (name
                                                                                                                                         "ff"
                                                                                                                                         "quadratic(a,b,c)")
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "ff(cc) < 0")
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "deriv(tau_current_at_numerator(so, vo, si, vi), cc) = 2*((ss+cc*vv)*vv) AND deriv(tau_current_at_denominator(so, vo, si, vi), cc) = -sqv(vv)")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (replaces
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (replaces
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "tau_current_at_denominator"
                                                                                                                                                     +)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "tau_current_at_numerator"
                                                                                                                                                       +)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         "ssname")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           "vvname")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             (-1
                                                                                                                                                              1))
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "ff")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "a")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "b")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "c")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (grind)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (split
                                                                                                                                                 +)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "deriv_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "LAMBDA (tr: (dot_at_neg?(so, vo, si, vi))):
                                                                                                                                                                                                                                  sqv((so - si) + tr * (vo - vi))"
                                                                                                                                                     "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):-sq(DMOD))"
                                                                                                                                                     "cc")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (split
                                                                                                                                                         -)
                                                                                                                                                        (("1"
                                                                                                                                                          (invoke
                                                                                                                                                           (case
                                                                                                                                                            "%1 = %2")
                                                                                                                                                           (!
                                                                                                                                                            -1
                                                                                                                                                            1)
                                                                                                                                                           (!
                                                                                                                                                            1
                                                                                                                                                            1))
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide
                                                                                                                                                                 (-1
                                                                                                                                                                  -2))
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "deriv_const_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "-sq(DMOD)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "deriv"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (decompose-equality
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -
                                                                                                                                                                           "cc")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   "deriv_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vv)*tr^2)"
                                                                                                                                                                                     "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):2*(ss*vv)*tr + sqv(ss))"
                                                                                                                                                                                     "cc")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (split
                                                                                                                                                                                         -)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (invoke
                                                                                                                                                                                           (case
                                                                                                                                                                                            "%1 = %2")
                                                                                                                                                                                           (!
                                                                                                                                                                                            -1
                                                                                                                                                                                            1)
                                                                                                                                                                                           (!
                                                                                                                                                                                            1
                                                                                                                                                                                            1))
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -2)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (lemma
                                                                                                                                                                                                 "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -
                                                                                                                                                                                                   "2*(ss*vv)"
                                                                                                                                                                                                   "sqv(ss)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (decompose-equality
                                                                                                                                                                                                         -2)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -
                                                                                                                                                                                                           "cc")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (invoke
                                                                                                                                                                                                             (case
                                                                                                                                                                                                              "%1 = %2")
                                                                                                                                                                                                             (!
                                                                                                                                                                                                              -1
                                                                                                                                                                                                              1)
                                                                                                                                                                                                             (!
                                                                                                                                                                                                              1
                                                                                                                                                                                                              1
                                                                                                                                                                                                              1))
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -2)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                                   "deriv_x_to_n[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (hide
                                                                                                                                                                                                                     (-2
                                                                                                                                                                                                                      -3))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       -
                                                                                                                                                                                                                       "2"
                                                                                                                                                                                                                       "sqv(vv)")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (decompose-equality
                                                                                                                                                                                                                             -2)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                               -
                                                                                                                                                                                                                               "cc")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (invoke
                                                                                                                                                                                                                                 (case
                                                                                                                                                                                                                                  "%1 = %2")
                                                                                                                                                                                                                                 (!
                                                                                                                                                                                                                                  -1
                                                                                                                                                                                                                                  1)
                                                                                                                                                                                                                                 (!
                                                                                                                                                                                                                                  1
                                                                                                                                                                                                                                  1
                                                                                                                                                                                                                                  2))
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                                   :dir
                                                                                                                                                                                                                                   rl)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     -2)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (grind)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (reveal
                                                                                                                                                                                                                                     "typeeq")
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                       "deriv"
                                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                         "deriv"
                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (reveal
                                                                                                                                                                                                                 "typeeq")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "deriv"
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "deriv"
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "+"
                                                                                                                                                                                             +
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               "ssname")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 "vvname")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (reveal
                                                                                                                                                                                                       "typeeq")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (grind
                                                                                                                                                                                                         :exclude
                                                                                                                                                                                                         "deriv")
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "deriv_x_to_n[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -
                                                                                                                                                                                             "2"
                                                                                                                                                                                             "sqv(vv)")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     (-1
                                                                                                                                                                                                      1))
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (reveal
                                                                                                                                                                                                       "typeeq")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "derivable?"
                                                                                                                                                                                                         -2)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -
                                                                                                                                                                                                           "cc")
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("3"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -
                                                                                                                                                                                             "2*(ss*vv)"
                                                                                                                                                                                             "sqv(ss)")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("3"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "derivable?"
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "cc")
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "const_derivable_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "-sq(DMOD)")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "derivable?"
                                                                                                                                                                               -)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -
                                                                                                                                                                                 "x1!1")
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "tau_current_at_numerator"
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               "ssname")
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 "vvname")
                                                                                                                                                                (("2"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "+")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (grind
                                                                                                                                                                       :exclude
                                                                                                                                                                       "deriv")
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "deriv_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vv)*tr^2)"
                                                                                                                                                             "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):2*(ss*vv)*tr + sqv(ss))"
                                                                                                                                                             "cc")
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "derivable_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vv)*tr^2)"
                                                                                                                                                                   "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):2*(ss*vv)*tr + sqv(ss))")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "derivable?"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "cc")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (invoke
                                                                                                                                                                           (case
                                                                                                                                                                            "%1 = %2")
                                                                                                                                                                           (!
                                                                                                                                                                            -1
                                                                                                                                                                            1)
                                                                                                                                                                           (!
                                                                                                                                                                            1
                                                                                                                                                                            1))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (hide-all-but
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (decompose-equality)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "+")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "ss")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "vv")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (grind)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "2*(ss*vv)"
                                                                                                                                                                       "sqv(ss)")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "deriv_x_to_n[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "2"
                                                                                                                                                                       "sqv(vv)")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("3"
                                                                                                                                                          (lemma
                                                                                                                                                           "const_derivable_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                          (("3"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "-sq(DMOD)")
                                                                                                                                                            (("3"
                                                                                                                                                              (expand
                                                                                                                                                               "derivable?"
                                                                                                                                                               -)
                                                                                                                                                              (("3"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "cc")
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "tau_current_at_denominator"
                                                                                                                                                   +)
                                                                                                                                                  (("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "-sqv(vv)"
                                                                                                                                                       "-(ss*vv)")
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         "ssname")
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           "vvname")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 -2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "cc")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        1))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "deriv")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "deriv")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (reveal
                                                                                                                                                                               "typeeq")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (grind)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("2"
                                                                                                                                              (hide
                                                                                                                                               (-9
                                                                                                                                                -7
                                                                                                                                                -8))
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "ff"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "quadratic"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "quadratic_lt_0")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (case
                                                                                                                                                         "discr(a,b,c) < 0")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "c"
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "a"
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "b"
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "c"
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (mult-by
                                                                                                                                                                     1
                                                                                                                                                                     "sq(sqv(vv))")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        1))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "discr")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (grind
                                                                                                                                                                           :exclude
                                                                                                                                                                           "*")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "tr = root(a,b,c,1) AND tr = root(a,b,c,-1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (ground)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (hide
                                                                                                                                                               3)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "root")
                                                                                                                                                                (("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "discr(a,b,c) = 0")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "tr"
                                                                                                                                                                         +)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           "RRname"
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "unbounded_nominal_tau")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               "ssname")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 "vvname")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "b"
                                                                                                                                                                                     +)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "a"
                                                                                                                                                                                       +)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "sq")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (flatten)
                                                                                                                                      (("3"
                                                                                                                                        (lemma
                                                                                                                                         "sqv_eq_0")
                                                                                                                                        (("3"
                                                                                                                                          (inst?)
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (lemma
                                                                                                                           "sqv_eq_0")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "a = 0")
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "sq_eq_0")
                                                                                                                                    (("1"
                                                                                                                                      (inst?)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -3)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (invoke
                                                                                                               (typepred
                                                                                                                "sq(%1)")
                                                                                                               (!
                                                                                                                1
                                                                                                                1
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "sq_eq_0")
                                                                                                                (("2"
                                                                                                                  (invoke
                                                                                                                   (inst
                                                                                                                    -
                                                                                                                    "(%1)")
                                                                                                                   (!
                                                                                                                    1
                                                                                                                    1
                                                                                                                    1))
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "sq"
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (ground)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "tau_current_at_denominator"
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             "ssname")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               "vvname")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-2
                                                                                                                                    -6))
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "sq")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "tau_current_at_numerator(so, vo, si, vi)")
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "tau_current_at_denominator(so, vo, si, vi)")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "derivable?"
                                                                                                         (-1
                                                                                                          -2))
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "cc")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (case
                                                                                   "(ss + tr*vv)*vv = 0")
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "sqv(vv)")
                                                                                    (("1"
                                                                                      (mult-by
                                                                                       -1
                                                                                       "cc-tr")
                                                                                      (("1"
                                                                                        (replace
                                                                                         "RRname"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "(ss + cc*vv)*vv < 0")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -2
                                                                                                -3))
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (mult-by
                                                                                               -4
                                                                                               "sqv(vv)")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 (-4
                                                                                                  "t2tp"
                                                                                                  1))
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "sqv_eq_0")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "tr"
                                                                                     1)
                                                                                    (("2"
                                                                                      (replace
                                                                                       "RRname"
                                                                                       :dir
                                                                                       rl)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "unbounded_nominal_tau"
                                                                                         1)
                                                                                        (("2"
                                                                                          (replace
                                                                                           "ssname")
                                                                                          (("2"
                                                                                            (replace
                                                                                             "vvname")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "dot_add_left")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "sqv")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "connected?")
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (expand
                                                                         "dot_at_neg?")
                                                                        (("2"
                                                                          (expand
                                                                           "dot_at")
                                                                          (("2"
                                                                            (typepred
                                                                             "x!1")
                                                                            (("2"
                                                                              (typepred
                                                                               "y!1")
                                                                              (("2"
                                                                                (expand
                                                                                 "dot_at_neg?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "dot_at")
                                                                                  (("2"
                                                                                    (replace
                                                                                     "ssname")
                                                                                    (("2"
                                                                                      (replace
                                                                                       "vvname")
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          -2
                                                                                          -3
                                                                                          -4
                                                                                          1))
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "sqv(vv)")
                                                                                          (("2"
                                                                                            (mult-by
                                                                                             -1
                                                                                             "y!1-z!1")
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (expand
                                                                 "dot_at_neg?")
                                                                (("3"
                                                                  (expand
                                                                   "dot_at")
                                                                  (("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("4"
                                                                (expand
                                                                 "dot_at_neg?")
                                                                (("4"
                                                                  (expand
                                                                   "dot_at")
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (expand "ss")
                                                          (("2"
                                                            (expand
                                                             "vv")
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (dot_at_neg_not_one_element formula-decl nil tcas_tau nil)
    (dot_at_neg? const-decl "bool" tcas_tau nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (/= const-decl "boolean" notequal nil)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (> const-decl "bool" reals nil)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (tau_current_at const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (tau_current_at_numerator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    nil (div_mult_pos_neg_gt1 formula-decl nil extra_real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (* const-decl "real" vectors_2D vectors) nil
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (times_div2 formula-decl nil real_props nil)
    (div_mult_neg_gt1 formula-decl nil extra_real_props nil)
    (<= const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (div_mult_pos_neg_gt2 formula-decl nil extra_real_props nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (tau_current_at_denominator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (mean_value formula-decl nil derivative_props analysis)
    (connected? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (div_mult_pos_neg_lt1 formula-decl nil extra_real_props nil)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sq_0 formula-decl nil sq reals)
    (sq_eq_0 formula-decl nil sq reals)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (deriv_sum formula-decl nil derivatives_def analysis)
    (derivable_sum judgement-tcc nil derivatives analysis) nil
    (derivable_sum application-judgement "deriv_fun" derivatives
     analysis)
    nil (deriv_const_fun formula-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (const_derivable_fun formula-decl nil derivatives analysis)
    (deriv_x_to_n formula-decl nil derivatives analysis)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (expt def-decl "real" exponentiation nil)
    (deriv_linear_fun formula-decl nil derivatives analysis)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (^ const-decl "real" exponentiation nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    nil (TRUE const-decl "bool" booleans nil)
    (sqrt_0 formula-decl nil sqrt reals) nil
    (root const-decl "real" quadratic reals)
    (Sign type-eq-decl nil sign reals)
    (nzint nonempty-type-eq-decl nil integers nil)
    (quadratic_lt_0 formula-decl nil quadratic reals)
    (quadratic const-decl "real" quadratic reals) nil nil
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (discr2b const-decl "real" quadratic_2b reals)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    nil
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    nil
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (discr const-decl "real" quadratic reals)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (deriv_div formula-decl nil derivatives_def analysis)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    nil nil nil nil nil nil
    (NOT const-decl "[bool -> bool]" booleans nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (deriv const-decl "real" derivatives_def analysis)
    (derivable? const-decl "bool" derivatives_def analysis)
    (dot_at const-decl "real" tcas_tau nil) nil nil
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (dot_at_neg_deriv_domain formula-decl nil tcas_tau nil))
   nil))
 (tau_current_increasing_TCC1 0
  (tau_current_increasing_TCC1-1 nil 3574553366
   ("" (skeep*)
    (("" (replace -1 :hide? t)
      (("" (replace -1 :hide? t)
        (("" (hide -2 -3) (("" (grind) nil nil)) nil)) nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (det const-decl "real" det_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (- const-decl "Vector" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (tau_current_increasing subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.t1, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.t1, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}")))
 (tau_current_increasing_TCC2 0
  (tau_current_increasing_TCC2-1 nil 3574553366
   ("" (skeep*)
    (("" (replace -1 :hide? t)
      (("" (replace -1 :hide? t)
        (("" (hide -2 -3) (("" (grind) nil nil)) nil)) nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (det const-decl "real" det_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (- const-decl "Vector" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (tau_current_increasing subtype "tcas_tau.vi"
    "{vi_1 | vectors_2D.*(((vectors_2D.-)((vectors_2D.+)(tcas_tau.so, vectors_2D.*(tcas_tau.t2, tcas_tau.vo)), (vectors_2D.+)(tcas_tau.si, vectors_2D.*(tcas_tau.t2, tcas_tau.vi)))), ((vectors_2D.-)(tcas_tau.vo, vi_1))) /= 0}")))
 (tau_current_increasing 0
  (tau_current_increasing-1 nil 3574553476
   ("" (skeep)
    (("" (name "ss" "so-si")
      (("" (replace -1)
        (("" (label "ssname" -1)
          (("" (name "vv" "vo-vi")
            (("" (replace -1)
              (("" (label "vvname" -1)
                (("" (lemma "dot_at_neg_not_one_element")
                  (("" (inst - "si" "so" "vi" "vo")
                    (("" (label "noe" -1)
                      (("" (lemma "dot_at_neg_deriv_domain")
                        (("" (inst - "si" "so" "vi" "vo")
                          (("" (label "dd" -1)
                            ((""
                              (case "(dot_at_neg?(so,vo,si,vi)) = ((dot_at_neg?(so,vo,si,vi)))")
                              (("1"
                                (label "typeeq" -1)
                                (("1"
                                  (hide "typeeq")
                                  (("1"
                                    (name
                                     "RR"
                                     "tau_current_min_unbounded(so, vo, si, vi)")
                                    (("1"
                                      (replace -1)
                                      (("1"
                                        (label "RRname" -1)
                                        (("1"
                                          (name
                                           "tr"
                                           "unbounded_nominal_tau(so, vo, si, vi, RR)")
                                          (("1"
                                            (label "trname" -1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (label "t1tp" -8)
                                                    (("1"
                                                      (label "t2tp" -9)
                                                      (("1"
                                                        (case
                                                         "FORALL (tzr:real): (so + tzr*vo) - (si + tzr*vi) = ss + tzr*vv")
                                                        (("1"
                                                          (inst-cp
                                                           -
                                                           "t1")
                                                          (("1"
                                                            (inst-cp
                                                             -
                                                             "t2")
                                                            (("1"
                                                              (inst-cp
                                                               -
                                                               "tr")
                                                              (("1"
                                                                (case
                                                                 "tau_current_at(so,vo,si,vi)(t1) < tau_current_at(so,vo,si,vi)(t2)")
                                                                (("1"
                                                                  (expand
                                                                   "tau_current_at")
                                                                  (("1"
                                                                    (expand
                                                                     "tau_current_at_numerator")
                                                                    (("1"
                                                                      (expand
                                                                       "tau_current_at_denominator")
                                                                      (("1"
                                                                        (expand
                                                                         "tau_current")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "/")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -4)
                                                                                (("1"
                                                                                  (replace
                                                                                   -5)
                                                                                  (("1"
                                                                                    (replace
                                                                                     "ssname")
                                                                                    (("1"
                                                                                      (replace
                                                                                       "vvname")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (cross-mult
                                                                                           -1)
                                                                                          (("1"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (cross-mult
                                                                                               2)
                                                                                              (("1"
                                                                                                (cross-mult
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-2
                                                                                                      2))
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     ("t2tp"
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               ("t1tp"
                                                                                                1))
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             ("t2tp"
                                                                                              1))
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   3)
                                                                  (("2"
                                                                    (lemma
                                                                     "mean_value[(dot_at_neg?(so, vo, si, vi))]")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "t1"
                                                                       "t2"
                                                                       "tau_current_at(so,vo,si,vi)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           "cc")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (case
                                                                               "deriv(tau_current_at(so, vo, si, vi), cc) > 0")
                                                                              (("1"
                                                                                (mult-by
                                                                                 -1
                                                                                 ("t2-t1"))
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "cc > tr")
                                                                                (("1"
                                                                                  (case
                                                                                   "NOT (ss + cc*vv)*vv < 0")
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-3
                                                                                      "t2tp"
                                                                                      1))
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "sqv(vv)")
                                                                                      (("1"
                                                                                        (mult-by
                                                                                         -1
                                                                                         "t2-cc")
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     (-3
                                                                                      -4
                                                                                      -5
                                                                                      -7
                                                                                      -8
                                                                                      -9))
                                                                                    (("2"
                                                                                      (hide
                                                                                       ("t1tp"
                                                                                        "t2tp"))
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "deriv_div[(dot_at_neg?(so,vo,si,vi))]")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "tau_current_at")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "derivable?[(dot_at_neg?(so,vo,si,vi))]
                                                                                                                                                                                                                                                                                                                                       (tau_current_at_numerator(so, vo, si, vi), cc)
                                                                                                                                                                                                                                                                                                                                    AND
                                                                                                                                                                                                                                                                                                                                    derivable?[(dot_at_neg?(so,vo,si,vi))]
                                                                                                                                                                                                                                                                                                                                        (tau_current_at_denominator(so, vo, si, vi), cc)")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -3
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (cross-mult
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (ground)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "NOT forall (eg1:real): 0*eg1 = 0")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (rewrite
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (name
                                                                                                                       "a"
                                                                                                                       "-sq(sqv(vv))")
                                                                                                                      (("2"
                                                                                                                        (label
                                                                                                                         "aname"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "a<0")
                                                                                                                          (("1"
                                                                                                                            (label
                                                                                                                             "aneg"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (name
                                                                                                                               "b"
                                                                                                                               "(-2)*((ss*vv)*sqv(vv))")
                                                                                                                              (("1"
                                                                                                                                (label
                                                                                                                                 "bname"
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (name
                                                                                                                                   "c"
                                                                                                                                   "(-2)*sq(ss*vv)+sqv(vv)*sqv(ss)-sq(DMOD)*sqv(vv)")
                                                                                                                                  (("1"
                                                                                                                                    (label
                                                                                                                                     "cname"
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "NOT discr(a,b,c)>0")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "discr")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "b"
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "a"
                                                                                                                                             1)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "c"
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (copy
                                                                                                                                                   -17)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "sq"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "-4 * (sqv(ss) * sqv(vv) * -1) +
                                                                                                                                                                                                                         4 * (sqv(vv) * DMOD * DMOD * -1)
                                                                                                                                                                                                                         + 8 * (ss * vv * (ss * vv) * -1)
                                                                                                                                                                                                                         + 4 * ( (ss * vv) * (ss * vv))
                                                                                                                                                                                                                         > 0")
                                                                                                                                                        (("1"
                                                                                                                                                          (mult-by
                                                                                                                                                           -1
                                                                                                                                                           "sq(sqv(vv))")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "sq")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (hide
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "Delta_discr2b[DMOD]")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-1
                                                                                                                                                                          1))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "discr2b")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (label
                                                                                                                                         "discrnn"
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (name
                                                                                                                                           "ff"
                                                                                                                                           "quadratic(a,b,c)")
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "ff(cc) > 0")
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "deriv(tau_current_at_numerator(so, vo, si, vi), cc) = 2*((ss+cc*vv)*vv) AND deriv(tau_current_at_denominator(so, vo, si, vi), cc) = -sqv(vv)")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (replaces
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "tau_current_at_denominator"
                                                                                                                                                       +)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "tau_current_at_numerator"
                                                                                                                                                         +)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           "ssname")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             "vvname")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-1
                                                                                                                                                                1))
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "ff")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "a")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "b")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "c")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (split
                                                                                                                                                   +)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "deriv_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "LAMBDA (tr: (dot_at_neg?(so, vo, si, vi))):
                                                                                                                                                                                                                                      sqv((so - si) + tr * (vo - vi))"
                                                                                                                                                       "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):-sq(DMOD))"
                                                                                                                                                       "cc")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (split
                                                                                                                                                           -)
                                                                                                                                                          (("1"
                                                                                                                                                            (invoke
                                                                                                                                                             (case
                                                                                                                                                              "%1 = %2")
                                                                                                                                                             (!
                                                                                                                                                              -1
                                                                                                                                                              1)
                                                                                                                                                             (!
                                                                                                                                                              1
                                                                                                                                                              1))
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   (-1
                                                                                                                                                                    -2))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "deriv_const_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "-sq(DMOD)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "deriv"
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (decompose-equality
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "cc")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (hide
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "deriv_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vv)*tr^2)"
                                                                                                                                                                                       "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):2*(ss*vv)*tr + sqv(ss))"
                                                                                                                                                                                       "cc")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (invoke
                                                                                                                                                                                             (case
                                                                                                                                                                                              "%1 = %2")
                                                                                                                                                                                             (!
                                                                                                                                                                                              -1
                                                                                                                                                                                              1)
                                                                                                                                                                                             (!
                                                                                                                                                                                              1
                                                                                                                                                                                              1))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "2*(ss*vv)"
                                                                                                                                                                                                     "sqv(ss)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (decompose-equality
                                                                                                                                                                                                           -2)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "cc")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (invoke
                                                                                                                                                                                                               (case
                                                                                                                                                                                                                "%1 = %2")
                                                                                                                                                                                                               (!
                                                                                                                                                                                                                -1
                                                                                                                                                                                                                1)
                                                                                                                                                                                                               (!
                                                                                                                                                                                                                1
                                                                                                                                                                                                                1
                                                                                                                                                                                                                1))
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                                     "deriv_x_to_n[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (hide
                                                                                                                                                                                                                       (-2
                                                                                                                                                                                                                        -3))
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         -
                                                                                                                                                                                                                         "2"
                                                                                                                                                                                                                         "sqv(vv)")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (decompose-equality
                                                                                                                                                                                                                               -2)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -
                                                                                                                                                                                                                                 "cc")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (invoke
                                                                                                                                                                                                                                   (case
                                                                                                                                                                                                                                    "%1 = %2")
                                                                                                                                                                                                                                   (!
                                                                                                                                                                                                                                    -1
                                                                                                                                                                                                                                    1)
                                                                                                                                                                                                                                   (!
                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                    2))
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                                     :dir
                                                                                                                                                                                                                                     rl)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                       -2)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (reveal
                                                                                                                                                                                                                                       "typeeq")
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                         "deriv"
                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "deriv"
                                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (reveal
                                                                                                                                                                                                                   "typeeq")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "deriv"
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "deriv"
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "+"
                                                                                                                                                                                               +
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 "ssname")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   "vvname")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (reveal
                                                                                                                                                                                                         "typeeq")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (grind
                                                                                                                                                                                                           :exclude
                                                                                                                                                                                                           "deriv")
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "deriv_x_to_n[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -
                                                                                                                                                                                               "2"
                                                                                                                                                                                               "sqv(vv)")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                       (-1
                                                                                                                                                                                                        1))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (reveal
                                                                                                                                                                                                         "typeeq")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "derivable?"
                                                                                                                                                                                                           -2)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "cc")
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -
                                                                                                                                                                                               "2*(ss*vv)"
                                                                                                                                                                                               "sqv(ss)")
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("3"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "derivable?"
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -
                                                                                                                                                                                                       "cc")
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "const_derivable_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "-sq(DMOD)")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "derivable?"
                                                                                                                                                                                 -)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -
                                                                                                                                                                                   "x1!1")
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "tau_current_at_numerator"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 "ssname")
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   "vvname")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "+")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (grind
                                                                                                                                                                         :exclude
                                                                                                                                                                         "deriv")
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "deriv_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vv)*tr^2)"
                                                                                                                                                               "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):2*(ss*vv)*tr + sqv(ss))"
                                                                                                                                                               "cc")
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "derivable_sum[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))): sqv(vv)*tr^2)"
                                                                                                                                                                     "(LAMBDA (tr:(dot_at_neg?(so, vo, si, vi))):2*(ss*vv)*tr + sqv(ss))")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "derivable?"
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -
                                                                                                                                                                           "cc")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (invoke
                                                                                                                                                                             (case
                                                                                                                                                                              "%1 = %2")
                                                                                                                                                                             (!
                                                                                                                                                                              -1
                                                                                                                                                                              1)
                                                                                                                                                                             (!
                                                                                                                                                                              1
                                                                                                                                                                              1))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (decompose-equality)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "+")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "ss")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "vv")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (grind)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "2*(ss*vv)"
                                                                                                                                                                         "sqv(ss)")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "deriv_x_to_n[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "2"
                                                                                                                                                                         "sqv(vv)")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("3"
                                                                                                                                                            (lemma
                                                                                                                                                             "const_derivable_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                            (("3"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "-sq(DMOD)")
                                                                                                                                                              (("3"
                                                                                                                                                                (expand
                                                                                                                                                                 "derivable?"
                                                                                                                                                                 -)
                                                                                                                                                                (("3"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "cc")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (expand
                                                                                                                                                     "tau_current_at_denominator"
                                                                                                                                                     +)
                                                                                                                                                    (("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "deriv_linear_fun[(dot_at_neg?(so,vo,si,vi))]")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "-sqv(vv)"
                                                                                                                                                         "-(ss*vv)")
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           "ssname")
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             "vvname")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (decompose-equality
                                                                                                                                                                   -2)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "cc")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-1
                                                                                                                                                                          1))
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "deriv")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "deriv")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (reveal
                                                                                                                                                                                 "typeeq")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (hide
                                                                                                                                                 (-9
                                                                                                                                                  -7
                                                                                                                                                  -8))
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "ff"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "quadratic"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (rewrite
                                                                                                                                                       "quadratic_gt_0")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "cc > root(a,b,c,1) AND cc < -b/(2*a) AND -b/(2*a) <= root(a,b,c,-1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (ground)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (hide
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (split
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "root(a,b,c,1) = tr")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (hide
                                                                                                                                                                     2)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "root"
                                                                                                                                                                       +)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "tr"
                                                                                                                                                                         +)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "unbounded_nominal_tau"
                                                                                                                                                                           +)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "-b/(2*a) = -((so - si) * (vo - vi)) / sqv(vo - vi)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1
                                                                                                                                                                                   :dir
                                                                                                                                                                                   rl)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "sqrt(discr(a,b,c))/(2*a) = -RR/2")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (cross-mult
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "RR"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "sq_eq")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst?)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "sq_times")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       "sq_times")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "sq_times")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "a"
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                 "sq_neg")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                   "sq_neg")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "tau_current_min_unbounded"
                                                                                                                                                                                                                     +)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                                       "sq_div")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                         "sq_times")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (cross-mult
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (cross-mult
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 "ssname")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   "vvname")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                                                     "Delta_discr2b[DMOD]")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                                       -
                                                                                                                                                                                                                                       "vv"
                                                                                                                                                                                                                                       "ss")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                                           +)
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                               "b")
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "c")
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (grind
                                                                                                                                                                                                                                                   :exclude
                                                                                                                                                                                                                                                   "*")
                                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (case
                                                                                                                                                                                                                                           "vo + zero = vi + vv")
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (replace
                                                                                                                                                                                                                                             -2)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                             "vv")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (grind)
                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                           "sqv_eq_0")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (case
                                                                                                                                                                                                                                 "vo + zero = vi + (vo-vi)")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (grind)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (case
                                                                                                                                                                                                   "tau_current_min_unbounded(so, vo, si, vi) >=0")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (mult-by
                                                                                                                                                                                                     -1
                                                                                                                                                                                                     "-a")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "b"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "a"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "sq")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT -b/(2*a) = -((so - si) * (vo - vi)) / sqv(vo - vi)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "b"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "a"
                                                                                                                                                                       1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "sq")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     "ssname")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       "vvname")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (case
                                                                                                                                                                         "(ss + (-b/(2*a))*vv)*vv = 0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-1
                                                                                                                                                                            -9
                                                                                                                                                                            "aneg"
                                                                                                                                                                            1))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "sqv(vv)>0")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (mult-by
                                                                                                                                                                               -1
                                                                                                                                                                               "cc-(-b/(2*a))")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (rewrite
                                                                                                                                                                                 "dot_add_left")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "dot_add_left")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "sqv")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "FORALL (aa1,bb2:real): aa1>=0 AND bb2>=0 IMPLIES aa1+bb2>=0")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (invoke
                                                                                                                                                                                               (inst
                                                                                                                                                                                                -
                                                                                                                                                                                                "%1"
                                                                                                                                                                                                "%2")
                                                                                                                                                                                               (!
                                                                                                                                                                                                -2
                                                                                                                                                                                                1)
                                                                                                                                                                                               (!
                                                                                                                                                                                                -3
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (split
                                                                                                                                                                                                 -)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                   (-1
                                                                                                                                                                                                    -5))
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (grind)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("3"
                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                   (-2
                                                                                                                                                                                                    1))
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (grind)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "sqv_eq_0")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (case
                                                                                                                                                                           "ss*vv = (b/(2*a))*sqv(vv)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "dot_add_left")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "sqv")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "a"
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "b"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (cross-mult
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "sq")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("3"
                                                                                                                                                                      (replace
                                                                                                                                                                       "vvname")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "sqv_eq_0")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("3"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (expand
                                                                                                                                                                   "root"
                                                                                                                                                                   +)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (mult-by
                                                                                                                                                                     1
                                                                                                                                                                     "-a")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "a = 0")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "sq_eq_0")
                                                                                                                                  (("1"
                                                                                                                                    (inst?)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "sqv_eq_0")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "vo + zero = vi + (vo-vi)")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide-all-but
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (invoke
                                                                                                                 (typepred
                                                                                                                  "sq(%1)")
                                                                                                                 (!
                                                                                                                  1
                                                                                                                  1
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "sq_eq_0")
                                                                                                                  (("2"
                                                                                                                    (invoke
                                                                                                                     (inst
                                                                                                                      -
                                                                                                                      "(%1)")
                                                                                                                     (!
                                                                                                                      1
                                                                                                                      1
                                                                                                                      1))
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "sq"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (ground)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "tau_current_at_denominator"
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               "ssname")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 "vvname")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-2
                                                                                                                                      -6))
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "sq")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "tau_current_at_numerator(so, vo, si, vi)")
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "tau_current_at_denominator(so, vo, si, vi)")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "derivable?"
                                                                                                           (-1
                                                                                                            -2))
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "cc")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "connected?")
                                                                      (("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "dot_at_neg?")
                                                                          (("2"
                                                                            (expand
                                                                             "dot_at")
                                                                            (("2"
                                                                              (typepred
                                                                               "x!1")
                                                                              (("2"
                                                                                (typepred
                                                                                 "y!1")
                                                                                (("2"
                                                                                  (expand
                                                                                   "dot_at_neg?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "dot_at")
                                                                                    (("2"
                                                                                      (replace
                                                                                       "ssname")
                                                                                      (("2"
                                                                                        (replace
                                                                                         "vvname")
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           (-1
                                                                                            -2
                                                                                            -3
                                                                                            -4
                                                                                            1))
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "sqv(vv)")
                                                                                            (("2"
                                                                                              (mult-by
                                                                                               -1
                                                                                               "y!1-z!1")
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (expand
                                                                   "dot_at_neg?")
                                                                  (("3"
                                                                    (expand
                                                                     "dot_at")
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (expand
                                                                   "dot_at_neg?")
                                                                  (("4"
                                                                    (expand
                                                                     "dot_at")
                                                                    (("4"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "ss")
                                                            (("2"
                                                              (expand
                                                               "vv")
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (dot_at_neg_not_one_element formula-decl nil tcas_tau nil)
    (dot_at_neg? const-decl "bool" tcas_tau nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (unbounded_nominal_tau const-decl "real" tcas_tau nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    nil nil (dot_at const-decl "real" tcas_tau nil)
    (derivable? const-decl "bool" derivatives_def analysis)
    (deriv const-decl "real" derivatives_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil) nil nil nil nil nil
    nil
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (deriv_div formula-decl nil derivatives_def analysis)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (discr const-decl "real" quadratic reals)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    nil
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    nil (Delta_discr2b formula-decl nil horizontal ACCoRD)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (sq_0 formula-decl nil sq reals)
    (discr2b const-decl "real" quadratic_2b reals)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors) nil
    (minus_odd_is_odd application-judgement "odd_int" integers nil) nil
    (quadratic const-decl "real" quadratic reals)
    (quadratic_gt_0 formula-decl nil quadratic reals)
    (both_sides_times_pos_le1 formula-decl nil real_props nil)
    (scal_zero formula-decl nil vectors_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals) nil
    (sq_neg formula-decl nil sq reals)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (times_div1 formula-decl nil real_props nil)
    (sq_div formula-decl nil sq reals)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_times formula-decl nil sq reals)
    (sq_eq formula-decl nil sq reals)
    (div_cancel4 formula-decl nil real_props nil)
    (div_cancel3 formula-decl nil real_props nil) nil
    (root const-decl "real" quadratic reals)
    (Sign type-eq-decl nil sign reals)
    (nzint nonempty-type-eq-decl nil integers nil)
    (TRUE const-decl "bool" booleans nil) nil
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (^ const-decl "real" exponentiation nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (deriv_linear_fun formula-decl nil derivatives analysis)
    (expt def-decl "real" exponentiation nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (deriv_x_to_n formula-decl nil derivatives analysis)
    (const_derivable_fun formula-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv_const_fun formula-decl nil derivatives analysis) nil
    (derivable_sum application-judgement "deriv_fun" derivatives
     analysis)
    nil (derivable_sum judgement-tcc nil derivatives analysis)
    (deriv_sum formula-decl nil derivatives_def analysis)
    (sq_eq_0 formula-decl nil sq reals)
    (div_mult_pos_neg_gt1 formula-decl nil extra_real_props nil)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (connected? const-decl "bool" deriv_domain_def analysis)
    (mean_value formula-decl nil derivative_props analysis)
    (tau_current_at_denominator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (div_mult_pos_neg_lt2 formula-decl nil extra_real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (div_mult_neg_lt1 formula-decl nil real_props nil)
    (times_div2 formula-decl nil real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil) nil
    (* const-decl "real" vectors_2D vectors)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (div_mult_pos_neg_lt1 formula-decl nil extra_real_props nil) nil
    (tau_current const-decl "{rr: real |
   (so - si) * (vo - vi) < 0 AND norm(so - si) >= DMOD IMPLIES rr >= 0}"
     tcas_tau nil)
    (tau_current_at_numerator const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (tau_current_at const-decl
     "deriv_fun[(dot_at_neg?(so, vo, si, vi))]" tcas_tau nil)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (< const-decl "bool" reals nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (<= const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DMOD formal-const-decl "posreal" tcas_tau nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (nnreal type-eq-decl nil real_types nil)
    (tau_current_min_unbounded const-decl "nnreal" tcas_tau nil)
    (dot_at_neg_deriv_domain formula-decl nil tcas_tau nil))
   nil)))

