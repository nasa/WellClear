(kinematic_gs_bands
 (kinematic_gs_bands_init_TCC1 0
  (kinematic_gs_bands_init_TCC1-2 "" 3794670294
   ("" (skeep) (("" (assert) nil nil)) nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   shostak
   (kinematic_gs_bands_init subtype
    "real_defs.max(floor_ceil.ceiling(number_fields./(((number_fields.-)(Velocity.gs(kinematic_gs_bands.vo), kinematic_gs_bands.mings)), kinematic_gs_bands.step)), 0)"
    "nat"))
  (kinematic_gs_bands_init_TCC1-1 nil 3631963199
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (replace -3 +)
            (("" (assert)
              (("" (expand "gsAccel" +)
                (("" (split)
                  (("1" (expand "gsAccelPos")
                    (("1" (decompose-equality)
                      (("1" (grind) nil nil) ("2" (grind) nil nil))
                      nil))
                    nil)
                   ("2" (assert)
                    (("2" (typepred "vo")
                      (("2" (lift-if)
                        (("2" (ground)
                          (("1" (expand "gs")
                            (("1" (rewrite "sq_eq" -1 :dir rl)
                              (("1"
                                (rewrite "sq_norm")
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (rewrite "mkTrkGsVs_def" 2) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil
   (kinematic_gs_bands_init subtype
    "real_defs.max(floor_ceil.ceiling(number_fields./(((number_fields.-)(Velocity.gs(kinematic_gs_bands.vo), kinematic_gs_bands.mings)), kinematic_gs_bands.step)), 0)"
    "nat")))
 (kinematic_gs_bands_init_TCC2 0
  (kinematic_gs_bands_init_TCC2-1 nil 3683460933
   ("" (subtype-tcc) nil nil)
   ((real_div_nzreal_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (/= const-decl "boolean" notequal nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (gs const-decl "nnreal" Velocity aviation)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (kinematic_gs_bands_init subtype
    "real_defs.max(floor_ceil.ceiling(number_fields./(((number_fields.-)(kinematic_gs_bands.maxgs, Velocity.gs(kinematic_gs_bands.vo))), kinematic_gs_bands.step)), 0)"
    "nat")))
 (kinematic_gs_bands_init_TCC3 0
  (kinematic_gs_bands_init_TCC3-1 nil 3683460933
   ("" (subtype-tcc) nil nil)
   ((vect2 const-decl "Vect2" vect_3D_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (gs const-decl "nnreal" Velocity aviation)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (Vect3 const-decl "{vv: Vect3 | vect2(vv) = w AND vv`z = z}" util
     aviation)
    (gsAccelPos const-decl "Vect3" kinematics_gs_accel aviation)
    (vs const-decl "real" Velocity aviation)
    (mkTrkGsVs const-decl "Velocity" Velocity aviation)
    (gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (kinematic_gs_bands_init subtype "kinematic_gs_bands.AL"
    "{AL | reals.>(list_props[Aircraft].length(combine_bands.AL), 0)}")))
 (kinematic_gs_bands_init_increasing_TCC1 0
  (kinematic_gs_bands_init_increasing_TCC1-1 nil 3634315170
   ("" (subtype-tcc) nil nil)
   ((posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (Vect3 const-decl "{vv: Vect3 | vect2(vv) = w AND vv`z = z}" util
     aviation)
    (gsAccelPos const-decl "Vect3" kinematics_gs_accel aviation)
    (gs const-decl "nnreal" Velocity aviation)
    (vs const-decl "real" Velocity aviation)
    (mkTrkGsVs const-decl "Velocity" Velocity aviation)
    (gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (* const-decl "Vector" vectors_3D vectors)
    (+ const-decl "Vector" vectors_3D vectors)
    (detector? const-decl "bool" int_bands nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (kinematic_gs_bands_init_increasing subtype
    "kinematic_gs_bands.most_urgent"
    "{most_urgent | booleans.AND(reals.>=(kinematic_gs_bands.most_urgent(kinematic_gs_bands.so, kinematic_gs_bands.vo, kinematic_gs_bands.AL), 0), reals.<(kinematic_gs_bands.most_urgent(kinematic_gs_bands.so, kinematic_gs_bands.vo, kinematic_gs_bands.AL), list_props[Aircraft].length(kinematic_gs_bands.AL)))}")))
 (kinematic_gs_bands_init_increasing 0
  (kinematic_gs_bands_init_increasing-1 nil 3634315609
   ("" (skeep*)
    (("" (skoletin 1)
      (("" (expand "kinematic_gs_bands_init" :assert? none)
        (("" (skoletin -)
          (("" (skoletin -)
            (("" (skoletin -)
              (("" (skoletin -)
                (("" (skoletin -)
                  (("" (skoletin -)
                    (("" (assert)
                      (("" (replaces -1 1)
                        (("" (lemma "strictly_increasing_add_real")
                          (("" (inst?)
                            (("" (assert)
                              ((""
                                (hide 2)
                                ((""
                                  (lemma "strictly_increasing_scal")
                                  ((""
                                    (inst?)
                                    ((""
                                      (assert)
                                      ((""
                                        (hide 2)
                                        ((""
                                          (lemma
                                           "kinematic_bands_combine_increasing")
                                          ((""
                                            (inst?)
                                            ((""
                                              (assert)
                                              ((""
                                                (replaces -3)
                                                ((""
                                                  (replaces -3)
                                                  ((""
                                                    (hide-all-but 1)
                                                    ((""
                                                      (assert)
                                                      ((""
                                                        (expand
                                                         "gsAccel")
                                                        ((""
                                                          (assert)
                                                          ((""
                                                            (case
                                                             "gs(vo) = 0")
                                                            (("1"
                                                              (expand
                                                               "gs")
                                                              (("1"
                                                                (case
                                                                 "vect2(vo)=zero")
                                                                (("1"
                                                                  (case
                                                                   "vo`x = 0 AND vo`y=0")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (replace
                                                                       -4)
                                                                      (("1"
                                                                        (expand
                                                                         "gsAccelPos")
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (decompose-equality
                                                                             1)
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "mkTrkGsVs")
                                                                            (("2"
                                                                              (decompose-equality
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (ground)
                                                                            (("3"
                                                                              (grind)
                                                                              (("3"
                                                                                (grind)
                                                                                (("3"
                                                                                  (decompose-equality
                                                                                   1)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (expand
                                                                             "mkTrkGsVs")
                                                                            (("4"
                                                                              (ground)
                                                                              (("4"
                                                                                (decompose-equality
                                                                                 1)
                                                                                (("4"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (case
                                                                       "vect2(vo)`x=vectors_2D.zero`x")
                                                                      (("1"
                                                                        (grind)
                                                                        (("1"
                                                                          (case
                                                                           "vect2(vo)`y=vectors_2D.zero`y")
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (replace
                                                                             -2
                                                                             :dir
                                                                             rl)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (replace
                                                                         -1
                                                                         :dir
                                                                         rl)
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (rewrite
                                                                       "norm_eq_0"
                                                                       -1)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (split
                                                                 +)
                                                                (("1"
                                                                  (grind)
                                                                  (("1"
                                                                    (decompose-equality
                                                                     1)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "mkTrkGsVs_def")
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (grind)
                                                                  (("3"
                                                                    (decompose-equality
                                                                     1)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (lemma
                                                                   "mkTrkGsVs_def")
                                                                  (("4"
                                                                    (inst?)
                                                                    (("4"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (mkTrkGsVs_def formula-decl nil Velocity aviation)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (Vect2 const-decl "{vv: Vect2 | vv`x = x AND vv`y = y}" util
     aviation)
    (Hat const-decl "{v: Vect2 |
   (v = zero IFF w = zero) AND
    (w /= zero IFF (norm(v) = 1 AND v = (1 / norm(w)) * w))}" util
     aviation)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (norm_eq_0 formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (sqrt_0 formula-decl nil sqrt reals)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (* const-decl "real" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sin const-decl "real" sincos_def trig)
    (cos const-decl "real" sincos_def trig)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def trig)
    (nnreal_lt_2pi nonempty-type-eq-decl nil trig_types trig)
    (trk const-decl "nnreal_lt_2pi" track aviation)
    (vs const-decl "real" Velocity aviation)
    (real_times_real_is_real application-judgement "real" reals nil)
    (cos_range application-judgement "real_abs_le1" sincos trig)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (mkTrkGsVs const-decl "Velocity" Velocity aviation)
    (Vect3 const-decl "{vv: Vect3 | vect2(vv) = w AND vv`z = z}" util
     aviation)
    (scal_0 formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (gsAccelPos const-decl "Vect3" kinematics_gs_accel aviation)
    (zero const-decl "Vector" vectors_2D vectors)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (kinematic_bands_combine_increasing formula-decl nil combine_bands
     nil)
    (strictly_increasing_scal formula-decl nil real_bands nil)
    (strictly_increasing_add_real formula-decl nil real_bands nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (Traj type-eq-decl nil int_bands nil)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (listn type-eq-decl nil listn structures)
    (IntBand type-eq-decl nil int_bands nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Velocity type-eq-decl nil Velocity aviation)
    (gs const-decl "nnreal" Velocity aviation)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (strictly_increasing_real? const-decl "bool" real_bands nil)
    (kinematic_gs_bands_init const-decl "list[RealBand]"
     kinematic_gs_bands nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (RealBand type-eq-decl nil real_bands nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (kinematic_gs_bands_TCC1 0
  (kinematic_gs_bands_TCC1-1 nil 3632218193
   ("" (skeep*)
    (("" (lemma "kinematic_gs_bands_init_increasing")
      (("" (inst?)
        (("" (assert)
          (("" (hide-all-but 1)
            (("" (expand "gsAccel")
              (("" (expand "gsAccelPos")
                (("" (assert)
                  (("" (split)
                    (("1" (decompose-equality)
                      (("1" (grind) nil nil) ("2" (grind) nil nil))
                      nil)
                     ("2" (lift-if)
                      (("2" (ground)
                        (("1" (expand "gs")
                          (("1" (rewrite "sq_eq" -1 :dir rl)
                            (("1" (rewrite "sq_norm")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (rewrite "mkTrkGsVs_def" 2) nil nil))
                        nil))
                      nil)
                     ("3" (decompose-equality)
                      (("1" (grind) nil nil) ("2" (grind) nil nil))
                      nil)
                     ("4" (lift-if)
                      (("4" (ground)
                        (("1" (expand "gs")
                          (("1" (rewrite "sq_eq" -1 :dir rl)
                            (("1" (rewrite "sq_norm")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (rewrite "mkTrkGsVs_def" 2) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((mkTrkGsVs_def formula-decl nil Velocity aviation)
    (Velocity type-eq-decl nil Velocity aviation)
    (sq_norm formula-decl nil vectors_2D vectors)
    (sq_0 formula-decl nil sq reals) (sq_eq formula-decl nil sq reals)
    (norm const-decl "nnreal" vectors_2D vectors)
    (gs const-decl "nnreal" Velocity aviation)
    (Vect3 const-decl "{vv: Vect3 | vect2(vv) = w AND vv`z = z}" util
     aviation)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (gsAccelPos const-decl "Vect3" kinematics_gs_accel aviation)
    (gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (length def-decl "nat" list_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (detector? const-decl "bool" int_bands nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (kinematic_gs_bands_init_increasing formula-decl nil
     kinematic_gs_bands nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (kinematic_gs_bands subtype "kinematic_gs_bands.kvb"
    "{RL | real_bands.strictly_increasing_real?(real_bands.RL)}")))
 (kinematic_gs_bands_def 0
  (kinematic_gs_bands_def-4 nil 3633951483
   ("" (skeep*)
    (("" (label "ans1" -8)
      (("" (label "ans2" -9)
        (("" (skoletin 1)
          (("" (skeep)
            (("" (skoletin 1)
              (("" (assert)
                (("" (flatten)
                  (("" (expand "kinematic_gs_bands" :assert? none)
                    (("" (skoletin -6)
                      (("" (typepred "intersect(kvb, mings, maxgs)")
                        (("" (hide -1)
                          (("" (inst - "newgs")
                            (("" (assert)
                              ((""
                                (flatten)
                                ((""
                                  (hide -1)
                                  ((""
                                    (split -)
                                    (("1"
                                      (expand
                                       "kinematic_gs_bands_init"
                                       :assert?
                                       none)
                                      (("1"
                                        (skoletin -3)
                                        (("1"
                                          (skoletin -1)
                                          (("1"
                                            (skoletin -1)
                                            (("1"
                                              (skoletin -1)
                                              (("1"
                                                (skoletin -1)
                                                (("1"
                                                  (skoletin -1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (lemma
                                                       "kinematic_bands_combine_def")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (replace
                                                           -3
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (split -)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "dir*j")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split
                                                                     -)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (hide
                                                                         -2)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (case
                                                                               "dir = -1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Downfun"
                                                                                   +)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "timestep"
                                                                                     +)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "j = 0")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Downfun"
                                                                                     +)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "timestep"
                                                                                       +)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "conflict_steps_eq")
                                                                                              (("1"
                                                                                                (insteep
                                                                                                 -
                                                                                                 :but
                                                                                                 ("trajl"
                                                                                                  "trajr"
                                                                                                  "tsl"
                                                                                                  "tsr"
                                                                                                  "useLOS2"))
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "Downfun"
                                                                                                   "Upfun"
                                                                                                   "step/a"
                                                                                                   "step/a"
                                                                                                   "UseLOS2")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "Upfun"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "dir = 1")
                                                                                                            (("1"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "dir")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "Downfun"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (expand
                                                                                                         "Upfun"
                                                                                                         1)
                                                                                                        (("3"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "dir = 1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "dir")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (case
                                                                                 "dir = 1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Upfun"
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "timestep"
                                                                                         1)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "j = 0")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "Upfun"
                                                                                         +)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "timestep"
                                                                                           +)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "dir = -1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "conflict_steps_eq")
                                                                                                    (("1"
                                                                                                      (insteep
                                                                                                       -
                                                                                                       :but
                                                                                                       ("trajl"
                                                                                                        "trajr"
                                                                                                        "tsl"
                                                                                                        "tsr"
                                                                                                        "useLOS2"))
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "Downfun"
                                                                                                         "Upfun"
                                                                                                         "step/a"
                                                                                                         "step/a"
                                                                                                         "UseLOS2")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Downfun"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "Upfun"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "dir")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "dir")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (copy
                                                                             -8)
                                                                            (("3"
                                                                              (replace
                                                                               -2
                                                                               -1)
                                                                              (("3"
                                                                                (skeep)
                                                                                (("3"
                                                                                  (inst
                                                                                   +
                                                                                   "j!1")
                                                                                  (("3"
                                                                                    (expand
                                                                                     "add"
                                                                                     -1)
                                                                                    (("3"
                                                                                      (rewrite
                                                                                       "map_nth_rw"
                                                                                       -1)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "scal"
                                                                                         -)
                                                                                        (("3"
                                                                                          (rewrite
                                                                                           "map_nth_rw"
                                                                                           -1)
                                                                                          (("3"
                                                                                            (expand
                                                                                             "addrb"
                                                                                             -1)
                                                                                            (("3"
                                                                                              (expand
                                                                                               "scalrb"
                                                                                               -1)
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "newgs"
                                                                                                 -1)
                                                                                                (("3"
                                                                                                  (expand
                                                                                                   "in?"
                                                                                                   (-1
                                                                                                    1))
                                                                                                  (("3"
                                                                                                    (flatten)
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (both-sides
                                                                                                           "-"
                                                                                                           "gs(vo)"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (div-by
                                                                                                               -1
                                                                                                               "step")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (both-sides
                                                                                                           "-"
                                                                                                           "gs(vo)"
                                                                                                           -2)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (div-by
                                                                                                               -2
                                                                                                               "step")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "MaxDown"
                                                                       1)
                                                                      (("2"
                                                                        (typepred
                                                                         "dir")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (case
                                                                               "j<=(gs(vo) - mings) / step")
                                                                              (("1"
                                                                                (expand
                                                                                 "max"
                                                                                 1)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (cross-mult
                                                                                 1)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (typepred
                                                                       "dir")
                                                                      (("3"
                                                                        (hide
                                                                         -1)
                                                                        (("3"
                                                                          (case
                                                                           "dir = -1")
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (hide
                                                                                 1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "MaxUp"
                                                                                     1)
                                                                                    (("2"
                                                                                      (case
                                                                                       "j<=(maxgs-gs(vo))/step")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (cross-mult
                                                                                         1)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "Downfun"
                                                                 1)
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (expand
                                                                 "Upfun"
                                                                 1)
                                                                (("3"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (skeep -)
                                      (("2"
                                        (inst + "i")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((MaxUp skolem-const-decl
     "{k: int | ceiling((maxgs - gs(vo)) / step) <= k AND 0 <= k}"
     kinematic_gs_bands nil)
    (div_mult_pos_le2 formula-decl nil real_props nil)
    (MaxDown skolem-const-decl
     "{k: int | ceiling((gs(vo) - mings) / step) <= k AND 0 <= k}"
     kinematic_gs_bands nil)
    (both_sides_div_pos_le1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (both_sides_minus_le1 formula-decl nil real_props nil)
    (both_sides_plus_le2 formula-decl nil real_props nil)
    (in? const-decl "bool" int_bands nil)
    (newgs skolem-const-decl "real" kinematic_gs_bands nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (map_nth_rw formula-decl nil more_map_props nil)
    (addrb const-decl "RealBand" real_bands nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (Upfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_gs_bands nil)
    (conflict_steps_eq formula-decl nil combine_bands nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (timestep skolem-const-decl "posreal" kinematic_gs_bands nil)
    (Downfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_gs_bands nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (kinematic_bands_combine_def formula-decl nil combine_bands nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (listn type-eq-decl nil listn structures)
    (IntBand type-eq-decl nil int_bands nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (integer nonempty-type-from-decl nil integers nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (intersect def-decl "{rl: list[RealBand] |
   (length(rl) > 0 IMPLIES
     (min <= nth(rl, 0)`lb AND nth(rl, length(rl) - 1)`ub <= max))
    AND
    FORALL (r: real):
      (min <= r AND r <= max) IMPLIES
       ((EXISTS (j: below(length(RL))): in?(nth(RL, j), r)) IFF
         (EXISTS (j: below(length(rl))): in?(nth(rl, j), r)))}"
     real_bands nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (kinematic_gs_bands_init const-decl "list[RealBand]"
     kinematic_gs_bands nil)
    (strictly_increasing_real? const-decl "bool" real_bands nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (Traj type-eq-decl nil int_bands nil)
    (conflict_step const-decl "bool" int_bands nil)
    (gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (in? const-decl "bool" real_bands nil)
    (below type-eq-decl nil nat_types nil)
    (nth def-decl "T" list_props nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Velocity type-eq-decl nil Velocity aviation)
    (gs const-decl "nnreal" Velocity aviation)
    (kinematic_gs_bands const-decl "list[RealBand]" kinematic_gs_bands
     nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (RealBand type-eq-decl nil real_bands nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (detector? const-decl "bool" int_bands nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil)
  (kinematic_gs_bands_def-3 nil 3632653294
   ("" (skeep)
    (("" (skoletin 1)
      ((""
        (name "MaxN"
              "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                                                              ELSE ceiling(pi / step)
                                                                                                                              ENDIF)")
        (("" (replace -1)
          (("" (name "newstep" "pi/MaxN")
            (("1" (expand "kinematic_gs_bands" :assert? none)
              (("1" (skoletin -3)
                (("1" (assert)
                  (("1" (replace -3)
                    (("1"
                      (expand "kinematic_gs_bands_init" :assert? none)
                      (("1"
                        (name "Lfun"
                              "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                        (("1" (replaces -1)
                          (("1"
                            (name "Rfun"
                                  "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                            (("1" (replaces -1)
                              (("1"
                                (case "NOT MaxN>=1")
                                (("1"
                                  (hide -2)
                                  (("1"
                                    (replaces -1 1 :dir rl)
                                    (("1"
                                      (lift-if)
                                      (("1"
                                        (case "NOT pi/step>=1")
                                        (("1" (cross-mult 1) nil nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case
                                   "NOT (newstep > 0 AND pi/newstep = MaxN)")
                                  (("1"
                                    (expand "newstep" 1)
                                    (("1"
                                      (hide -3)
                                      (("1" (cross-mult 1) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (name
                                       "LIB"
                                       "kinematic_bands(LOS, CD, B, T, so, vo, Lfun, MaxN, newstep, AL,
                                                                                                                                                                                                                       most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                      (("1"
                                        (name
                                         "RIB"
                                         "kinematic_bands(LOS, CD, B, T, so, vo, Rfun, MaxN, newstep, AL,
                                                                                                                                                                                                                                                       most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                        (("1"
                                          (name
                                           "RealLB"
                                           "scal(-newstep, LIB)")
                                          (("1"
                                            (name
                                             "RealRB"
                                             "scal(newstep, RIB)")
                                            (("1"
                                              (name
                                               "UnAdjB"
                                               " IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                                                           length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                                                            nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`lb = 0
                                                                                                                                                                                                                                                                         THEN append(append(remove_last(RealLB),
                                                                                                                                                                                                                                                                                            (: (# lb
                                                                                                                                                                                                                                                                                                  := nth
                                                                                                                                                                                                                                                                                                     (RealLB, length(RealLB) - 1)`lb,
                                                                                                                                                                                                                                                                                                  ub := nth(RealRB, 0)`ub #) :)),
                                                                                                                                                                                                                                                                                     cdr(RealRB))
                                                                                                                                                                                                                                                                       ELSE append(RealLB, RealRB)
                                                                                                                                                                                                                                                                       ENDIF")
                                              (("1"
                                                (name
                                                 "UnModB"
                                                 "add(gs(vo), UnAdjB)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -13)
                                                    (("1"
                                                      (replace -12)
                                                      (("1"
                                                        (replace -10)
                                                        (("1"
                                                          (replace -6)
                                                          (("1"
                                                            (replace
                                                             -5)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -3)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (case
                                                                       "NOT length(RealLB) = length(LIB)")
                                                                      (("1"
                                                                        (expand
                                                                         "RealLB"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "scal"
                                                                           1)
                                                                          (("1"
                                                                            (rewrite
                                                                             "length_reverse")
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_length")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "NOT length(RealRB)=length(RIB)")
                                                                        (("1"
                                                                          (expand
                                                                           "RealRB"
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "scal"
                                                                             1)
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_length")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "NOT increasing_int?(RIB)")
                                                                          (("1"
                                                                            (lemma
                                                                             "kinematic_bands_increasing")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Rfun"
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "NOT increasing_int?(LIB)")
                                                                            (("1"
                                                                              (hide
                                                                               -8)
                                                                              (("1"
                                                                                (lemma
                                                                                 "kinematic_bands_increasing")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Lfun"
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "NOT increasing_real?(RealRB)")
                                                                              (("1"
                                                                                (expand
                                                                                 "RealRB"
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "increasing_real?"
                                                                                   1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "scal"
                                                                                       1)
                                                                                      (("1"
                                                                                        (split
                                                                                         +)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scal"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "increasing_int?"
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (mult-by
                                                                                                       -2
                                                                                                       "newstep")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "map_nth_rw")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "scal"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "increasing_int?"
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "i"
                                                                                                       "j")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (mult-by
                                                                                                           -4
                                                                                                           "newstep")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "NOT increasing_real?(RealLB)")
                                                                                (("1"
                                                                                  (hide
                                                                                   2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "increasing_real?"
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "RealLB"
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "scal"
                                                                                         1)
                                                                                        (("1"
                                                                                          (split
                                                                                           +)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "reverse_def")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_nth_rw")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "scal"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "increasing_int?"
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -2
                                                                                                               "newstep")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "reverse_def"
                                                                                               1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "reverse_def"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "map_nth_rw")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "map_nth_rw")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "scal"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "increasing_int?"
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "length(LIB)-1-j"
                                                                                                               "length(LIB)-1-i")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "newstep")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "length_remove_last")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "LIB")
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "RIB")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "proper?")
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT (FORALL (i: below(length(RealRB))):
                                                                                                                                                                                                                                                                                                                                                  0 <= nth(RealRB, i)`lb AND
                                                                                                                                                                                                                                                                                                                                                   nth(RealRB, i)`lb <= nth(RealRB, i)`ub AND nth(RealRB, i)`ub <= pi)")
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "RealRB"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "scal"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "map_nth_rw")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -3
                                                                                                               "newstep")
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -3
                                                                                                                 "newstep")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -3
                                                                                                                   "newstep")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "NOT (FORALL (i: below(length(RealLB))):
                                                                                                                                                                                                                                                                                                                                                                      0 >= nth(RealLB, i)`ub AND
                                                                                                                                                                                                                                                                                                                                                                       nth(RealLB, i)`lb <= nth(RealLB, i)`ub AND nth(RealLB, i)`lb >=-pi)")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   (-1
                                                                                                    -2))
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "length(LIB)-1-i")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "RealLB"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "reverse_def"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "map_length")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "map_nth_rw")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "scal")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (mult-by
                                                                                                                         -3
                                                                                                                         "newstep")
                                                                                                                        (("1"
                                                                                                                          (mult-by
                                                                                                                           -3
                                                                                                                           "newstep")
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -3
                                                                                                                             "newstep")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (rewrite
                                                                                                                 "map_length")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "NOT length(UnAdjB) = (IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                                                                                          length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                                                                                           nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`lb = 0
                                                                                                                                                                                                                                                                                                        THEN length(RealLB)+length(RealRB)-1
                                                                                                                                                                                                                                                                                                      ELSE length(RealLB)+length(RealRB)
                                                                                                                                                                                                                                                                                                      ENDIF)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "UnAdjB"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "length_append"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "length_append"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -9)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "length"
                                                                                                                       1
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               +)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "length(RealRB)>0")
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    -2))
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "length_append"
                                                                                                             2)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (label
                                                                                                     "lu"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (copy
                                                                                                         -22)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "band_mod_2pi_rec(kb)")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -2
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "gs_band?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -3
                                                                                                                   "gs(vo) + j * (dir * newstep)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -26)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -17
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "EXISTS (j_1: below(length(kb))):
                                                                                                                                                                                                                    in?(nth(UnAdjB, j_1), j * (dir * newstep))")
                                                                                                                              (("1"
                                                                                                                                (skosimp
                                                                                                                                 -)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   +
                                                                                                                                   "j!1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "add"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "map_nth_rw")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "add"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "in?")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "(dir = 1 AND EXISTS (jj: below(length(RealRB))): in?(nth(RealRB,jj),j*newstep)) OR (dir=-1 AND EXISTS (jj: below(length(RealLB))): in?(nth(RealLB,jj),-j*newstep))")
                                                                                                                                  (("1"
                                                                                                                                    (copy
                                                                                                                                     -19)
                                                                                                                                    (("1"
                                                                                                                                      (replaces
                                                                                                                                       -1
                                                                                                                                       1
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (skeep
                                                                                                                                             -)
                                                                                                                                            (("1"
                                                                                                                                              (copy
                                                                                                                                               -20)
                                                                                                                                              (("1"
                                                                                                                                                (lift-if
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -)
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "length(RealLB)-1+jj")
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "nth_append")
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "length_append")
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "nth_append")
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lift-if
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       +)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT jj = 0")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 1
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "in?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "nth(RealLB, length(RealLB) - 1)`lb <=0")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -
                                                                                                                                                                                         "j"
                                                                                                                                                                                         "newstep")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "RealLB"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "scal"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "length_reverse")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                 "map_length")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                   "reverse_def")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "map_length")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "map_nth_rw")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "scal"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (mult-by
                                                                                                                                                                                                               -5
                                                                                                                                                                                                               "newstep")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (copy
                                                                                                                                                                                                                 -19)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -
                                                                                                                                                                                                                   "0")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                                       -2
                                                                                                                                                                                                                       "newstep")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "map_length"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -6)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 -7)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "nth"
                                                                                                                                                                     -7)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2)
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "length_append")
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "jj")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "length"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "length(RealLB)+jj")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "nth_append"
                                                                                                                                                               2)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -29
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "add"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "map_length")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     "lu"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       2)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "Lfun")
                                                                                                                                                (("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (copy
                                                                                                                                                       -20)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (split
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "nth_append"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (rewrite
                                                                                                                                                                       "length_append")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "length_remove_last")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "nth_append"
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "length_remove_last")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if
                                                                                                                                                                                   +)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (split
                                                                                                                                                                                     +)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "remove_last_def")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "NOT jj = length(RealLB)-1")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "jj")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 (-1
                                                                                                                                                                                                  1
                                                                                                                                                                                                  2))
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (case
                                                                                                                                                                                                   "FORALL (z:nat): jj<z IMPLIES (jj<z-1 OR jj=z-1)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "length(RealLB)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "nth"
                                                                                                                                                                                                 2
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "nth(RealRB,0)`ub>=0")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "in?")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "j"
                                                                                                                                                                                                             "newstep")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       3)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "RealRB"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "scal"
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                               "map_nth_rw")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (case
                                                                                                                                                                                                                     "NOT increasing_int?(RIB)")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "increasing_int?"
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           -
                                                                                                                                                                                                                           "0")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (mult-by
                                                                                                                                                                                                                             -1
                                                                                                                                                                                                                             "newstep")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "length_append"
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "length_remove_last")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "nth_append"
                                                                                                                                                                     +)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -29)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "add"
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "map_length")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "kinematic_bands_def")
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "dir = 1")
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "Rfun")
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -1
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -23)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (split
                                                                                                                                                             -)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "bands_sound?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "j")
                                                                                                                                                                (("1"
                                                                                                                                                                  (copy
                                                                                                                                                                   -32)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (skeep
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "i")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "RealRB"
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "scal"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "map_nth_rw")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "scal"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                       (-2
                                                                                                                                                                                        1))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "in?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (mult-by
                                                                                                                                                                                             -1
                                                                                                                                                                                             "newstep")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (mult-by
                                                                                                                                                                                               -2
                                                                                                                                                                                               "newstep")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "Rfun"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (typepred
                                                                                                                                             "dir")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (hide
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (hide
                                                                                                                                                       -23)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "Lfun")
                                                                                                                                                        (("2"
                                                                                                                                                          (replaces
                                                                                                                                                           -1
                                                                                                                                                           :dir
                                                                                                                                                           rl)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -23)
                                                                                                                                                                (("2"
                                                                                                                                                                  (split
                                                                                                                                                                   -)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "bands_sound?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "j")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -31)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skeep
                                                                                                                                                                             -)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "length(LIB)-1-i")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "RealLB"
                                                                                                                                                                                 +)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "scal"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "reverse_def")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "map_length")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (rewrite
                                                                                                                                                                                           "map_nth_rw")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "scal"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "in?"
                                                                                                                                                                                               (-1
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "newstep")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (mult-by
                                                                                                                                                                                                     -2
                                                                                                                                                                                                     "newstep")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "map_length")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "Lfun"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (case
                                                   "length(RealRB)>0")
                                                  (("1"
                                                    (hide-all-but
                                                     (-1 1))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (flatten)
                                                (("3"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("4"
                                                (flatten)
                                                (("4"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("5"
                                                (flatten)
                                                (("5"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("6"
                                                (flatten)
                                                (("6"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil)
                                         ("3"
                                          (expand "Rfun" 1)
                                          (("3" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil)
                                       ("3" (assert) nil nil)
                                       ("4"
                                        (expand "Lfun" 1)
                                        (("4" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (Sign type-eq-decl nil sign reals)
    (zero const-decl "Vector" vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (kinematic_bands const-decl "(proper?(MaxN))" kinematic_bands nil)
    (listn type-eq-decl nil listn structures)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (kinematic_bands_increasing formula-decl nil kinematic_bands nil)
    (length_singleton formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures)
    (kinematic_bands_def formula-decl nil kinematic_bands nil)
    (max_0_nnreal formula-decl nil min_max reals)
    (reverse_def formula-decl nil more_list_props structures))
   nil)
  (kinematic_gs_bands_def-2 nil 3632502352
   ("" (skeep)
    (("" (skoletin 1)
      ((""
        (name "MaxN"
              "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                                                ELSE ceiling(pi / step)
                                                                                                                ENDIF)")
        (("" (replace -1)
          (("" (name "newstep" "pi/MaxN")
            (("1" (expand "kinematic_gs_bands" :assert? none)
              (("1" (skoletin -3)
                (("1" (assert)
                  (("1" (replace -3)
                    (("1"
                      (expand "kinematic_gs_bands_init" :assert? none)
                      (("1"
                        (name "Lfun"
                              "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                        (("1" (replaces -1)
                          (("1"
                            (name "Rfun"
                                  "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                            (("1" (replaces -1)
                              (("1"
                                (case "NOT MaxN>=1")
                                (("1"
                                  (hide -2)
                                  (("1"
                                    (replaces -1 1 :dir rl)
                                    (("1"
                                      (lift-if)
                                      (("1"
                                        (case "NOT pi/step>=1")
                                        (("1" (cross-mult 1) nil nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case
                                   "NOT (newstep > 0 AND pi/newstep = MaxN)")
                                  (("1"
                                    (expand "newstep" 1)
                                    (("1"
                                      (hide -3)
                                      (("1" (cross-mult 1) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (name
                                       "LIB"
                                       "kinematic_bands(LOS, CD, B, T, so, vo, Lfun, MaxN, newstep, AL,
                                                                                                                                                                                             most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                      (("1"
                                        (name
                                         "RIB"
                                         "kinematic_bands(LOS, CD, B, T, so, vo, Rfun, MaxN, newstep, AL,
                                                                                                                                                                                                                         most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                        (("1"
                                          (name
                                           "RealLB"
                                           "scal(-newstep, LIB)")
                                          (("1"
                                            (name
                                             "RealRB"
                                             "scal(newstep, RIB)")
                                            (("1"
                                              (name
                                               "UnAdjB"
                                               " IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                         length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                          nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`ub = 0
                                                                                                                                                                                                                                       THEN append(append(remove_last(RealLB),
                                                                                                                                                                                                                                                          (: (# lb
                                                                                                                                                                                                                                                                := nth
                                                                                                                                                                                                                                                                   (RealLB, length(RealLB) - 1)`lb,
                                                                                                                                                                                                                                                                ub := nth(RealRB, 0)`ub #) :)),
                                                                                                                                                                                                                                                   cdr(RealRB))
                                                                                                                                                                                                                                     ELSE append(RealLB, RealRB)
                                                                                                                                                                                                                                     ENDIF")
                                              (("1"
                                                (name
                                                 "UnModB"
                                                 "add(gs(vo), UnAdjB)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -13)
                                                    (("1"
                                                      (replace -12)
                                                      (("1"
                                                        (replace -10)
                                                        (("1"
                                                          (replace -6)
                                                          (("1"
                                                            (replace
                                                             -5)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -3)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (case
                                                                       "NOT length(RealLB) = length(LIB)")
                                                                      (("1"
                                                                        (expand
                                                                         "RealLB"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "scal"
                                                                           1)
                                                                          (("1"
                                                                            (rewrite
                                                                             "length_reverse")
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_length")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "NOT length(RealRB)=length(RIB)")
                                                                        (("1"
                                                                          (expand
                                                                           "RealRB"
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "scal"
                                                                             1)
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_length")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "NOT increasing_int?(RIB)")
                                                                          (("1"
                                                                            (lemma
                                                                             "kinematic_bands_increasing")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Rfun"
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "NOT increasing_int?(LIB)")
                                                                            (("1"
                                                                              (hide
                                                                               -8)
                                                                              (("1"
                                                                                (lemma
                                                                                 "kinematic_bands_increasing")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Lfun"
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "NOT increasing_real?(RealRB)")
                                                                              (("1"
                                                                                (expand
                                                                                 "RealRB"
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "increasing_real?"
                                                                                   1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "scal"
                                                                                       1)
                                                                                      (("1"
                                                                                        (split
                                                                                         +)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scal"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "increasing_int?"
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (mult-by
                                                                                                       -2
                                                                                                       "newstep")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "map_nth_rw")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "scal"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "increasing_int?"
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "i"
                                                                                                       "j")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (mult-by
                                                                                                           -4
                                                                                                           "newstep")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "NOT increasing_real?(RealLB)")
                                                                                (("1"
                                                                                  (hide
                                                                                   2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "increasing_real?"
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "RealLB"
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "scal"
                                                                                         1)
                                                                                        (("1"
                                                                                          (split
                                                                                           +)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "reverse_def")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_nth_rw")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "scal"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "increasing_int?"
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -2
                                                                                                               "newstep")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "reverse_def"
                                                                                               1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "reverse_def"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "map_nth_rw")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "map_nth_rw")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "scal"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "increasing_int?"
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "length(LIB)-1-j"
                                                                                                               "length(LIB)-1-i")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "newstep")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "length_remove_last")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "LIB")
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "RIB")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "proper?")
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT (FORALL (i: below(length(RealRB))):
                                                                                                                                                                                                                                                                                0 <= nth(RealRB, i)`lb AND
                                                                                                                                                                                                                                                                                 nth(RealRB, i)`lb <= nth(RealRB, i)`ub AND nth(RealRB, i)`ub <= pi)")
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "RealRB"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "scal"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "map_nth_rw")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -3
                                                                                                               "newstep")
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -3
                                                                                                                 "newstep")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -3
                                                                                                                   "newstep")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "NOT (FORALL (i: below(length(RealLB))):
                                                                                                                                                                                                                                                                                                0 >= nth(RealLB, i)`ub AND
                                                                                                                                                                                                                                                                                                 nth(RealLB, i)`lb <= nth(RealLB, i)`ub AND nth(RealLB, i)`lb >=-pi)")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   (-1
                                                                                                    -2))
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "length(LIB)-1-i")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "RealLB"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "reverse_def"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "map_length")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "map_nth_rw")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "scal")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (mult-by
                                                                                                                         -3
                                                                                                                         "newstep")
                                                                                                                        (("1"
                                                                                                                          (mult-by
                                                                                                                           -3
                                                                                                                           "newstep")
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -3
                                                                                                                             "newstep")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (rewrite
                                                                                                                 "map_length")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "NOT length(UnAdjB) = (IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                          length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                           nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`ub = 0
                                                                                                                                                                                                                                        THEN length(RealLB)+length(RealRB)-1
                                                                                                                                                                                                                                      ELSE length(RealLB)+length(RealRB)
                                                                                                                                                                                                                                      ENDIF)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "UnAdjB"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "length_append"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "length_append"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -9)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "length"
                                                                                                                       1
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               +)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "length(RealRB)>0")
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    -2))
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "length_append"
                                                                                                             2)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (label
                                                                                                     "lu"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (copy
                                                                                                         -22)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "band_mod_2pi_rec(kb)")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -2
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "gs_band?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -3
                                                                                                                   "gs(vo) + j * (dir * newstep)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -26)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -17
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "EXISTS (j_1: below(length(kb))):
                                                                                                                                                in?(nth(UnAdjB, j_1), j * (dir * newstep))")
                                                                                                                              (("1"
                                                                                                                                (skosimp
                                                                                                                                 -)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   +
                                                                                                                                   "j!1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "add"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "map_nth_rw")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "add"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "in?")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "(dir = 1 AND EXISTS (jj: below(length(RealRB))): in?(nth(RealRB,jj),j*newstep)) OR (dir=-1 AND EXISTS (jj: below(length(RealLB))): in?(nth(RealLB,jj),-j*newstep))")
                                                                                                                                  (("1"
                                                                                                                                    (copy
                                                                                                                                     -19)
                                                                                                                                    (("1"
                                                                                                                                      (replaces
                                                                                                                                       -1
                                                                                                                                       1
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (skeep
                                                                                                                                             -)
                                                                                                                                            (("1"
                                                                                                                                              (copy
                                                                                                                                               -20)
                                                                                                                                              (("1"
                                                                                                                                                (lift-if
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -)
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "length(RealLB)-1+jj")
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "nth_append")
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "length_append")
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "nth_append")
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lift-if
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       +)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT jj = 0")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 1
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "in?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "nth(RealLB, length(RealLB) - 1)`lb <=0")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -
                                                                                                                                                                                         "j"
                                                                                                                                                                                         "newstep")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "RealLB"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "scal"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "length_reverse")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                 "map_length")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                   "reverse_def")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "map_length")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "map_nth_rw")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "scal"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (mult-by
                                                                                                                                                                                                               -5
                                                                                                                                                                                                               "newstep")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (copy
                                                                                                                                                                                                                 -19)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -
                                                                                                                                                                                                                   "0")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                                       -2
                                                                                                                                                                                                                       "newstep")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "map_length"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -6)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 -7)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "nth"
                                                                                                                                                                     -7)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2)
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "length_append")
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "jj")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "length"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "length(RealLB)+jj")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "nth_append"
                                                                                                                                                               2)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -29
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "add"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "map_length")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     "lu"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       2)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "Lfun")
                                                                                                                                                (("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (copy
                                                                                                                                                       -20)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (split
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "nth_append"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (rewrite
                                                                                                                                                                       "length_append")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "length_remove_last")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "nth_append"
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "length_remove_last")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if
                                                                                                                                                                                   +)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (split
                                                                                                                                                                                     +)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "remove_last_def")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "NOT jj = length(RealLB)-1")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "jj")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 (-1
                                                                                                                                                                                                  1
                                                                                                                                                                                                  2))
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (case
                                                                                                                                                                                                   "FORALL (z:nat): jj<z IMPLIES (jj<z-1 OR jj=z-1)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "length(RealLB)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "nth"
                                                                                                                                                                                                 2
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "nth(RealRB,0)`ub>=0")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "in?")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "j"
                                                                                                                                                                                                             "newstep")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       3)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "RealRB"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "scal"
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                               "map_nth_rw")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "length_append"
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "length_remove_last")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "nth_append"
                                                                                                                                                                     +)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -29)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "add"
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "map_length")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "kinematic_bands_def")
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "dir = 1")
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "Rfun")
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -1
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -23)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (split
                                                                                                                                                             -)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "bands_sound?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "j")
                                                                                                                                                                (("1"
                                                                                                                                                                  (copy
                                                                                                                                                                   -32)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (skeep
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "i")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "RealRB"
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "scal"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "map_nth_rw")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "scal"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                       (-2
                                                                                                                                                                                        1))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "in?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (mult-by
                                                                                                                                                                                             -1
                                                                                                                                                                                             "newstep")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (mult-by
                                                                                                                                                                                               -2
                                                                                                                                                                                               "newstep")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "Rfun"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (typepred
                                                                                                                                             "dir")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (hide
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (hide
                                                                                                                                                       -23)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "Lfun")
                                                                                                                                                        (("2"
                                                                                                                                                          (replaces
                                                                                                                                                           -1
                                                                                                                                                           :dir
                                                                                                                                                           rl)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -23)
                                                                                                                                                                (("2"
                                                                                                                                                                  (split
                                                                                                                                                                   -)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "bands_sound?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "j")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -31)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skeep
                                                                                                                                                                             -)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "length(LIB)-1-i")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "RealLB"
                                                                                                                                                                                 +)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "scal"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "reverse_def")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "map_length")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (rewrite
                                                                                                                                                                                           "map_nth_rw")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "scal"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "in?"
                                                                                                                                                                                               (-1
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "newstep")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (mult-by
                                                                                                                                                                                                     -2
                                                                                                                                                                                                     "newstep")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "map_length")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "Lfun"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (case
                                                   "length(RealRB)>0")
                                                  (("1"
                                                    (hide-all-but
                                                     (-1 1))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (flatten)
                                                (("3"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("4"
                                                (flatten)
                                                (("4"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("5"
                                                (flatten)
                                                (("5"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("6"
                                                (flatten)
                                                (("6"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil)
                                         ("3"
                                          (expand "Rfun" 1)
                                          (("3" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil)
                                       ("3" (assert) nil nil)
                                       ("4"
                                        (expand "Lfun" 1)
                                        (("4" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (Sign type-eq-decl nil sign reals)
    (zero const-decl "Vector" vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (kinematic_bands const-decl "(proper?(MaxN))" kinematic_bands nil)
    (listn type-eq-decl nil listn structures)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (kinematic_bands_increasing formula-decl nil kinematic_bands nil)
    (length_singleton formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures)
    (kinematic_bands_def formula-decl nil kinematic_bands nil)
    (max_0_nnreal formula-decl nil min_max reals)
    (reverse_def formula-decl nil more_list_props structures))
   nil)
  (kinematic_gs_bands_def-1 nil 3632501459
   ("" (skeep)
    (("" (skoletin 1)
      ((""
        (name "MaxN"
              "(IF round(pi / step) = pi / step THEN round(pi / step)
             ELSE ceiling(pi / step)
             ENDIF)")
        (("" (replace -1)
          (("" (assert)
            (("" (skeep)
              (("" (split +)
                (("1" (postpone) nil nil) ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (any_kinematic_gs_red_TCC1 0
  (any_kinematic_gs_red_TCC1-1 nil 3639917550
   ("" (skeep*)
    (("" (replaces -3 +)
      (("" (assert)
        (("" (hide -)
          (("" (expand "gsAccel")
            (("" (split +)
              (("1" (expand "gsAccelPos")
                (("1" (grind) (("1" (decompose-equality 1) nil nil))
                  nil))
                nil)
               ("2" (lift-if)
                (("2" (ground)
                  (("1" (expand "gs" -1)
                    (("1" (typepred "vo")
                      (("1" (lemma "sq_eq_0")
                        (("1" (inst?)
                          (("1" (assert)
                            (("1" (rewrite "sq_norm")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "mkTrkGsVs_def")
                    (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Velocity type-eq-decl nil Velocity aviation)
    (mkTrkGsVs_def formula-decl nil Velocity aviation)
    (sq_norm formula-decl nil vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sq_eq_0 formula-decl nil sq reals)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (gs const-decl "nnreal" Velocity aviation)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Vect2 const-decl "{vv: Vect2 | vv`x = x AND vv`y = y}" util
     aviation)
    (Hat const-decl "{v: Vect2 |
   (v = zero IFF w = zero) AND
    (w /= zero IFF (norm(v) = 1 AND v = (1 / norm(w)) * w))}" util
     aviation)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (Vect3 const-decl "{vv: Vect3 | vect2(vv) = w AND vv`z = z}" util
     aviation)
    (gsAccelPos const-decl "Vect3" kinematics_gs_accel aviation)
    (gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil
   (any_kinematic_gs_red subtype "kinematic_gs_bands.Downfun"
    "{trajl | combine_bands.trajl(0) = (kinematic_gs_bands.so, kinematic_gs_bands.vo)}")))
 (any_kinematic_gs_red_TCC2 0
  (any_kinematic_gs_red_TCC2-3 "" 3794670420
   ("" (skeep*)
    (("" (assert)
      (("" (replaces -4)
        (("" (assert)
          (("" (hide -)
            (("" (expand "gsAccel")
              (("" (split +)
                (("1" (expand "gsAccelPos")
                  (("1" (grind) (("1" (decompose-equality 1) nil nil))
                    nil))
                  nil)
                 ("2" (lift-if)
                  (("2" (ground)
                    (("1" (expand "gs" -1)
                      (("1" (typepred "vo")
                        (("1" (lemma "sq_eq_0")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (rewrite "sq_norm")
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (lemma "mkTrkGsVs_def")
                      (("2" (inst?) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Velocity type-eq-decl nil Velocity aviation)
    (mkTrkGsVs_def formula-decl nil Velocity aviation)
    (sq_norm formula-decl nil vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sq_eq_0 formula-decl nil sq reals)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (gs const-decl "nnreal" Velocity aviation)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Vect2 const-decl "{vv: Vect2 | vv`x = x AND vv`y = y}" util
     aviation)
    (Hat const-decl "{v: Vect2 |
   (v = zero IFF w = zero) AND
    (w /= zero IFF (norm(v) = 1 AND v = (1 / norm(w)) * w))}" util
     aviation)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (Vect3 const-decl "{vv: Vect3 | vect2(vv) = w AND vv`z = z}" util
     aviation)
    (gsAccelPos const-decl "Vect3" kinematics_gs_accel aviation)
    (gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   shostak
   (any_kinematic_gs_red subtype "kinematic_gs_bands.Upfun"
    "{trajr | combine_bands.trajr(0) = (kinematic_gs_bands.so, kinematic_gs_bands.vo)}"))
  (any_kinematic_gs_red_TCC2-2 nil 3639918763
   ("" (skeep*)
    (("" (replaces -3 +)
      (("" (assert)
        (("" (replaces -4)
          (("" (assert)
            (("" (hide -)
              (("" (expand "gsAccel")
                (("" (split +)
                  (("1" (expand "gsAccelPos")
                    (("1" (grind)
                      (("1" (decompose-equality 1) nil nil)) nil))
                    nil)
                   ("2" (lift-if)
                    (("2" (ground)
                      (("1" (expand "gs" -1)
                        (("1" (typepred "vo")
                          (("1" (lemma "sq_eq_0")
                            (("1" (inst?)
                              (("1"
                                (assert)
                                (("1"
                                  (rewrite "sq_norm")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (lemma "mkTrkGsVs_def")
                        (("2" (inst?) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (mkTrkGsVs_def formula-decl nil Velocity aviation)
    (Velocity type-eq-decl nil Velocity aviation)
    (gs const-decl "nnreal" Velocity aviation)
    (sq_eq_0 formula-decl nil sq reals)
    (sq_norm formula-decl nil vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (gsAccelPos const-decl "Vect3" kinematics_gs_accel aviation)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Vect2 const-decl "{vv: Vect2 | vv`x = x AND vv`y = y}" util
     aviation)
    (Hat const-decl "{v: Vect2 |
   (v = zero IFF w = zero) AND
    (w /= zero IFF (norm(v) = 1 AND v = (1 / norm(w)) * w))}" util
     aviation)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (Vect3 const-decl "{vv: Vect3 | vect2(vv) = w AND vv`z = z}" util
     aviation))
   nil
   (any_kinematic_gs_red subtype "kinematic_gs_bands.Upfun"
    "{trajr | combine_bands.trajr(0) = (kinematic_gs_bands.so, kinematic_gs_bands.vo)}"))
  (any_kinematic_gs_red_TCC2-1 nil 3639917550
   ("" (subtype-tcc) nil nil) nil nil
   (any_kinematic_gs_red subtype "kinematic_gs_bands.Upfun"
    "{trajr | combine_bands.trajr(0) = (kinematic_gs_bands.so, kinematic_gs_bands.vo)}")))
 (any_kinematic_gs_red_TCC3 0
  (any_kinematic_gs_red_TCC3-1 nil 3639917550
   ("" (skeep*) (("" (assert) nil nil)) nil)
   ((int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil
   (any_kinematic_gs_red subtype "kinematic_gs_bands.AL"
    "{AL | reals.>(list_props[Aircraft].length(combine_bands.AL), 0)}")))
 (any_kinematic_gs_red_def_TCC1 0
  (any_kinematic_gs_red_def_TCC1-2 "" 3813484880
   ("" (skeep)
    (("" (skeep) (("" (hide -) (("" (assert) nil nil)) nil)) nil)) nil)
   nil shostak
   (any_kinematic_gs_red_def subtype
    "real_defs.max(floor_ceil.ceiling(number_fields./(((number_fields.-)(Velocity.gs(kinematic_gs_bands.vo), kinematic_gs_bands.mings)), kinematic_gs_bands.step)), 0)"
    "nat"))
  (any_kinematic_gs_red_def_TCC1-1 nil 3683461104
   ("" (skeep)
    (("" (skeep)
      (("" (skeep) (("" (hide -) (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil
   (any_kinematic_gs_red_def subtype
    "real_defs.max(floor_ceil.ceiling(number_fields./(((number_fields.-)(Velocity.gs(kinematic_gs_bands.vo), kinematic_gs_bands.mings)), kinematic_gs_bands.step)), 0)"
    "nat")))
 (any_kinematic_gs_red_def_TCC2 0
  (any_kinematic_gs_red_def_TCC2-2 "" 3813484880
   ("" (skeep)
    (("" (skeep) (("" (hide -) (("" (assert) nil nil)) nil)) nil)) nil)
   nil shostak
   (any_kinematic_gs_red_def subtype
    "real_defs.max(floor_ceil.ceiling(number_fields./(((number_fields.-)(kinematic_gs_bands.maxgs, Velocity.gs(kinematic_gs_bands.vo))), kinematic_gs_bands.step)), 0)"
    "nat"))
  (any_kinematic_gs_red_def_TCC2-1 nil 3683461104
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep) (("" (hide -) (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil
   (any_kinematic_gs_red_def subtype
    "real_defs.max(floor_ceil.ceiling(number_fields./(((number_fields.-)(kinematic_gs_bands.maxgs, Velocity.gs(kinematic_gs_bands.vo))), kinematic_gs_bands.step)), 0)"
    "nat")))
 (any_kinematic_gs_red_def 0
  (any_kinematic_gs_red_def-1 nil 3633968537
   ("" (skeep*)
    (("" (skoletin 1)
      (("" (skoletin 1)
        (("" (expand "any_kinematic_gs_red" :assert? none)
          (("" (skoletin -)
            (("" (skoletin -)
              (("" (skoletin -)
                (("" (skoletin -)
                  (("" (assert)
                    (("" (copy -6)
                      (("" (hide -7)
                        ((""
                          (expand "kinematic_gs_bands_init" :assert?
                                  none)
                          (("" (replace -6 :dir rl)
                            (("" (replace -5 :dir rl)
                              ((""
                                (replace -4 :dir rl)
                                ((""
                                  (replace -3 :dir rl)
                                  ((""
                                    (name
                                     "GsInt"
                                     "kinematic_bands_combine(LOS,
                                                          CD,
                                                          LOS2,
                                                          CD2,
                                                          UseLOS2,
                                                          B,
                                                          T,
                                                          B2,
                                                          T2,
                                                          so,
                                                          vo,
                                                          Downfun,
                                                          Upfun,
                                                          MaxDown,
                                                          MaxUp,
                                                          step/a,
                                                          step/a,
                                                          AL,
                                                          most_urgent,
                                                          epsH,
                                                          epsV,
                                                          UseHCrit,
                                                          UseVCrit)")
                                    ((""
                                      (name
                                       "UnAdjB"
                                       "scal(step, GsInt)")
                                      ((""
                                        (assert)
                                        ((""
                                          (replace -2)
                                          ((""
                                            (replace -1)
                                            ((""
                                              (lemma "any_red_def")
                                              ((""
                                                (inst?)
                                                ((""
                                                  (replace -3)
                                                  ((""
                                                    (assert)
                                                    ((""
                                                      (replace
                                                       -5
                                                       :dir
                                                       rl)
                                                      ((""
                                                        (split -)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (split +)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (hide
                                                                 (-4
                                                                  -5))
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replaces
                                                                     -3
                                                                     +)
                                                                    (("1"
                                                                      (split
                                                                       +)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -6
                                                                               1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "add_realband_def")
                                                                                (("1"
                                                                                  (inst
                                                                                   +
                                                                                   "i!1")
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "j")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "UnAdjB"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "scal_intband_def2")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   -1
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "in?"
                                                                                                       (-1
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "scalrb")
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (div-by
                                                                                                               -1
                                                                                                               "step")
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (div-by
                                                                                                               -2
                                                                                                               "step")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "i")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "j")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -6
                                                                                       +)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "add_realband_def")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "UnAdjB"
                                                                                               1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "scal_intband_def2"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "in?"
                                                                                                     (-1
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "scalrb")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (mult-by
                                                                                                           -1
                                                                                                           "step")
                                                                                                          (("2"
                                                                                                            (mult-by
                                                                                                             -2
                                                                                                             "step")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   (-3
                                                                    -5))
                                                                  (("2"
                                                                    (replaces
                                                                     -3
                                                                     +)
                                                                    (("2"
                                                                      (split
                                                                       +)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -6
                                                                               1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "add_realband_def")
                                                                                (("1"
                                                                                  (inst
                                                                                   +
                                                                                   "i!1")
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "j")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "UnAdjB"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "scal_intband_def2")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   -1
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "in?"
                                                                                                       (-1
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "scalrb")
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (div-by
                                                                                                               -1
                                                                                                               "step")
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (div-by
                                                                                                               -2
                                                                                                               "step")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "i")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "j")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -6
                                                                                       +)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "add_realband_def")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "UnAdjB"
                                                                                               1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "scal_intband_def2"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "in?"
                                                                                                     (-1
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "scalrb")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (mult-by
                                                                                                           -1
                                                                                                           "step")
                                                                                                          (("2"
                                                                                                            (mult-by
                                                                                                             -2
                                                                                                             "step")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (flatten)
                                                              (("3"
                                                                (assert)
                                                                (("3"
                                                                  (hide
                                                                   (-1
                                                                    -2))
                                                                  (("3"
                                                                    (replaces
                                                                     -1)
                                                                    (("3"
                                                                      (hide
                                                                       -4)
                                                                      (("3"
                                                                        (split
                                                                         +)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (split
                                                                             -)
                                                                            (("1"
                                                                              (hide
                                                                               2)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -4
                                                                                     1)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "add_realband_def")
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "i!1")
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "j")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "UnAdjB"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "scal_intband_def2")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         -1
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "in?"
                                                                                                             (-1
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "scalrb")
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   +)
                                                                                                                  (("1"
                                                                                                                    (div-by
                                                                                                                     -1
                                                                                                                     "step")
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (div-by
                                                                                                                     -2
                                                                                                                     "step")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (hide
                                                                                   1)
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "i")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "j")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -4
                                                                                               -1)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "add_realband_def")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "UnAdjB"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "scal_intband_def2")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           -1
                                                                                                           -2)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "in?"
                                                                                                               (-1
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "scalrb")
                                                                                                                  (("2"
                                                                                                                    (split
                                                                                                                     +)
                                                                                                                    (("1"
                                                                                                                      (div-by
                                                                                                                       -1
                                                                                                                       "step")
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (div-by
                                                                                                                       -2
                                                                                                                       "step")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (hide
                                                                                 2)
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "i")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skeep)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "j")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4
                                                                                             +)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "add_realband_def")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "UnAdjB"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "scal_intband_def2"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "in?"
                                                                                                           (-1
                                                                                                            1))
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scalrb")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -1
                                                                                                                 "step")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -2
                                                                                                                   "step")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 1)
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "i")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "j")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -4
                                                                                             +)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "add_realband_def")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "UnAdjB"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "scal_intband_def2"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "in?"
                                                                                                           (-1
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "scalrb")
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (mult-by
                                                                                                                 -1
                                                                                                                 "step")
                                                                                                                (("2"
                                                                                                                  (mult-by
                                                                                                                   -2
                                                                                                                   "step")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (expand
                                                             "Downfun"
                                                             1)
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (expand
                                                             "Upfun"
                                                             1)
                                                            (("3"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Upfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_gs_bands nil)
    (Downfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_gs_bands nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (both_sides_div_pos_le1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (scal_intband_def2 formula-decl nil real_bands nil)
    (UnAdjB skolem-const-decl "listn[RealBand](length[IntBand](GsInt))"
     kinematic_gs_bands nil)
    (add_realband_def formula-decl nil real_bands nil)
    (any_red_def formula-decl nil combine_bands nil)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (listn type-eq-decl nil listn structures)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (IntBand type-eq-decl nil int_bands nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (any_red const-decl "bool" combine_bands nil)
    (Traj type-eq-decl nil int_bands nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (in? const-decl "bool" real_bands nil)
    (below type-eq-decl nil naturalnumbers nil)
    (subrange type-eq-decl nil integers nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (gs const-decl "nnreal" Velocity aviation)
    (Velocity type-eq-decl nil Velocity aviation)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (integer nonempty-type-from-decl nil integers nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (any_kinematic_gs_red const-decl "bool" kinematic_gs_bands nil)
    (detector? const-decl "bool" int_bands nil)
    (kinematic_gs_bands_init const-decl "list[RealBand]"
     kinematic_gs_bands nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (RealBand type-eq-decl nil real_bands nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   shostak))
 (all_kinematic_gs_red_def_TCC1 0
  (all_kinematic_gs_red_def_TCC1-1 nil 3643385555
   ("" (skeep*) (("" (assert) nil nil)) nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (all_kinematic_gs_red_def subtype "0"
    "below[length[RealBand](ktb)]")))
 (all_kinematic_gs_red_def_TCC2 0
  (all_kinematic_gs_red_def_TCC2-1 nil 3643385555
   ("" (skeep*) (("" (assert) nil nil)) nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (all_kinematic_gs_red_def subtype
    "(number_fields.-)(list_props[RealBand].length(kinematic_gs_bands.ktb), 1)"
    "below[length[RealBand](ktb)]")))
 (all_kinematic_gs_red_def 0
  (all_kinematic_gs_red_def-1 nil 3634295354
   ("" (skeep*)
    (("" (skoletin 1)
      (("" (skoletin 1)
        (("" (skoletin 1)
          (("" (skoletin 1)
            (("" (copy -4)
              (("" (hide -5)
                ((""
                  (expand "kinematic_gs_bands_init" -1 :assert? none)
                  (("" (skoletin -1)
                    (("" (skoletin -1)
                      (("" (skoletin -1)
                        (("" (skoletin -1)
                          (("" (skoletin -1)
                            (("" (skoletin -1)
                              ((""
                                (skoletin -1)
                                ((""
                                  (assert)
                                  ((""
                                    (copy -11)
                                    ((""
                                      (hide -12)
                                      ((""
                                        (expand
                                         "all_kinematic_gs_red"
                                         :assert?
                                         none)
                                        ((""
                                          (replace -9 :dir rl)
                                          ((""
                                            (replace -8 :dir rl)
                                            ((""
                                              (replace -7 :dir rl)
                                              ((""
                                                (replace -5 :dir rl)
                                                ((""
                                                  (replace -6 :dir rl)
                                                  ((""
                                                    (assert)
                                                    ((""
                                                      (lemma
                                                       "all_red_def")
                                                      ((""
                                                        (inst?)
                                                        ((""
                                                          (replace
                                                           -2
                                                           :dir
                                                           rl)
                                                          ((""
                                                            (assert)
                                                            ((""
                                                              (replace
                                                               -5
                                                               :dir
                                                               rl)
                                                              ((""
                                                                (split
                                                                 -)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (case
                                                                     "(length(GsInt) > 0 IMPLIES nth(GsInt, 0)`lb > 0) IFF downred")
                                                                    (("1"
                                                                      (case
                                                                       "(length(GsInt) > 0 IMPLIES nth(GsInt, length(GsInt) - 1)`ub < 0) IFF upred")
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         (-1
                                                                          2))
                                                                        (("2"
                                                                          (hide
                                                                           (-1
                                                                            -2
                                                                            -3))
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (expand
                                                                               "upred"
                                                                               1)
                                                                              (("2"
                                                                                (replace
                                                                                 -2
                                                                                 +)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "add(gs(vo), UnAdjB)")
                                                                                  (("2"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "add"
                                                                                       +)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "map_nth_rw")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "addrb")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -3
                                                                                             +)
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "scal(step, GsInt)")
                                                                                              (("2"
                                                                                                (replaces
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "scal"
                                                                                                   +)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "map_nth_rw"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scalrb")
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -1
                                                                                                               "step")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "map_nth_rw"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "scalrb")
                                                                                                            (("2"
                                                                                                              (mult-by
                                                                                                               1
                                                                                                               "step")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (hide
                                                                         (-1
                                                                          -2
                                                                          -3
                                                                          -4
                                                                          2))
                                                                        (("3"
                                                                          (flatten)
                                                                          (("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       (-1
                                                                        -2
                                                                        -3
                                                                        2))
                                                                      (("2"
                                                                        (expand
                                                                         "downred"
                                                                         +)
                                                                        (("2"
                                                                          (replace
                                                                           -2
                                                                           +)
                                                                          (("2"
                                                                            (typepred
                                                                             "add(gs(vo), UnAdjB)")
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (expand
                                                                                 "add"
                                                                                 +)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "map_nth_rw"
                                                                                   +)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "addrb")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -3
                                                                                       +)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "scal(step, GsInt)")
                                                                                        (("2"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "scal"
                                                                                             +)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "map_nth_rw"
                                                                                               +)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "scalrb")
                                                                                                (("2"
                                                                                                  (split
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (mult-by
                                                                                                         -1
                                                                                                         "step")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (mult-by
                                                                                                         1
                                                                                                         "step")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (flatten)
                                                                      (("3"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "Downfun"
                                                                   1)
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (expand
                                                                   "Upfun"
                                                                   1)
                                                                  (("3"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Upfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_gs_bands nil)
    (Downfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_gs_bands nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (downred skolem-const-decl "boolean" kinematic_gs_bands nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (map_nth_rw formula-decl nil more_map_props nil)
    (addrb const-decl "RealBand" real_bands nil)
    (below type-eq-decl nil naturalnumbers nil)
    (upred skolem-const-decl "boolean" kinematic_gs_bands nil)
    (all_red_def formula-decl nil combine_bands nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (Traj type-eq-decl nil int_bands nil)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (listn type-eq-decl nil listn structures)
    (IntBand type-eq-decl nil int_bands nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (integer nonempty-type-from-decl nil integers nil)
    (<= const-decl "bool" reals nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (gsAccel const-decl "[Vect3, Vect3]" kinematics_gs_accel aviation)
    (int_max application-judgement "{k: int | i <= k AND j <= k}"
     real_defs nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}"
     real_defs nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (gs const-decl "nnreal" Velocity aviation)
    (Velocity type-eq-decl nil Velocity aviation)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (all_kinematic_gs_red const-decl "bool" kinematic_gs_bands nil)
    (detector? const-decl "bool" int_bands nil)
    (kinematic_gs_bands_init const-decl "list[RealBand]"
     kinematic_gs_bands nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (RealBand type-eq-decl nil real_bands nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak)))

