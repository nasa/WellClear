(kinematic_trk_bands
 (round_TCC1 0
  (round_TCC1-1 nil 3631615162 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (round subtype
          "floor_ceil.floor((number_fields.+)(kinematic_trk_bands.r, number_fields./(1, 2)))"
          "{j: integers.int | booleans.AND(reals.<((number_fields.-)(kinematic_trk_bands.r, 1/2), j), reals.<=(j, (number_fields.+)(kinematic_trk_bands.r, 1/2)))}")))
 (kinematic_track_bands_init_TCC1 0
  (kinematic_track_bands_init_TCC1-3 "" 3813484846
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (kinematic_track_bands_init subtype "kinematic_trk_bands.AL"
    "{AL | reals.>(list_props[Aircraft].length(combine_bands.AL), 0)}"))
  (kinematic_track_bands_init_TCC1-2 "" 3794670027
   ("" (skeep)
    (("" (skeep) (("" (skeep) (("" (assert) nil nil)) nil)) nil)) nil)
   ((posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak
   (kinematic_track_bands_init subtype "kinematic_trk_bands.AL"
    "{AL | reals.>(list_props[Aircraft].length(combine_bands.AL), 0)}"))
  (kinematic_track_bands_init_TCC1-1 nil 3631963199
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (replaces -2)
          (("" (assert)
            (("" (expand "turnOmega" +)
              (("" (split)
                (("1" (decompose-equality) nil nil)
                 ("2" (lemma "trkgs2vect_id")
                  (("2" (inst - "vect2(vo)")
                    (("1" (expand "ground_speed")
                      (("1" (expand "trkgs2vect")
                        (("1" (expand "trk")
                          (("1" (typepred "vo")
                            (("1" (lemma "vectors_2D.sqv_eq_0")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (split +)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (decompose-equality 2)
                                          nil
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "*" -2)
                                            (("2"
                                              (decompose-equality -2)
                                              (("2"
                                                (decompose-equality 2)
                                                (("1"
                                                  (expand "vect2")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "vect2")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (typepred "vo")
                      (("2" (lemma "vectors_2D.sqv_eq_0")
                        (("2" (inst?) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil
   (kinematic_track_bands_init subtype "kinematic_trk_bands.AL"
    "{AL | reals.>(list_props[Aircraft].length(combine_bands.AL), 0)}")))
 (kinematic_track_bands_init_TCC2 0
  (kinematic_track_bands_init_TCC2-2 nil 3632474412
   ("" (skeep*)
    (("" (typepred "vo")
      (("" (lemma "vectors_2D.sqv_eq_0")
        (("" (inst?) (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (kinematic_track_bands_init subtype "kinematic_trk_bands.vo"
    "nzhVect3"))
  (kinematic_track_bands_init_TCC2-1 nil 3631963199
   ("" (subtype-tcc) nil nil)
   ((turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (ground_speed const-decl "nnreal" track_3D aviation)
    (norm const-decl "nnreal" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors))
   nil
   (kinematic_track_bands_init subtype "kinematic_trk_bands.vo"
    "nzhVect3")))
 (kinematic_track_bands_init_b2m_TCC1 0
  (kinematic_track_bands_init_b2m_TCC1-1 nil 3632218193
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (ground_speed const-decl "nnreal" track_3D aviation)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (* const-decl "Vector" vectors_3D vectors)
    (+ const-decl "Vector" vectors_3D vectors)
    (detector? const-decl "bool" int_bands nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (cos_range application-judgement "real_abs_le1" sincos trig))
   nil
   (kinematic_track_bands_init_b2m subtype "kinematic_trk_bands.step"
    "{step: real_types.posreal | booleans.AND(reals.<(step, pi_def.pi), booleans.AND(reals.<=(number_fields.*(step, kinematic_trk_bands.MaxNL), pi_def.pi), reals.<=(number_fields.*(step, kinematic_trk_bands.MaxNR), pi_def.pi)))}")))
 (kinematic_track_bands_init_b2m_TCC2 0
  (kinematic_track_bands_init_b2m_TCC2-1 nil 3667816187
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (ground_speed const-decl "nnreal" track_3D aviation)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (* const-decl "Vector" vectors_3D vectors)
    (+ const-decl "Vector" vectors_3D vectors)
    (detector? const-decl "bool" int_bands nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (cos_range application-judgement "real_abs_le1" sincos trig))
   nil
   (kinematic_track_bands_init_b2m subtype
    "kinematic_trk_bands.most_urgent"
    "{most_urgent | booleans.AND(reals.>=(kinematic_trk_bands.most_urgent(kinematic_trk_bands.so, kinematic_trk_bands.vo, kinematic_trk_bands.AL), 0), reals.<(kinematic_trk_bands.most_urgent(kinematic_trk_bands.so, kinematic_trk_bands.vo, kinematic_trk_bands.AL), list_props[Aircraft].length(kinematic_trk_bands.AL)))}")))
 (kinematic_track_bands_init_b2m 0
  (kinematic_track_bands_init_b2m-4 nil 3636301526
   ("" (skeep)
    (("" (skoletin 1)
      (("" (expand "kinematic_track_bands_init" :assert? none)
        ((""
          (name "Lfun"
                "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
          (("" (replaces -1)
            ((""
              (name "Rfun"
                    "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
              (("" (replaces -1)
                (("" (name "timestep" "step/omega")
                  (("" (replace -1)
                    ((""
                      (name "TrackInt" "kinematic_bands_combine(LOS,
                                     CD,
                                     LOS2,
                                     CD2,
                                     UseLOS2,
                                     B,
                                     T,
                                     B2,
                                     T2,
                                     so,
                                     vo,
                                     Lfun,
                                     Rfun,
                                     MaxNL,
                                     MaxNR,
                                     timestep,
                                     timestep,
                                     AL,
                                     most_urgent,
                                     epsH,
                                     epsV,
                                     UseHCrit,
                                     UseVCrit)")
                      (("1" (name "UnAdjB" "scal(step, TrackInt)")
                        (("1" (name "UnModB" "add(track(vo), UnAdjB)")
                          (("1"
                            (case "NOT length(UnModB) = length(TrackInt)")
                            (("1" (expand "UnModB" 1)
                              (("1"
                                (expand "add" 1)
                                (("1"
                                  (rewrite "map_length")
                                  (("1"
                                    (expand "UnAdjB" 1)
                                    (("1"
                                      (expand "scal" 1)
                                      (("1"
                                        (rewrite "map_length")
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2"
                                (case
                                 "NOT length(UnModB) = length(UnAdjB)")
                                (("1"
                                  (expand "UnModB" 1)
                                  (("1"
                                    (expand "add" 1)
                                    (("1"
                                      (rewrite "map_length")
                                      nil
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case
                                   "NOT strictly_increasing_real?(UnAdjB)")
                                  (("1"
                                    (lemma "strictly_increasing_scal")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma
                                           "kinematic_bands_combine_increasing")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (replace -6)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (split +)
                                                  (("1"
                                                    (expand "Lfun" 1)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "Rfun" 1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case
                                     "NOT strictly_increasing_real?(UnModB)")
                                    (("1"
                                      (lemma
                                       "strictly_increasing_add_real")
                                      (("1"
                                        (inst?)
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (replace -7)
                                        (("2"
                                          (replace -6)
                                          (("2"
                                            (replace -5)
                                            (("2"
                                              (replace -9)
                                              (("2"
                                                (expand "band_to_mod?")
                                                (("2"
                                                  (split +)
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (replace
                                                       -5
                                                       1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (expand
                                                         "add"
                                                         +)
                                                        (("1"
                                                          (rewrite
                                                           "map_nth_rw")
                                                          (("1"
                                                            (expand
                                                             "addrb"
                                                             +)
                                                            (("1"
                                                              (replace
                                                               -6
                                                               +
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (expand
                                                                 "scal"
                                                                 +)
                                                                (("1"
                                                                  (rewrite
                                                                   "map_nth_rw")
                                                                  (("1"
                                                                    (expand
                                                                     "scalrb"
                                                                     +)
                                                                    (("1"
                                                                      (lemma
                                                                       "kinematic_bands_combine_range")
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (replace
                                                                           -8)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (1
                                                                                        -20
                                                                                        -1))
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "le_plus_le")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "track(vo)"
                                                                                           "-pi"
                                                                                           "step * nth(TrackInt, j)`lb"
                                                                                           "0")
                                                                                          (("1"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (mult-by
                                                                                                 -1
                                                                                                 "step")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       (1
                                                                                        -21
                                                                                        -2))
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "le_plus_le")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "2*pi"
                                                                                           "step * nth(TrackInt, j)`ub"
                                                                                           "pi"
                                                                                           " track(vo)")
                                                                                          (("2"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (mult-by
                                                                                                 -1
                                                                                                 "step")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "Lfun"
                                                                                 1)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (expand
                                                                                 "Rfun"
                                                                                 1)
                                                                                (("3"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (typepred
                                                         "add(track(vo), scal(step, TrackInt))")
                                                        (("2"
                                                          (replace
                                                           -6
                                                           1)
                                                          (("2"
                                                            (replace
                                                             -7
                                                             +
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (expand
                                                               "add"
                                                               +)
                                                              (("2"
                                                                (rewrite
                                                                 "map_nth_rw")
                                                                (("2"
                                                                  (rewrite
                                                                   "map_nth_rw")
                                                                  (("2"
                                                                    (expand
                                                                     "addrb"
                                                                     +)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (replace
                                                                         -8
                                                                         +
                                                                         :dir
                                                                         rl)
                                                                        (("2"
                                                                          (expand
                                                                           "scal"
                                                                           +)
                                                                          (("2"
                                                                            (rewrite
                                                                             "map_nth_rw")
                                                                            (("2"
                                                                              (rewrite
                                                                               "map_nth_rw")
                                                                              (("2"
                                                                                (expand
                                                                                 "scalrb")
                                                                                (("2"
                                                                                  (lemma
                                                                                   "kinematic_bands_combine_range")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -10)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (split
                                                                                           -)
                                                                                          (("1"
                                                                                            (inst-cp
                                                                                             -
                                                                                             "length(TrackInt)-1")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "0")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (mult-by
                                                                                                   -1
                                                                                                   "step")
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -4
                                                                                                     "step")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "Lfun"
                                                                                             1)
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (expand
                                                                                             "Rfun"
                                                                                             1)
                                                                                            (("3"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide -4)
                            (("2" (flatten)
                              (("2"
                                (replaces -1)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil) ("3" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sqv_zero formula-decl nil vectors_2D vectors)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (below type-eq-decl nil nat_types nil)
    (nth def-decl "T" list_props nil)
    (le_plus_le formula-decl nil real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (kinematic_bands_combine_range formula-decl nil combine_bands nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (map_nth_rw formula-decl nil more_map_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (strictly_increasing_add_real formula-decl nil real_bands nil)
    (Rfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (Lfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (kinematic_bands_combine_increasing formula-decl nil combine_bands
     nil)
    (strictly_increasing_scal formula-decl nil real_bands nil)
    (strictly_increasing_real? const-decl "bool" real_bands nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (UnAdjB skolem-const-decl
     "listn[RealBand](length[IntBand](TrackInt))" kinematic_trk_bands
     nil)
    (map_length formula-decl nil more_map_props nil)
    (addrb const-decl "RealBand" real_bands nil)
    (UnModB skolem-const-decl
     "listn[RealBand](length[RealBand](UnAdjB))" kinematic_trk_bands
     nil)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (nnreal_lt_2pi nonempty-type-eq-decl nil trig_types trig)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (zero const-decl "Vector" vectors_2D vectors)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (listn type-eq-decl nil listn structures)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (Traj type-eq-decl nil int_bands nil)
    (IntBand type-eq-decl nil int_bands nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (band_to_mod? const-decl "bool" mod_bands nil)
    (kinematic_track_bands_init const-decl "list[RealBand]"
     kinematic_trk_bands nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (RealBand type-eq-decl nil real_bands nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cos const-decl "real" sincos_def trig)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def trig)
    (<= const-decl "bool" reals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields
       nil))
   nil)
  (kinematic_track_bands_init_b2m-3 nil 3632240405
   ("" (skeep)
    (("" (skoletin 1)
      (("" (expand "kinematic_track_bands_init" :assert? none)
        ((""
          (name "Lfun"
                "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
          (("" (replaces -1)
            ((""
              (name "Rfun"
                    "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
              (("" (replaces -1)
                ((""
                  (name "MaxN"
                        "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                    ELSE ceiling(pi / step)
                                                                                    ENDIF)")
                  (("" (case "NOT MaxN>=1")
                    (("1" (hide -2)
                      (("1" (replaces -1 1 :dir rl)
                        (("1" (lift-if)
                          (("1" (case "NOT pi/step>=1")
                            (("1" (cross-mult 1)
                              (("1" (assert) nil nil)) nil)
                             ("2" (ground) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (replaces -2)
                      (("2" (name "newstep" "pi/MaxN")
                        (("1"
                          (case "NOT (newstep > 0 AND pi/newstep = MaxN)")
                          (("1" (expand "newstep" 1)
                            (("1" (hide -3)
                              (("1" (cross-mult 1) nil nil)) nil))
                            nil)
                           ("2" (flatten)
                            (("2"
                              (name "TrackInt"
                                    "kinematic_bands_combine(LOS,
                                     CD,
                                     B,
                                     T,
                                     so,
                                     vo,
                                     Lfun,
                                     Rfun,
                                     MaxN,
                                     MaxN,
                                     newstep,
                                     newstep,
                                     AL,
                                     most_urgent,
                                     epsH,
                                     epsV,
                                     UseHCrit,
                                     UseVCrit)")
                              (("1"
                                (name
                                 "UnAdjB"
                                 "scal(newstep, TrackInt)")
                                (("1"
                                  (name
                                   "UnModB"
                                   "add(track(vo), UnAdjB)")
                                  (("1"
                                    (case
                                     "NOT length(UnModB) = length(TrackInt)")
                                    (("1"
                                      (expand "UnModB" 1)
                                      (("1"
                                        (expand "add" 1)
                                        (("1"
                                          (rewrite "map_length")
                                          (("1"
                                            (expand "UnAdjB" 1)
                                            (("1"
                                              (expand "scal" 1)
                                              (("1"
                                                (rewrite "map_length")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case
                                       "NOT length(UnModB) = length(UnAdjB)")
                                      (("1"
                                        (expand "UnModB" 1)
                                        (("1"
                                          (expand "add" 1)
                                          (("1"
                                            (rewrite "map_length")
                                            nil
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (case
                                         "NOT increasing_real?(UnAdjB)")
                                        (("1"
                                          (expand "increasing_real?" 1)
                                          (("1"
                                            (split +)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (expand "UnAdjB" 1)
                                                (("1"
                                                  (expand "scal" 1)
                                                  (("1"
                                                    (lift-if +)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (rewrite
                                                           "map_nth_rw")
                                                          (("1"
                                                            (expand
                                                             "scal"
                                                             +)
                                                            (("1"
                                                              (lift-if
                                                               +)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "kinematic_bands_combine_increasing")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (replace
                                                                       -7)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (expand
                                                                             "increasing_int?")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "i")
                                                                                (("1"
                                                                                  (mult-by
                                                                                   -1
                                                                                   "newstep")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "Lfun"
                                                                             1)
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (expand
                                                                             "Rfun"
                                                                             1)
                                                                            (("3"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (skeep)
                                              (("2"
                                                (expand "UnAdjB" 1)
                                                (("2"
                                                  (expand "scal" 1)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (rewrite
                                                       "map_nth_rw")
                                                      (("2"
                                                        (rewrite
                                                         "map_nth_rw")
                                                        (("2"
                                                          (expand
                                                           "scal"
                                                           1)
                                                          (("2"
                                                            (lemma
                                                             "kinematic_bands_combine_increasing")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (replace
                                                                 -7)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split
                                                                     -)
                                                                    (("1"
                                                                      (expand
                                                                       "increasing_int?")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "i"
                                                                           "j")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (mult-by
                                                                               -2
                                                                               "newstep")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "Lfun"
                                                                       1)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "Rfun"
                                                                       1)
                                                                      (("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case
                                           "NOT increasing_real?(UnModB)")
                                          (("1"
                                            (expand "increasing_real?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (hide -12)
                                                (("1"
                                                  (split +)
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (expand
                                                       "UnModB"
                                                       +)
                                                      (("1"
                                                        (expand
                                                         "add"
                                                         +)
                                                        (("1"
                                                          (rewrite
                                                           "map_nth_rw")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "i")
                                                            (("1"
                                                              (expand
                                                               "add"
                                                               +)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (skeep)
                                                    (("2"
                                                      (inst - "i" "j")
                                                      (("1"
                                                        (expand
                                                         "UnModB"
                                                         +)
                                                        (("1"
                                                          (expand
                                                           "add"
                                                           +)
                                                          (("1"
                                                            (rewrite
                                                             "map_nth_rw")
                                                            (("1"
                                                              (rewrite
                                                               "map_nth_rw")
                                                              (("1"
                                                                (expand
                                                                 "add"
                                                                 +)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("3"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (replace -10)
                                              (("2"
                                                (replace -7)
                                                (("2"
                                                  (replace -6)
                                                  (("2"
                                                    (replace -5)
                                                    (("2"
                                                      (replace -12)
                                                      (("2"
                                                        (expand
                                                         "band_to_mod?")
                                                        (("2"
                                                          (split +)
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (expand
                                                               "UnModB"
                                                               +)
                                                              (("1"
                                                                (expand
                                                                 "add"
                                                                 +)
                                                                (("1"
                                                                  (rewrite
                                                                   "map_nth_rw")
                                                                  (("1"
                                                                    (expand
                                                                     "add"
                                                                     +)
                                                                    (("1"
                                                                      (expand
                                                                       "UnAdjB"
                                                                       +)
                                                                      (("1"
                                                                        (expand
                                                                         "scal"
                                                                         +)
                                                                        (("1"
                                                                          (rewrite
                                                                           "map_nth_rw")
                                                                          (("1"
                                                                            (expand
                                                                             "scal"
                                                                             +)
                                                                            (("1"
                                                                              (lemma
                                                                               "kinematic_bands_combine_range")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (replace
                                                                                   -8)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -11
                                                                                             -1
                                                                                             :dir
                                                                                             rl)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -11
                                                                                               -2
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (mult-by
                                                                                                 -1
                                                                                                 "newstep")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -2
                                                                                                     "newstep")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "Lfun"
                                                                                         1)
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (expand
                                                                                         "Rfun"
                                                                                         1)
                                                                                        (("3"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (replace
                                                               -5
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "UnModB"
                                                                 +)
                                                                (("2"
                                                                  (expand
                                                                   "add"
                                                                   +)
                                                                  (("2"
                                                                    (rewrite
                                                                     "map_nth_rw")
                                                                    (("2"
                                                                      (rewrite
                                                                       "map_nth_rw")
                                                                      (("2"
                                                                        (expand
                                                                         "add"
                                                                         +)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "UnAdjB"
                                                                             +)
                                                                            (("2"
                                                                              (expand
                                                                               "scal"
                                                                               +)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "map_nth_rw")
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "map_nth_rw")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "scal")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "kinematic_bands_combine_range")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -9)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (inst-cp
                                                                                                 -
                                                                                                 "length(TrackInt)-1")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -14
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (cross-mult
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (neg-formula
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (cross-mult
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (neg-formula
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (cross-mult
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (cross-mult
                                                                                                                   -1)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "Lfun"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (expand
                                                                                                 "Rfun"
                                                                                                 1)
                                                                                                (("3"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (replaces -1)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil)
                               ("3" (assert) nil nil)
                               ("4" (assert) nil nil)
                               ("5"
                                (replace -2 1 :dir rl)
                                (("5" (cross-mult 1) nil nil))
                                nil)
                               ("6"
                                (expand "Rfun" 1)
                                (("6" (propax) nil nil))
                                nil)
                               ("7"
                                (expand "Lfun" 1)
                                (("7" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (AircraftList type-eq-decl nil int_bands nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (RealBand type-eq-decl nil real_bands nil)
    (Sign type-eq-decl nil sign reals)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (IntBand type-eq-decl nil int_bands nil)
    (Traj type-eq-decl nil int_bands nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (kinematic_bands_combine_range formula-decl nil combine_bands nil)
    (kinematic_bands_combine_increasing formula-decl nil combine_bands
     nil)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (listn type-eq-decl nil listn structures)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis))
   nil)
  (kinematic_track_bands_init_b2m-2 nil 3632240385
   ("" (skeep)
    (("" (skoletin 1)
      (("" (expand "kinematic_track_bands_init" :assert? none)
        (("" (relabel (:pairing |!skl:1344|) (-1))
          (("" (postpone) nil))))))))
    nil)
   nil nil)
  (kinematic_track_bands_init_b2m-1 nil 3632218325
   ("" (skeep)
    (("" (skoletin 1)
      (("" (expand "kinematic_track_bands_init" :assert? none)
        (("" (relabel (:pairing |!skl:1344|) (-1))
          (("" (postpone) nil nil)) nil))
        nil))
      nil))
    nil)
   nil shostak))
 (kinematic_track_bands_TCC1 0
  (kinematic_track_bands_TCC1-1 nil 3632218193
   ("" (skeep)
    (("" (lemma "kinematic_track_bands_init_b2m")
      (("" (inst?)
        (("" (assert)
          (("" (expand "turnOmega" +)
            (("" (hide-all-but 1)
              (("" (split)
                (("1" (decompose-equality) nil nil)
                 ("2" (lemma "trkgs2vect_id")
                  (("2" (inst - "vect2(vo)")
                    (("1" (expand "ground_speed")
                      (("1" (expand "trkgs2vect")
                        (("1" (expand "trk")
                          (("1" (typepred "vo")
                            (("1" (lemma "vectors_2D.sqv_eq_0")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (split +)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (decompose-equality 2)
                                          nil
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "*" -2)
                                            (("2"
                                              (decompose-equality -2)
                                              (("2"
                                                (decompose-equality 2)
                                                (("1"
                                                  (expand "vect2")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "vect2")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (typepred "vo")
                      (("2" (lemma "vectors_2D.sqv_eq_0")
                        (("2" (inst?) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (decompose-equality) nil nil)
                 ("4" (lemma "trkgs2vect_id")
                  (("4" (inst - "vect2(vo)")
                    (("1" (expand "ground_speed")
                      (("1" (expand "trkgs2vect")
                        (("1" (expand "trk")
                          (("1" (typepred "vo")
                            (("1" (lemma "vectors_2D.sqv_eq_0")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (split +)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (decompose-equality 2)
                                          nil
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "*" -2)
                                            (("2"
                                              (decompose-equality -2)
                                              (("2"
                                                (decompose-equality 2)
                                                (("1"
                                                  (expand "vect2")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "vect2")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (typepred "vo")
                      (("2" (lemma "vectors_2D.sqv_eq_0")
                        (("2" (inst?) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((norm const-decl "nnreal" vectors_2D vectors)
    (sin const-decl "real" sincos_def trig)
    (nnreal_lt_2pi nonempty-type-eq-decl nil trig_types trig)
    (track const-decl "nnreal_lt_2pi" track aviation)
    (* const-decl "Vector" vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (trk const-decl "nnreal_lt_2pi" track aviation)
    (trkgs2vect const-decl "Nz_vect2" track aviation)
    (ground_speed const-decl "nnreal" track_3D aviation)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (vo skolem-const-decl "{vo | sqv(vect2(vo)) > 0}"
     kinematic_trk_bands nil)
    (trkgs2vect_id formula-decl nil track aviation)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (cos_range application-judgement "real_abs_le1" sincos trig)
    (sin_range application-judgement "real_abs_le1" sincos trig)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def trig)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (cos const-decl "real" sincos_def trig)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (> const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (detector? const-decl "bool" int_bands nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (kinematic_track_bands_init_b2m formula-decl nil
     kinematic_trk_bands nil))
   nil
   (kinematic_track_bands subtype "kinematic_trk_bands.kb"
    "(mod_bands.band_to_mod?)")))
 (kinematic_track_bands_def_TCC1 0
  (kinematic_track_bands_def_TCC1-1 nil 3632501305
   ("" (skeep*)
    (("" (case "NOT vect2(vo)=zero")
      (("1" (propax) nil nil)
       ("2" (replaces -1) (("2" (assert) nil nil)) nil))
      nil))
    nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (kinematic_track_bands_def subtype "kinematic_trk_bands.vo"
    "nzhVect3")))
 (kinematic_track_bands_def 0
  (kinematic_track_bands_def-6 nil 3709343634
   ("" (skeep)
    (("" (skoletin 1)
      ((""
        (name "Lfun"
              "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
        ((""
          (name "Rfun"
                "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
          (("" (skoletin 1)
            (("" (skeep*)
              ((""
                (name "newtrk"
                      "to2pi.to2pi(track(vo) + j * (dir * step))")
                (("" (replace -1)
                  (("" (assert)
                    (("" (flatten)
                      ((""
                        (name "TrackInt" "kinematic_bands_combine(LOS,
                                                                                                              CD,
                                                                                                              LOS2,
                                                                                                              CD2,
                                                                                                              UseLOS2,
                                                                                                              B,
                                                                                                              T,
                                                                                                              B2,
                                                                                                              T2,
                                                                                                              so,
                                                                                                              vo,
                                                                                                              Lfun,
                                                                                                              Rfun,
                                                                                                              MaxNL,
                                                                                                              MaxNR,
                                                                                                              timestep,
                                                                                                              timestep,
                                                                                                              AL,
                                                                                                              most_urgent,
                                                                                                              epsH,
                                                                                                              epsV,
                                                                                                              UseHCrit,
                                                                                                              UseVCrit)")
                        (("" (name "UnAdjB" "scal(step, TrackInt)")
                          (("" (name "UnModB" "add(track(vo), UnAdjB)")
                            ((""
                              (case "NOT length(UnModB) = length(TrackInt)")
                              (("1"
                                (expand "UnModB" 1)
                                (("1"
                                  (expand "add" 1)
                                  (("1"
                                    (rewrite "map_length")
                                    (("1"
                                      (expand "UnAdjB" 1)
                                      (("1"
                                        (expand "scal" 1)
                                        (("1"
                                          (rewrite "map_length")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (assert)
                                (("2"
                                  (case
                                   "NOT length(UnModB) = length(UnAdjB)")
                                  (("1"
                                    (expand "UnModB" 1)
                                    (("1"
                                      (expand "add" 1)
                                      (("1"
                                        (rewrite "map_length")
                                        nil
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case
                                     "NOT strictly_increasing_real?(UnAdjB)")
                                    (("1"
                                      (lemma
                                       "strictly_increasing_scal")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (lemma
                                             "kinematic_bands_combine_increasing")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (replace -6)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split +)
                                                    (("1"
                                                      (expand "Lfun" 1)
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "Rfun" 1)
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case
                                       "NOT strictly_increasing_real?(UnModB)")
                                      (("1"
                                        (expand "UnModB" 1)
                                        (("1"
                                          (lemma
                                           "strictly_increasing_add_real")
                                          (("1"
                                            (inst?)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (expand
                                             "kinematic_track_bands")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand
                                                 "kinematic_track_bands_init")
                                                (("2"
                                                  (replace -13 :dir rl)
                                                  (("2"
                                                    (replace -14)
                                                    (("2"
                                                      (replace -15)
                                                      (("2"
                                                        (replace -7)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (lemma
                                                             "kinematic_bands_combine_def")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (replace
                                                                 -8)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split
                                                                     -)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "dir*j")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (hide
                                                                             -2)
                                                                            (("1"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (case
                                                                                 "dir = -1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "NOT dir = 1")
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "dir")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "NOT j = 0")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "conflict_steps_eq")
                                                                                          (("2"
                                                                                            (insteep
                                                                                             -
                                                                                             :but
                                                                                             ("trajl"
                                                                                              "trajr"
                                                                                              "tsl"
                                                                                              "tsr"
                                                                                              "useLOS2"))
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "Lfun"
                                                                                               "Rfun"
                                                                                               "timestep"
                                                                                               "timestep"
                                                                                               "UseLOS2")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "Lfun"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "Rfun"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "turnOmega_start")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "dir = 1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "dir")
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("2"
                                                                                          (case
                                                                                           "NOT j = 0")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "conflict_steps_eq")
                                                                                                (("2"
                                                                                                  (insteep
                                                                                                   -
                                                                                                   :but
                                                                                                   ("trajl"
                                                                                                    "trajr"
                                                                                                    "tsl"
                                                                                                    "tsr"
                                                                                                    "useLOS2"))
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "Lfun"
                                                                                                     "Rfun"
                                                                                                     "timestep"
                                                                                                     "timestep"
                                                                                                     "UseLOS2")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Lfun"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "Rfun"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "turnOmega_start")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (case
                                                                                 "NOT in?(nth(ktb,i),newtrk)")
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replace
                                                                                   -17
                                                                                   -1)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -7
                                                                                     -1)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -6
                                                                                       -1)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "band_mod_2pi(UnModB)")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "track_band?")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -4
                                                                                               "to2pi.to2pi(track(vo) + j * (dir * step))")
                                                                                              (("2"
                                                                                                (split
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (skosimp*)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "r!1 = track(vo) + j * (dir * step)")
                                                                                                    (("1"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "UnModB"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "add"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "map_nth_rw")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "UnAdjB"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "scal"
                                                                                                                 -)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "map_nth_rw")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "in?"
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "addrb"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "scalrb"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           +
                                                                                                                           "j!1")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 +)
                                                                                                                                (("1"
                                                                                                                                  (both-sides
                                                                                                                                   "-"
                                                                                                                                   "track(vo)"
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "associative_mult")
                                                                                                                                      (("1"
                                                                                                                                        (div-by
                                                                                                                                         -1
                                                                                                                                         "step")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (both-sides
                                                                                                                                   "-"
                                                                                                                                   "track(vo)"
                                                                                                                                   -2)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "associative_mult")
                                                                                                                                      (("2"
                                                                                                                                        (div-by
                                                                                                                                         -2
                                                                                                                                         "step")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (name
                                                                                                         "y"
                                                                                                         "track(vo)+j*dir*step")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "j")
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "to2pi.to2pi_equal")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "r!1"
                                                                                                               "y")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "NOT to2pi.to2pi(r!1)=to2pi.to2pi(y)")
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (skeep
                                                                                                                         -)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "abs(r!1-y)<2*pi")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "k = 0")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "abs_mult")
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "abs_mult")
                                                                                                                                    (("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-1
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "abs(k)>=1")
                                                                                                                                        (("1"
                                                                                                                                          (mult-by
                                                                                                                                           -1
                                                                                                                                           "abs(pi)")
                                                                                                                                          (("1"
                                                                                                                                            (grind)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide
                                                                                                                                           -)
                                                                                                                                          (("2"
                                                                                                                                            (grind)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (case
                                                                                                                             "abs(track(vo)-r!1)<=pi AND abs(track(vo)-y)<pi")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "abs"
                                                                                                                                 (-1
                                                                                                                                  -2
                                                                                                                                  1))
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (ground)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (split
                                                                                                                               +)
                                                                                                                              (("1"
                                                                                                                                (copy
                                                                                                                                 -4)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "UnModB"
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "add"
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "map_nth_rw")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "UnAdjB"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "scal"
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "map_nth_rw")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "in?"
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "addrb"
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "scalrb"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "kinematic_bands_combine_range")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -18)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (split
                                                                                                                                                             -)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "j!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -1
                                                                                                                                                                   "step")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (mult-by
                                                                                                                                                                     -2
                                                                                                                                                                     "step")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "MaxNL*step>=0 AND MaxNL*step<=pi")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "MaxNR*step>=0 AND MaxNR*step<=pi")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "abs"
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (ground)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (both-sides
                                                                                                                                                                                   "-"
                                                                                                                                                                                   "track(vo)"
                                                                                                                                                                                   -9)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "-(track(vo) - r!1) = r!1 - track(vo)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1
                                                                                                                                                                                         :hide?
                                                                                                                                                                                         t)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (rewrite
                                                                                                                                                                                           "commutative_mult")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "r!1 - track(vo) <= step * MaxNR")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "commutative_mult"
                                                                                                                                                                                               -6)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 (1
                                                                                                                                                                                                  -9
                                                                                                                                                                                                  -6))
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (name-replace
                                                                                                                                                                                                     "bla"
                                                                                                                                                                                                     "step * nth(TrackInt, j!1)`ub")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (both-sides
                                                                                                                                                                                   "-"
                                                                                                                                                                                   "track(vo)"
                                                                                                                                                                                   -7)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                       (2
                                                                                                                                                                                        -7
                                                                                                                                                                                        -6
                                                                                                                                                                                        -2))
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         "commutative_mult"
                                                                                                                                                                                         -3)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (name-replace
                                                                                                                                                                                           "bla"
                                                                                                                                                                                           "nth(TrackInt, j!1)`lb * step")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (split
                                                                                                                                                                           +)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "Lfun"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (expand
                                                                                                                                                               "Rfun"
                                                                                                                                                               1)
                                                                                                                                                              (("3"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -3
                                                                                                                                   1
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "NOT (-MaxNL < j * dir
                                                                   AND j * dir < MaxNR)")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (flatten)
                                                                                                                                        (("2"
                                                                                                                                          (mult-by
                                                                                                                                           -1
                                                                                                                                           "step")
                                                                                                                                          (("2"
                                                                                                                                            (mult-by
                                                                                                                                             -2
                                                                                                                                             "step")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "abs"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "i")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "Lfun"
                                                                       1)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "Rfun"
                                                                       1)
                                                                      (("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (nnreal_times_nnreal_is_nnreal judgement-tcc nil real_types nil)
    (commutative_mult formula-decl nil number_fields nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (kinematic_bands_combine_range formula-decl nil combine_bands nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
     real_defs nil)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (nzint_abs_is_pos application-judgement "{j: posint | j >= i}"
     real_defs nil)
    (abs_mult formula-decl nil real_props nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (to2pi_equal formula-decl nil to2pi trig)
    (both_sides_div_pos_le1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (associative_mult formula-decl nil number_fields nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (both_sides_plus_le2 formula-decl nil real_props nil)
    (both_sides_minus_le1 formula-decl nil real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (in? const-decl "bool" int_bands nil)
    (map_nth_rw formula-decl nil more_map_props nil)
    (band_mod_2pi const-decl "(track_band?(RL))" mod_bands nil)
    (band_to_mod? const-decl "bool" mod_bands nil)
    (track_band? const-decl "bool" mod_bands nil)
    (turnOmega_start formula-decl nil kinematics_turn aviation)
    (conflict_steps_eq formula-decl nil combine_bands nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (kinematic_bands_combine_def formula-decl nil combine_bands nil)
    (kinematic_track_bands_init const-decl "list[RealBand]"
     kinematic_trk_bands nil)
    (strictly_increasing_add_real formula-decl nil real_bands nil)
    (Rfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (Lfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (kinematic_bands_combine_increasing formula-decl nil combine_bands
     nil)
    (strictly_increasing_scal formula-decl nil real_bands nil)
    (strictly_increasing_real? const-decl "bool" real_bands nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (UnAdjB skolem-const-decl
     "listn[RealBand](length[IntBand](TrackInt))" kinematic_trk_bands
     nil)
    (map_length formula-decl nil more_map_props nil)
    (addrb const-decl "RealBand" real_bands nil)
    (UnModB skolem-const-decl
     "listn[RealBand](length[RealBand](UnAdjB))" kinematic_trk_bands
     nil)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (listn type-eq-decl nil listn structures)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (IntBand type-eq-decl nil int_bands nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (to2pi const-decl "nnreal_lt_2pi" to2pi trig)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (in? const-decl "bool" real_bands nil)
    (below type-eq-decl nil naturalnumbers nil)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (conflict_step const-decl "bool" int_bands nil)
    (Traj type-eq-decl nil int_bands nil)
    (nnreal_lt_2pi nonempty-type-eq-decl nil trig_types trig)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (RealBand type-eq-decl nil real_bands nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign reals)
    (kinematic_track_bands const-decl "list[RealBand]"
     kinematic_trk_bands nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (detector? const-decl "bool" int_bands nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cos const-decl "real" sincos_def trig)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def trig)
    (<= const-decl "bool" reals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields
       nil))
   nil)
  (kinematic_track_bands_def-5 nil 3672151839
   ("" (skeep)
    (("" (skoletin 1)
      ((""
        (name "Lfun"
              "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
        (("" (replaces -1)
          ((""
            (name "Rfun"
                  "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
            (("" (replaces -1)
              (("" (skoletin 1)
                (("" (skeep*)
                  ((""
                    (name "newtrk"
                          "kinematics@to2pi.to2pi(track(vo) + j * (dir * step))")
                    (("" (replace -1)
                      (("" (assert)
                        (("" (flatten)
                          ((""
                            (name "TrackInt"
                                  "kinematic_bands_combine(LOS,
                                                                                                       CD,
                                                                                                       LOS2,
                                                                                                       CD2,
                                                                                                       UseLOS2,
                                                                                                       B,
                                                                                                       T,
                                                                                                       B2,
                                                                                                       T2,
                                                                                                       so,
                                                                                                       vo,
                                                                                                       Lfun,
                                                                                                       Rfun,
                                                                                                       MaxNL,
                                                                                                       MaxNR,
                                                                                                       timestep,
                                                                                                       timestep,
                                                                                                       AL,
                                                                                                       most_urgent,
                                                                                                       epsH,
                                                                                                       epsV,
                                                                                                       UseHCrit,
                                                                                                       UseVCrit)")
                            (("" (name "UnAdjB" "scal(step, TrackInt)")
                              ((""
                                (name
                                 "UnModB"
                                 "add(track(vo), UnAdjB)")
                                ((""
                                  (case
                                   "NOT length(UnModB) = length(TrackInt)")
                                  (("1"
                                    (expand "UnModB" 1)
                                    (("1"
                                      (expand "add" 1)
                                      (("1"
                                        (rewrite "map_length")
                                        (("1"
                                          (expand "UnAdjB" 1)
                                          (("1"
                                            (expand "scal" 1)
                                            (("1"
                                              (rewrite "map_length")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (case
                                       "NOT length(UnModB) = length(UnAdjB)")
                                      (("1"
                                        (expand "UnModB" 1)
                                        (("1"
                                          (expand "add" 1)
                                          (("1"
                                            (rewrite "map_length")
                                            nil
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (case
                                         "NOT strictly_increasing_real?(UnAdjB)")
                                        (("1"
                                          (lemma
                                           "strictly_increasing_scal")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lemma
                                                 "kinematic_bands_combine_increasing")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (replace -6)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split +)
                                                        (("1"
                                                          (expand
                                                           "Lfun"
                                                           1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "Rfun"
                                                           1)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case
                                           "NOT strictly_increasing_real?(UnModB)")
                                          (("1"
                                            (expand "UnModB" 1)
                                            (("1"
                                              (lemma
                                               "strictly_increasing_add_real")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (expand
                                                 "kinematic_track_bands")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand
                                                     "kinematic_track_bands_init")
                                                    (("2"
                                                      (replace
                                                       -13
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (replace -14)
                                                        (("2"
                                                          (replace -15)
                                                          (("2"
                                                            (replace
                                                             -7)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (lemma
                                                                 "kinematic_bands_combine_def")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (replace
                                                                     -8)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "dir*j")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (hide
                                                                                 -2)
                                                                                (("1"
                                                                                  (split
                                                                                   -)
                                                                                  (("1"
                                                                                    (case
                                                                                     "dir = -1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "NOT dir = 1")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "dir")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "NOT j = 0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "conflict_steps_eq")
                                                                                              (("2"
                                                                                                (insteep
                                                                                                 -
                                                                                                 :but
                                                                                                 ("trajl"
                                                                                                  "trajr"
                                                                                                  "tsl"
                                                                                                  "tsr"
                                                                                                  "useLOS2"))
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "Lfun"
                                                                                                   "Rfun"
                                                                                                   "timestep"
                                                                                                   "timestep"
                                                                                                   "UseLOS2")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "Lfun"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Rfun"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "turnOmega_start")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "dir = 1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (typepred
                                                                                           "dir")
                                                                                          (("2"
                                                                                            (ground)
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT j = 0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "conflict_steps_eq")
                                                                                                    (("2"
                                                                                                      (insteep
                                                                                                       -
                                                                                                       :but
                                                                                                       ("trajl"
                                                                                                        "trajr"
                                                                                                        "tsl"
                                                                                                        "tsr"
                                                                                                        "useLOS2"))
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "Lfun"
                                                                                                         "Rfun"
                                                                                                         "timestep"
                                                                                                         "timestep"
                                                                                                         "UseLOS2")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "Lfun"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "Rfun"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "turnOmega_start")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (case
                                                                                     "NOT in?(nth(ktb,i),newtrk)")
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -17
                                                                                       -1)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -7
                                                                                         -1)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -6
                                                                                           -1)
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "band_mod_2pi(UnModB)")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "track_band?")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -4
                                                                                                   "kinematics@to2pi.to2pi(track(vo) + j * (dir * step))")
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "r!1 = track(vo) + j * (dir * step)")
                                                                                                        (("1"
                                                                                                          (replaces
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "UnModB"
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "add"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "map_nth_rw")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "UnAdjB"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "scal"
                                                                                                                     -)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "map_nth_rw")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "in?"
                                                                                                                         (-1
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "addrb"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "scalrb"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               +
                                                                                                                               "j!1")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     +)
                                                                                                                                    (("1"
                                                                                                                                      (mult-by
                                                                                                                                       1
                                                                                                                                       "step")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (mult-by
                                                                                                                                       1
                                                                                                                                       "step")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "y"
                                                                                                             "track(vo)+j*dir*step")
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "j")
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "kinematics@to2pi.to2pi_equal")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "r!1"
                                                                                                                   "y")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -3)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "NOT kinematics@to2pi.to2pi(r!1)=kinematics@to2pi.to2pi(y)")
                                                                                                                        (("1"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (skeep
                                                                                                                             -)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "abs(r!1-y)<2*pi")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -2
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (case
                                                                                                                                   "k = 0")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "abs_mult")
                                                                                                                                      (("2"
                                                                                                                                        (rewrite
                                                                                                                                         "abs_mult")
                                                                                                                                        (("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            1))
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "abs(k)>=1")
                                                                                                                                            (("1"
                                                                                                                                              (mult-by
                                                                                                                                               -1
                                                                                                                                               "abs(pi)")
                                                                                                                                              (("1"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               -)
                                                                                                                                              (("2"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (case
                                                                                                                                 "abs(track(vo)-r!1)<=pi AND abs(track(vo)-y)<pi")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "abs"
                                                                                                                                     (-1
                                                                                                                                      -2
                                                                                                                                      1))
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (split
                                                                                                                                   +)
                                                                                                                                  (("1"
                                                                                                                                    (copy
                                                                                                                                     -4)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "UnModB"
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "add"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "map_nth_rw")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "UnAdjB"
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "scal"
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (rewrite
                                                                                                                                                 "map_nth_rw")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "in?"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "addrb"
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "scalrb"
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "kinematic_bands_combine_range")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -18)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (split
                                                                                                                                                                 -)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "j!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (mult-by
                                                                                                                                                                       -1
                                                                                                                                                                       "step")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (mult-by
                                                                                                                                                                         -2
                                                                                                                                                                         "step")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "MaxNL*step>=0 AND MaxNL*step<=pi")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "MaxNR*step>=0 AND MaxNR*step<=pi")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "abs"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (ground)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (split
                                                                                                                                                                               +)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (rewrite
                                                                                                                                                                                 "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "Lfun"
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (expand
                                                                                                                                                                   "Rfun"
                                                                                                                                                                   1)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -3
                                                                                                                                       1
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "NOT (-MaxNL < j * dir
                                  AND j * dir < MaxNR)")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (flatten)
                                                                                                                                            (("2"
                                                                                                                                              (mult-by
                                                                                                                                               -1
                                                                                                                                               "step")
                                                                                                                                              (("2"
                                                                                                                                                (mult-by
                                                                                                                                                 -2
                                                                                                                                                 "step")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "abs"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("2"
                                                                                                                                                        (ground)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "i")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "Lfun"
                                                                           1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (expand
                                                                           "Rfun"
                                                                           1)
                                                                          (("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((detector? const-decl "bool" int_bands nil)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (AircraftList type-eq-decl nil int_bands nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (RealBand type-eq-decl nil real_bands nil)
    (Sign type-eq-decl nil sign reals)
    (zero const-decl "Vector" vectors_2D vectors)
    (Traj type-eq-decl nil int_bands nil)
    (conflict_step const-decl "bool" int_bands nil)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (in? const-decl "bool" real_bands nil)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (listn type-eq-decl nil listn structures)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (addrb const-decl "RealBand" real_bands nil)
    (strictly_increasing_add_real formula-decl nil real_bands nil)
    (conflict_steps_eq formula-decl nil combine_bands nil)
    (turnOmega_start formula-decl nil kinematics_turn aviation)
    (Integral const-decl "real" integral_def analysis)
    (kinematic_bands_combine_range formula-decl nil combine_bands nil)
    (in? const-decl "bool" int_bands nil)
    (band_mod_2pi const-decl "(track_band?(RL))" mod_bands nil)
    (band_to_mod? const-decl "bool" mod_bands nil)
    (track_band? const-decl "bool" mod_bands nil)
    (kinematic_bands_combine_def formula-decl nil combine_bands nil)
    (strictly_increasing_scal formula-decl nil real_bands nil)
    (kinematic_bands_combine_increasing formula-decl nil combine_bands
     nil)
    (strictly_increasing_real? const-decl "bool" real_bands nil)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (IntBand type-eq-decl nil int_bands nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis))
   nil)
  (kinematic_track_bands_def-4 nil 3633951483
   ("" (skeep)
    (("" (skoletin 1)
      ((""
        (name "Lfun"
              "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
        (("" (replaces -1)
          ((""
            (name "Rfun"
                  "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
            (("" (replaces -1)
              (("" (skoletin 1)
                (("" (skeep*)
                  ((""
                    (name "newtrk"
                          "Util@to2pi.to2pi(track(vo) + j * (dir * step))")
                    (("" (replace -1)
                      (("" (assert)
                        (("" (flatten)
                          ((""
                            (name "TrackInt"
                                  "kinematic_bands_combine(LOS,
                                                                                                CD,
                                                                                                LOS2,
                                                                                                CD2,
                                                                                                UseLOS2,
                                                                                                B,
                                                                                                T,
                                                                                                B2,
                                                                                                T2,
                                                                                                so,
                                                                                                vo,
                                                                                                Lfun,
                                                                                                Rfun,
                                                                                                MaxNL,
                                                                                                MaxNR,
                                                                                                timestep,
                                                                                                timestep,
                                                                                                AL,
                                                                                                most_urgent,
                                                                                                epsH,
                                                                                                epsV,
                                                                                                UseHCrit,
                                                                                                UseVCrit)")
                            (("" (name "UnAdjB" "scal(step, TrackInt)")
                              ((""
                                (name
                                 "UnModB"
                                 "add(track(vo), UnAdjB)")
                                ((""
                                  (case
                                   "NOT length(UnModB) = length(TrackInt)")
                                  (("1"
                                    (expand "UnModB" 1)
                                    (("1"
                                      (expand "add" 1)
                                      (("1"
                                        (rewrite "map_length")
                                        (("1"
                                          (expand "UnAdjB" 1)
                                          (("1"
                                            (expand "scal" 1)
                                            (("1"
                                              (rewrite "map_length")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (case
                                       "NOT length(UnModB) = length(UnAdjB)")
                                      (("1"
                                        (expand "UnModB" 1)
                                        (("1"
                                          (expand "add" 1)
                                          (("1"
                                            (rewrite "map_length")
                                            nil
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (case
                                         "NOT strictly_increasing_real?(UnAdjB)")
                                        (("1"
                                          (lemma
                                           "strictly_increasing_scal")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lemma
                                                 "kinematic_bands_combine_increasing")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (replace -6)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split +)
                                                        (("1"
                                                          (expand
                                                           "Lfun"
                                                           1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "Rfun"
                                                           1)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case
                                           "NOT strictly_increasing_real?(UnModB)")
                                          (("1"
                                            (expand "UnModB" 1)
                                            (("1"
                                              (lemma
                                               "strictly_increasing_add_real")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (expand
                                                 "kinematic_track_bands")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand
                                                     "kinematic_track_bands_init")
                                                    (("2"
                                                      (replace
                                                       -13
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (replace -14)
                                                        (("2"
                                                          (replace -15)
                                                          (("2"
                                                            (replace
                                                             -7)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (lemma
                                                                 "kinematic_bands_combine_def")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (replace
                                                                     -8)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "dir*j")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (hide
                                                                                 -2)
                                                                                (("1"
                                                                                  (split
                                                                                   -)
                                                                                  (("1"
                                                                                    (case
                                                                                     "dir = -1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "NOT dir = 1")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "dir")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "NOT j = 0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "conflict_steps_eq")
                                                                                              (("2"
                                                                                                (insteep
                                                                                                 -
                                                                                                 :but
                                                                                                 ("trajl"
                                                                                                  "trajr"
                                                                                                  "tsl"
                                                                                                  "tsr"
                                                                                                  "useLOS2"))
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "Lfun"
                                                                                                   "Rfun"
                                                                                                   "timestep"
                                                                                                   "timestep"
                                                                                                   "UseLOS2")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "Lfun"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Rfun"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "turnOmega_start")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "dir = 1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (typepred
                                                                                           "dir")
                                                                                          (("2"
                                                                                            (ground)
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT j = 0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "conflict_steps_eq")
                                                                                                    (("2"
                                                                                                      (insteep
                                                                                                       -
                                                                                                       :but
                                                                                                       ("trajl"
                                                                                                        "trajr"
                                                                                                        "tsl"
                                                                                                        "tsr"
                                                                                                        "useLOS2"))
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "Lfun"
                                                                                                         "Rfun"
                                                                                                         "timestep"
                                                                                                         "timestep"
                                                                                                         "UseLOS2")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "Lfun"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "Rfun"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "turnOmega_start")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (case
                                                                                     "NOT in?(nth(ktb,i),newtrk)")
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -17
                                                                                       -1)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -7
                                                                                         -1)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -6
                                                                                           -1)
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "band_mod_2pi(UnModB)")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "track_band?")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -4
                                                                                                   "Util@to2pi.to2pi(track(vo) + j * (dir * step))")
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "r!1 = track(vo) + j * (dir * step)")
                                                                                                        (("1"
                                                                                                          (replaces
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "UnModB"
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "add"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "map_nth_rw")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "UnAdjB"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "scal"
                                                                                                                     -)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "map_nth_rw")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "in?"
                                                                                                                         (-1
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "addrb"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "scalrb"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               +
                                                                                                                               "j!1")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     +)
                                                                                                                                    (("1"
                                                                                                                                      (mult-by
                                                                                                                                       1
                                                                                                                                       "step")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (mult-by
                                                                                                                                       1
                                                                                                                                       "step")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "y"
                                                                                                             "track(vo)+j*dir*step")
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "j")
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "Util@to2pi.to2pi_equal")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "r!1"
                                                                                                                   "y")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -3)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "NOT Util@to2pi.to2pi(r!1)=Util@to2pi.to2pi(y)")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "to2pi")
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (skeep
                                                                                                                               -)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "abs(r!1-y)<2*pi")
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -2
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "k = 0")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (rewrite
                                                                                                                                         "abs_mult")
                                                                                                                                        (("2"
                                                                                                                                          (rewrite
                                                                                                                                           "abs_mult")
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "abs(k)>=1")
                                                                                                                                              (("1"
                                                                                                                                                (mult-by
                                                                                                                                                 -1
                                                                                                                                                 "abs(pi)")
                                                                                                                                                (("1"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide
                                                                                                                                                 -)
                                                                                                                                                (("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (case
                                                                                                                                   "abs(track(vo)-r!1)<=pi AND abs(track(vo)-y)<pi")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "abs"
                                                                                                                                       (-1
                                                                                                                                        -2
                                                                                                                                        1))
                                                                                                                                      (("1"
                                                                                                                                        (lift-if)
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (split
                                                                                                                                     +)
                                                                                                                                    (("1"
                                                                                                                                      (copy
                                                                                                                                       -4)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "UnModB"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "add"
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "map_nth_rw")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "UnAdjB"
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "scal"
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "map_nth_rw")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "in?"
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "addrb"
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "scalrb"
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           "kinematic_bands_combine_range")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -18)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "j!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (mult-by
                                                                                                                                                                         -1
                                                                                                                                                                         "step")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (mult-by
                                                                                                                                                                           -2
                                                                                                                                                                           "step")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "MaxNL*step>=0 AND MaxNL*step<=pi")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "MaxNR*step>=0 AND MaxNR*step<=pi")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "abs"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (ground)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (split
                                                                                                                                                                                 +)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "Lfun"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (expand
                                                                                                                                                                     "Rfun"
                                                                                                                                                                     1)
                                                                                                                                                                    (("3"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -3
                                                                                                                                         1
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "NOT (-MaxNL < j * dir
AND j * dir < MaxNR)")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (mult-by
                                                                                                                                                 -1
                                                                                                                                                 "step")
                                                                                                                                                (("2"
                                                                                                                                                  (mult-by
                                                                                                                                                   -2
                                                                                                                                                   "step")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "abs"
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("2"
                                                                                                                                                          (ground)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "i")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "Lfun"
                                                                           1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (expand
                                                                           "Rfun"
                                                                           1)
                                                                          (("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((detector? const-decl "bool" int_bands nil)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (AircraftList type-eq-decl nil int_bands nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (RealBand type-eq-decl nil real_bands nil)
    (Sign type-eq-decl nil sign reals)
    (zero const-decl "Vector" vectors_2D vectors)
    (Traj type-eq-decl nil int_bands nil)
    (conflict_step const-decl "bool" int_bands nil)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (in? const-decl "bool" real_bands nil)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (listn type-eq-decl nil listn structures)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (addrb const-decl "RealBand" real_bands nil)
    (strictly_increasing_add_real formula-decl nil real_bands nil)
    (conflict_steps_eq formula-decl nil combine_bands nil)
    (turnOmega_start formula-decl nil kinematics_turn aviation)
    (kinematic_bands_combine_range formula-decl nil combine_bands nil)
    (Integral const-decl "real" integral_def analysis)
    (in? const-decl "bool" int_bands nil)
    (band_mod_2pi const-decl "(track_band?(RL))" mod_bands nil)
    (band_to_mod? const-decl "bool" mod_bands nil)
    (track_band? const-decl "bool" mod_bands nil)
    (kinematic_bands_combine_def formula-decl nil combine_bands nil)
    (strictly_increasing_scal formula-decl nil real_bands nil)
    (kinematic_bands_combine_increasing formula-decl nil combine_bands
     nil)
    (strictly_increasing_real? const-decl "bool" real_bands nil)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (IntBand type-eq-decl nil int_bands nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis))
   nil)
  (kinematic_track_bands_def-3 nil 3632653294
   ("" (skeep)
    (("" (skoletin 1)
      ((""
        (name "MaxN"
              "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                                                              ELSE ceiling(pi / step)
                                                                                                                              ENDIF)")
        (("" (replace -1)
          (("" (name "newstep" "pi/MaxN")
            (("1" (expand "kinematic_track_bands" :assert? none)
              (("1" (skoletin -3)
                (("1" (assert)
                  (("1" (replace -3)
                    (("1"
                      (expand "kinematic_track_bands_init" :assert?
                              none)
                      (("1"
                        (name "Lfun"
                              "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                        (("1" (replaces -1)
                          (("1"
                            (name "Rfun"
                                  "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                            (("1" (replaces -1)
                              (("1"
                                (case "NOT MaxN>=1")
                                (("1"
                                  (hide -2)
                                  (("1"
                                    (replaces -1 1 :dir rl)
                                    (("1"
                                      (lift-if)
                                      (("1"
                                        (case "NOT pi/step>=1")
                                        (("1" (cross-mult 1) nil nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case
                                   "NOT (newstep > 0 AND pi/newstep = MaxN)")
                                  (("1"
                                    (expand "newstep" 1)
                                    (("1"
                                      (hide -3)
                                      (("1" (cross-mult 1) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (name
                                       "LIB"
                                       "kinematic_bands(LOS, CD, B, T, so, vo, Lfun, MaxN, newstep, AL,
                                                                                                                                                                                                                       most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                      (("1"
                                        (name
                                         "RIB"
                                         "kinematic_bands(LOS, CD, B, T, so, vo, Rfun, MaxN, newstep, AL,
                                                                                                                                                                                                                                                       most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                        (("1"
                                          (name
                                           "RealLB"
                                           "scal(-newstep, LIB)")
                                          (("1"
                                            (name
                                             "RealRB"
                                             "scal(newstep, RIB)")
                                            (("1"
                                              (name
                                               "UnAdjB"
                                               " IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                                                           length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                                                            nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`lb = 0
                                                                                                                                                                                                                                                                         THEN append(append(remove_last(RealLB),
                                                                                                                                                                                                                                                                                            (: (# lb
                                                                                                                                                                                                                                                                                                  := nth
                                                                                                                                                                                                                                                                                                     (RealLB, length(RealLB) - 1)`lb,
                                                                                                                                                                                                                                                                                                  ub := nth(RealRB, 0)`ub #) :)),
                                                                                                                                                                                                                                                                                     cdr(RealRB))
                                                                                                                                                                                                                                                                       ELSE append(RealLB, RealRB)
                                                                                                                                                                                                                                                                       ENDIF")
                                              (("1"
                                                (name
                                                 "UnModB"
                                                 "add(track(vo), UnAdjB)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -13)
                                                    (("1"
                                                      (replace -12)
                                                      (("1"
                                                        (replace -10)
                                                        (("1"
                                                          (replace -6)
                                                          (("1"
                                                            (replace
                                                             -5)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -3)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (case
                                                                       "NOT length(RealLB) = length(LIB)")
                                                                      (("1"
                                                                        (expand
                                                                         "RealLB"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "scal"
                                                                           1)
                                                                          (("1"
                                                                            (rewrite
                                                                             "length_reverse")
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_length")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "NOT length(RealRB)=length(RIB)")
                                                                        (("1"
                                                                          (expand
                                                                           "RealRB"
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "scal"
                                                                             1)
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_length")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "NOT increasing_int?(RIB)")
                                                                          (("1"
                                                                            (lemma
                                                                             "kinematic_bands_increasing")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Rfun"
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "NOT increasing_int?(LIB)")
                                                                            (("1"
                                                                              (hide
                                                                               -8)
                                                                              (("1"
                                                                                (lemma
                                                                                 "kinematic_bands_increasing")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Lfun"
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "NOT increasing_real?(RealRB)")
                                                                              (("1"
                                                                                (expand
                                                                                 "RealRB"
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "increasing_real?"
                                                                                   1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "scal"
                                                                                       1)
                                                                                      (("1"
                                                                                        (split
                                                                                         +)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scal"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "increasing_int?"
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (mult-by
                                                                                                       -2
                                                                                                       "newstep")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "map_nth_rw")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "scal"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "increasing_int?"
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "i"
                                                                                                       "j")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (mult-by
                                                                                                           -4
                                                                                                           "newstep")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "NOT increasing_real?(RealLB)")
                                                                                (("1"
                                                                                  (hide
                                                                                   2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "increasing_real?"
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "RealLB"
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "scal"
                                                                                         1)
                                                                                        (("1"
                                                                                          (split
                                                                                           +)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "reverse_def")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_nth_rw")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "scal"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "increasing_int?"
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -2
                                                                                                               "newstep")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "reverse_def"
                                                                                               1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "reverse_def"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "map_nth_rw")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "map_nth_rw")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "scal"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "increasing_int?"
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "length(LIB)-1-j"
                                                                                                               "length(LIB)-1-i")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "newstep")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "length_remove_last")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "LIB")
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "RIB")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "proper?")
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT (FORALL (i: below(length(RealRB))):
                                                                                                                                                                                                                                                                                                                                                  0 <= nth(RealRB, i)`lb AND
                                                                                                                                                                                                                                                                                                                                                   nth(RealRB, i)`lb <= nth(RealRB, i)`ub AND nth(RealRB, i)`ub <= pi)")
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "RealRB"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "scal"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "map_nth_rw")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -3
                                                                                                               "newstep")
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -3
                                                                                                                 "newstep")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -3
                                                                                                                   "newstep")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "NOT (FORALL (i: below(length(RealLB))):
                                                                                                                                                                                                                                                                                                                                                                      0 >= nth(RealLB, i)`ub AND
                                                                                                                                                                                                                                                                                                                                                                       nth(RealLB, i)`lb <= nth(RealLB, i)`ub AND nth(RealLB, i)`lb >=-pi)")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   (-1
                                                                                                    -2))
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "length(LIB)-1-i")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "RealLB"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "reverse_def"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "map_length")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "map_nth_rw")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "scal")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (mult-by
                                                                                                                         -3
                                                                                                                         "newstep")
                                                                                                                        (("1"
                                                                                                                          (mult-by
                                                                                                                           -3
                                                                                                                           "newstep")
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -3
                                                                                                                             "newstep")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (rewrite
                                                                                                                 "map_length")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "NOT length(UnAdjB) = (IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                                                                                          length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                                                                                           nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`lb = 0
                                                                                                                                                                                                                                                                                                        THEN length(RealLB)+length(RealRB)-1
                                                                                                                                                                                                                                                                                                      ELSE length(RealLB)+length(RealRB)
                                                                                                                                                                                                                                                                                                      ENDIF)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "UnAdjB"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "length_append"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "length_append"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -9)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "length"
                                                                                                                       1
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               +)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "length(RealRB)>0")
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    -2))
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "length_append"
                                                                                                             2)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (label
                                                                                                     "lu"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (copy
                                                                                                         -22)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "band_mod_2pi_rec(kb)")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -2
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "track_band?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -3
                                                                                                                   "track(vo) + j * (dir * newstep)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -26)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -17
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "EXISTS (j_1: below(length(kb))):
                                                                                                                                                                                                                    in?(nth(UnAdjB, j_1), j * (dir * newstep))")
                                                                                                                              (("1"
                                                                                                                                (skosimp
                                                                                                                                 -)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   +
                                                                                                                                   "j!1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "add"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "map_nth_rw")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "add"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "in?")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "(dir = 1 AND EXISTS (jj: below(length(RealRB))): in?(nth(RealRB,jj),j*newstep)) OR (dir=-1 AND EXISTS (jj: below(length(RealLB))): in?(nth(RealLB,jj),-j*newstep))")
                                                                                                                                  (("1"
                                                                                                                                    (copy
                                                                                                                                     -19)
                                                                                                                                    (("1"
                                                                                                                                      (replaces
                                                                                                                                       -1
                                                                                                                                       1
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (skeep
                                                                                                                                             -)
                                                                                                                                            (("1"
                                                                                                                                              (copy
                                                                                                                                               -20)
                                                                                                                                              (("1"
                                                                                                                                                (lift-if
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -)
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "length(RealLB)-1+jj")
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "nth_append")
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "length_append")
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "nth_append")
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lift-if
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       +)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT jj = 0")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 1
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "in?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "nth(RealLB, length(RealLB) - 1)`lb <=0")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -
                                                                                                                                                                                         "j"
                                                                                                                                                                                         "newstep")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "RealLB"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "scal"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "length_reverse")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                 "map_length")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                   "reverse_def")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "map_length")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "map_nth_rw")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "scal"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (mult-by
                                                                                                                                                                                                               -5
                                                                                                                                                                                                               "newstep")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (copy
                                                                                                                                                                                                                 -19)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -
                                                                                                                                                                                                                   "0")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                                       -2
                                                                                                                                                                                                                       "newstep")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "map_length"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -6)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 -7)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "nth"
                                                                                                                                                                     -7)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2)
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "length_append")
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "jj")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "length"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "length(RealLB)+jj")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "nth_append"
                                                                                                                                                               2)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -29
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "add"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "map_length")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     "lu"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       2)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "Lfun")
                                                                                                                                                (("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (copy
                                                                                                                                                       -20)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (split
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "nth_append"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (rewrite
                                                                                                                                                                       "length_append")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "length_remove_last")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "nth_append"
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "length_remove_last")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if
                                                                                                                                                                                   +)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (split
                                                                                                                                                                                     +)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "remove_last_def")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "NOT jj = length(RealLB)-1")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "jj")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 (-1
                                                                                                                                                                                                  1
                                                                                                                                                                                                  2))
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (case
                                                                                                                                                                                                   "FORALL (z:nat): jj<z IMPLIES (jj<z-1 OR jj=z-1)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "length(RealLB)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "nth"
                                                                                                                                                                                                 2
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "nth(RealRB,0)`ub>=0")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "in?")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "j"
                                                                                                                                                                                                             "newstep")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       3)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "RealRB"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "scal"
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                               "map_nth_rw")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (case
                                                                                                                                                                                                                     "NOT increasing_int?(RIB)")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "increasing_int?"
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           -
                                                                                                                                                                                                                           "0")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (mult-by
                                                                                                                                                                                                                             -1
                                                                                                                                                                                                                             "newstep")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "length_append"
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "length_remove_last")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "nth_append"
                                                                                                                                                                     +)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -29)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "add"
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "map_length")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "kinematic_bands_def")
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "dir = 1")
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "Rfun")
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -1
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -23)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (split
                                                                                                                                                             -)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "bands_sound?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "j")
                                                                                                                                                                (("1"
                                                                                                                                                                  (copy
                                                                                                                                                                   -32)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (skeep
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "i")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "RealRB"
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "scal"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "map_nth_rw")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "scal"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                       (-2
                                                                                                                                                                                        1))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "in?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (mult-by
                                                                                                                                                                                             -1
                                                                                                                                                                                             "newstep")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (mult-by
                                                                                                                                                                                               -2
                                                                                                                                                                                               "newstep")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "Rfun"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (typepred
                                                                                                                                             "dir")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (hide
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (hide
                                                                                                                                                       -23)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "Lfun")
                                                                                                                                                        (("2"
                                                                                                                                                          (replaces
                                                                                                                                                           -1
                                                                                                                                                           :dir
                                                                                                                                                           rl)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -23)
                                                                                                                                                                (("2"
                                                                                                                                                                  (split
                                                                                                                                                                   -)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "bands_sound?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "j")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -31)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skeep
                                                                                                                                                                             -)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "length(LIB)-1-i")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "RealLB"
                                                                                                                                                                                 +)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "scal"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "reverse_def")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "map_length")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (rewrite
                                                                                                                                                                                           "map_nth_rw")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "scal"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "in?"
                                                                                                                                                                                               (-1
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "newstep")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (mult-by
                                                                                                                                                                                                     -2
                                                                                                                                                                                                     "newstep")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "map_length")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "Lfun"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (case
                                                   "length(RealRB)>0")
                                                  (("1"
                                                    (hide-all-but
                                                     (-1 1))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (flatten)
                                                (("3"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("4"
                                                (flatten)
                                                (("4"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("5"
                                                (flatten)
                                                (("5"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("6"
                                                (flatten)
                                                (("6"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil)
                                         ("3"
                                          (expand "Rfun" 1)
                                          (("3" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil)
                                       ("3" (assert) nil nil)
                                       ("4"
                                        (expand "Lfun" 1)
                                        (("4" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (Sign type-eq-decl nil sign reals)
    (zero const-decl "Vector" vectors_2D vectors)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (kinematic_bands const-decl "(proper?(MaxN))" kinematic_bands nil)
    (listn type-eq-decl nil listn structures)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (kinematic_bands_increasing formula-decl nil kinematic_bands nil)
    (length_singleton formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures)
    (kinematic_bands_def formula-decl nil kinematic_bands nil)
    (max_0_nnreal formula-decl nil min_max reals)
    (reverse_def formula-decl nil more_list_props structures))
   nil)
  (kinematic_track_bands_def-2 nil 3632502352
   ("" (skeep)
    (("" (skoletin 1)
      ((""
        (name "MaxN"
              "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                                                ELSE ceiling(pi / step)
                                                                                                                ENDIF)")
        (("" (replace -1)
          (("" (name "newstep" "pi/MaxN")
            (("1" (expand "kinematic_track_bands" :assert? none)
              (("1" (skoletin -3)
                (("1" (assert)
                  (("1" (replace -3)
                    (("1"
                      (expand "kinematic_track_bands_init" :assert?
                              none)
                      (("1"
                        (name "Lfun"
                              "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                        (("1" (replaces -1)
                          (("1"
                            (name "Rfun"
                                  "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                            (("1" (replaces -1)
                              (("1"
                                (case "NOT MaxN>=1")
                                (("1"
                                  (hide -2)
                                  (("1"
                                    (replaces -1 1 :dir rl)
                                    (("1"
                                      (lift-if)
                                      (("1"
                                        (case "NOT pi/step>=1")
                                        (("1" (cross-mult 1) nil nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case
                                   "NOT (newstep > 0 AND pi/newstep = MaxN)")
                                  (("1"
                                    (expand "newstep" 1)
                                    (("1"
                                      (hide -3)
                                      (("1" (cross-mult 1) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (name
                                       "LIB"
                                       "kinematic_bands(LOS, CD, B, T, so, vo, Lfun, MaxN, newstep, AL,
                                                                                                                                                                                             most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                      (("1"
                                        (name
                                         "RIB"
                                         "kinematic_bands(LOS, CD, B, T, so, vo, Rfun, MaxN, newstep, AL,
                                                                                                                                                                                                                         most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                        (("1"
                                          (name
                                           "RealLB"
                                           "scal(-newstep, LIB)")
                                          (("1"
                                            (name
                                             "RealRB"
                                             "scal(newstep, RIB)")
                                            (("1"
                                              (name
                                               "UnAdjB"
                                               " IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                         length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                          nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`ub = 0
                                                                                                                                                                                                                                       THEN append(append(remove_last(RealLB),
                                                                                                                                                                                                                                                          (: (# lb
                                                                                                                                                                                                                                                                := nth
                                                                                                                                                                                                                                                                   (RealLB, length(RealLB) - 1)`lb,
                                                                                                                                                                                                                                                                ub := nth(RealRB, 0)`ub #) :)),
                                                                                                                                                                                                                                                   cdr(RealRB))
                                                                                                                                                                                                                                     ELSE append(RealLB, RealRB)
                                                                                                                                                                                                                                     ENDIF")
                                              (("1"
                                                (name
                                                 "UnModB"
                                                 "add(track(vo), UnAdjB)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -13)
                                                    (("1"
                                                      (replace -12)
                                                      (("1"
                                                        (replace -10)
                                                        (("1"
                                                          (replace -6)
                                                          (("1"
                                                            (replace
                                                             -5)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -3)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (case
                                                                       "NOT length(RealLB) = length(LIB)")
                                                                      (("1"
                                                                        (expand
                                                                         "RealLB"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "scal"
                                                                           1)
                                                                          (("1"
                                                                            (rewrite
                                                                             "length_reverse")
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_length")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "NOT length(RealRB)=length(RIB)")
                                                                        (("1"
                                                                          (expand
                                                                           "RealRB"
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "scal"
                                                                             1)
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_length")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "NOT increasing_int?(RIB)")
                                                                          (("1"
                                                                            (lemma
                                                                             "kinematic_bands_increasing")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Rfun"
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "NOT increasing_int?(LIB)")
                                                                            (("1"
                                                                              (hide
                                                                               -8)
                                                                              (("1"
                                                                                (lemma
                                                                                 "kinematic_bands_increasing")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Lfun"
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "NOT increasing_real?(RealRB)")
                                                                              (("1"
                                                                                (expand
                                                                                 "RealRB"
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "increasing_real?"
                                                                                   1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "scal"
                                                                                       1)
                                                                                      (("1"
                                                                                        (split
                                                                                         +)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scal"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "increasing_int?"
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (mult-by
                                                                                                       -2
                                                                                                       "newstep")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "map_nth_rw")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "scal"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "increasing_int?"
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "i"
                                                                                                       "j")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (mult-by
                                                                                                           -4
                                                                                                           "newstep")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "NOT increasing_real?(RealLB)")
                                                                                (("1"
                                                                                  (hide
                                                                                   2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "increasing_real?"
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "RealLB"
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "scal"
                                                                                         1)
                                                                                        (("1"
                                                                                          (split
                                                                                           +)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "reverse_def")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_nth_rw")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "scal"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "increasing_int?"
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -2
                                                                                                               "newstep")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "reverse_def"
                                                                                               1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "reverse_def"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "map_nth_rw")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "map_nth_rw")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "scal"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "increasing_int?"
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "length(LIB)-1-j"
                                                                                                               "length(LIB)-1-i")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "newstep")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "length_remove_last")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "LIB")
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "RIB")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "proper?")
                                                                                            (("2"
                                                                                              (case
                                                                                               "NOT (FORALL (i: below(length(RealRB))):
                                                                                                                                                                                                                                                                                0 <= nth(RealRB, i)`lb AND
                                                                                                                                                                                                                                                                                 nth(RealRB, i)`lb <= nth(RealRB, i)`ub AND nth(RealRB, i)`ub <= pi)")
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "RealRB"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "scal"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "map_nth_rw")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -3
                                                                                                               "newstep")
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -3
                                                                                                                 "newstep")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -3
                                                                                                                   "newstep")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "NOT (FORALL (i: below(length(RealLB))):
                                                                                                                                                                                                                                                                                                0 >= nth(RealLB, i)`ub AND
                                                                                                                                                                                                                                                                                                 nth(RealLB, i)`lb <= nth(RealLB, i)`ub AND nth(RealLB, i)`lb >=-pi)")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   (-1
                                                                                                    -2))
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "length(LIB)-1-i")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "RealLB"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "reverse_def"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "map_length")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "map_nth_rw")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "scal")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (mult-by
                                                                                                                         -3
                                                                                                                         "newstep")
                                                                                                                        (("1"
                                                                                                                          (mult-by
                                                                                                                           -3
                                                                                                                           "newstep")
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -3
                                                                                                                             "newstep")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (rewrite
                                                                                                                 "map_length")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "NOT length(UnAdjB) = (IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                          length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                           nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`ub = 0
                                                                                                                                                                                                                                        THEN length(RealLB)+length(RealRB)-1
                                                                                                                                                                                                                                      ELSE length(RealLB)+length(RealRB)
                                                                                                                                                                                                                                      ENDIF)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "UnAdjB"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "length_append"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "length_append"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -9)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "length"
                                                                                                                       1
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               +)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "length(RealRB)>0")
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    -2))
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "length_append"
                                                                                                             2)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (label
                                                                                                     "lu"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (copy
                                                                                                         -22)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "band_mod_2pi_rec(kb)")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -2
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "track_band?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -3
                                                                                                                   "track(vo) + j * (dir * newstep)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -26)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -17
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "EXISTS (j_1: below(length(kb))):
                                                                                                                                                in?(nth(UnAdjB, j_1), j * (dir * newstep))")
                                                                                                                              (("1"
                                                                                                                                (skosimp
                                                                                                                                 -)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   +
                                                                                                                                   "j!1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "add"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "map_nth_rw")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "add"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "in?")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "(dir = 1 AND EXISTS (jj: below(length(RealRB))): in?(nth(RealRB,jj),j*newstep)) OR (dir=-1 AND EXISTS (jj: below(length(RealLB))): in?(nth(RealLB,jj),-j*newstep))")
                                                                                                                                  (("1"
                                                                                                                                    (copy
                                                                                                                                     -19)
                                                                                                                                    (("1"
                                                                                                                                      (replaces
                                                                                                                                       -1
                                                                                                                                       1
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (skeep
                                                                                                                                             -)
                                                                                                                                            (("1"
                                                                                                                                              (copy
                                                                                                                                               -20)
                                                                                                                                              (("1"
                                                                                                                                                (lift-if
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -)
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "length(RealLB)-1+jj")
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "nth_append")
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "length_append")
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "nth_append")
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lift-if
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       +)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT jj = 0")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 1
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "in?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "nth(RealLB, length(RealLB) - 1)`lb <=0")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -
                                                                                                                                                                                         "j"
                                                                                                                                                                                         "newstep")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "RealLB"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "scal"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "length_reverse")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                 "map_length")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                   "reverse_def")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "map_length")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "map_nth_rw")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "scal"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (mult-by
                                                                                                                                                                                                               -5
                                                                                                                                                                                                               "newstep")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (copy
                                                                                                                                                                                                                 -19)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -
                                                                                                                                                                                                                   "0")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                                       -2
                                                                                                                                                                                                                       "newstep")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "map_length"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -6)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "nth"
                                                                                                                                                                                 -7)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "nth"
                                                                                                                                                                     -7)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2)
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "length_append")
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "length_remove_last")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "jj")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "length"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "length(RealLB)+jj")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "nth_append"
                                                                                                                                                               2)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -29
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "add"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "map_length")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     "lu"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       2)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "Lfun")
                                                                                                                                                (("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -1
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (copy
                                                                                                                                                       -20)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (split
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "nth_append"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (rewrite
                                                                                                                                                                       "length_append")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "length_remove_last")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "nth_append"
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "length_remove_last")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if
                                                                                                                                                                                   +)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (split
                                                                                                                                                                                     +)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "remove_last_def")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "NOT jj = length(RealLB)-1")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "jj")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 (-1
                                                                                                                                                                                                  1
                                                                                                                                                                                                  2))
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (case
                                                                                                                                                                                                   "FORALL (z:nat): jj<z IMPLIES (jj<z-1 OR jj=z-1)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "length(RealLB)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "nth"
                                                                                                                                                                                                 2
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "nth(RealRB,0)`ub>=0")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "in?")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "j"
                                                                                                                                                                                                             "newstep")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       3)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "RealRB"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "scal"
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                               "map_nth_rw")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "length_append"
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "length_remove_last")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "jj")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "nth_append"
                                                                                                                                                                     +)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -29)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "add"
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "map_length")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "kinematic_bands_def")
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "dir = 1")
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "Rfun")
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -1
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -23)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (split
                                                                                                                                                             -)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "bands_sound?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "j")
                                                                                                                                                                (("1"
                                                                                                                                                                  (copy
                                                                                                                                                                   -32)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (skeep
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "i")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "RealRB"
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "scal"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "map_nth_rw")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "scal"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                       (-2
                                                                                                                                                                                        1))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "in?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (mult-by
                                                                                                                                                                                             -1
                                                                                                                                                                                             "newstep")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (mult-by
                                                                                                                                                                                               -2
                                                                                                                                                                                               "newstep")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "Rfun"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (typepred
                                                                                                                                             "dir")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (hide
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (hide
                                                                                                                                                       -23)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "Lfun")
                                                                                                                                                        (("2"
                                                                                                                                                          (replaces
                                                                                                                                                           -1
                                                                                                                                                           :dir
                                                                                                                                                           rl)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -23)
                                                                                                                                                                (("2"
                                                                                                                                                                  (split
                                                                                                                                                                   -)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "bands_sound?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "j")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -31)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skeep
                                                                                                                                                                             -)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "length(LIB)-1-i")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "RealLB"
                                                                                                                                                                                 +)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "scal"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "reverse_def")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "map_length")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (rewrite
                                                                                                                                                                                           "map_nth_rw")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "scal"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "in?"
                                                                                                                                                                                               (-1
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "newstep")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (mult-by
                                                                                                                                                                                                     -2
                                                                                                                                                                                                     "newstep")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "map_length")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "Lfun"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (case
                                                   "length(RealRB)>0")
                                                  (("1"
                                                    (hide-all-but
                                                     (-1 1))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (flatten)
                                                (("3"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("4"
                                                (flatten)
                                                (("4"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("5"
                                                (flatten)
                                                (("5"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("6"
                                                (flatten)
                                                (("6"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil)
                                         ("3"
                                          (expand "Rfun" 1)
                                          (("3" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil)
                                       ("3" (assert) nil nil)
                                       ("4"
                                        (expand "Lfun" 1)
                                        (("4" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (Sign type-eq-decl nil sign reals)
    (zero const-decl "Vector" vectors_2D vectors)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (kinematic_bands const-decl "(proper?(MaxN))" kinematic_bands nil)
    (listn type-eq-decl nil listn structures)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (kinematic_bands_increasing formula-decl nil kinematic_bands nil)
    (length_singleton formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures)
    (kinematic_bands_def formula-decl nil kinematic_bands nil)
    (max_0_nnreal formula-decl nil min_max reals)
    (reverse_def formula-decl nil more_list_props structures))
   nil)
  (kinematic_track_bands_def-1 nil 3632501459
   ("" (skeep)
    (("" (skoletin 1)
      ((""
        (name "MaxN"
              "(IF round(pi / step) = pi / step THEN round(pi / step)
             ELSE ceiling(pi / step)
             ENDIF)")
        (("" (replace -1)
          (("" (assert)
            (("" (skeep)
              (("" (split +)
                (("1" (postpone) nil nil) ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (kinematic_track_bands_increasing 0
  (kinematic_track_bands_increasing-2 nil 3632655590
   ("" (skeep)
    (("" (skoletin 1)
      (("" (expand "kinematic_track_bands" :assert? none)
        (("" (skoletin -)
          (("" (assert)
            (("" (expand "kinematic_track_bands_init" :assert? none)
              (("" (skoletin -2)
                (("" (skoletin -)
                  (("" (skoletin -)
                    (("" (skoletin -)
                      (("" (skoletin -)
                        (("" (skoletin -)
                          (("" (case "strictly_increasing_real?(kb)")
                            (("1" (replace -9 +)
                              (("1"
                                (typepred "band_mod_2pi(kb)")
                                (("1"
                                  (expand "track_band?" -1)
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2"
                                (replace -1 1)
                                (("2"
                                  (lemma
                                   "strictly_increasing_add_real")
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (hide 2)
                                        (("2"
                                          (lemma
                                           "strictly_increasing_scal")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (lemma
                                                   "kinematic_bands_combine_increasing")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         "Lfun"
                                                         1)
                                                        (("2"
                                                          (expand
                                                           "Rfun"
                                                           1)
                                                          (("2"
                                                            (replace
                                                             -15)
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Rfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (Lfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (kinematic_bands_combine_increasing formula-decl nil combine_bands
     nil)
    (strictly_increasing_scal formula-decl nil real_bands nil)
    (strictly_increasing_add_real formula-decl nil real_bands nil)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (nnreal_lt_2pi nonempty-type-eq-decl nil trig_types trig)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (IntBand type-eq-decl nil int_bands nil)
    (Traj type-eq-decl nil int_bands nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (listn type-eq-decl nil listn structures)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (band_mod_2pi const-decl "(track_band?(RL))" mod_bands nil)
    (track_band? const-decl "bool" mod_bands nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (kinematic_track_bands_init const-decl "list[RealBand]"
     kinematic_trk_bands nil)
    (band_to_mod? const-decl "bool" mod_bands nil)
    (strictly_increasing_real? const-decl "bool" real_bands nil)
    (kinematic_track_bands const-decl "list[RealBand]"
     kinematic_trk_bands nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (RealBand type-eq-decl nil real_bands nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (detector? const-decl "bool" int_bands nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cos const-decl "real" sincos_def trig)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def trig)
    (<= const-decl "bool" reals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields
       nil))
   nil)
  (kinematic_track_bands_increasing-1 nil 3632655568
   ("" (skeep*) (("" (postpone) nil nil)) nil) nil shostak))
 (any_kinematic_track_red_TCC1 0
  (any_kinematic_track_red_TCC1-1 nil 3639907378
   ("" (skeep*)
    (("" (assert)
      (("" (replaces -2 +)
        (("" (assert)
          (("" (typepred "vo")
            (("" (rewrite "turnOmega_start")
              (("" (flatten)
                (("" (replaces -1) (("" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sqv_zero formula-decl nil vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (turnOmega_start formula-decl nil kinematics_turn aviation)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (any_kinematic_track_red subtype "kinematic_trk_bands.Lfun"
    "{trajl | combine_bands.trajl(0) = (kinematic_trk_bands.so, kinematic_trk_bands.vo)}")))
 (any_kinematic_track_red_TCC2 0
  (any_kinematic_track_red_TCC2-1 nil 3639907378
   ("" (skeep*)
    (("" (replaces -3)
      (("" (assert)
        (("" (rewrite "turnOmega_start")
          (("" (typepred "vo")
            (("" (flatten)
              (("" (replaces -2) (("" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (turnOmega_start formula-decl nil kinematics_turn aviation)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (any_kinematic_track_red subtype "kinematic_trk_bands.Rfun"
    "{trajr | combine_bands.trajr(0) = (kinematic_trk_bands.so, kinematic_trk_bands.vo)}")))
 (any_kinematic_track_red_def_TCC1 0
  (any_kinematic_track_red_def_TCC1-1 nil 3633968286
   ("" (skeep*)
    (("" (case "NOT vect2(vo)=zero")
      (("1" (propax) nil nil)
       ("2" (replaces -1) (("2" (assert) nil nil)) nil))
      nil))
    nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (any_kinematic_track_red_def subtype "kinematic_trk_bands.vo"
    "nzhVect3")))
 (any_kinematic_track_red_def_TCC2 0
  (any_kinematic_track_red_def_TCC2-1 nil 3633968286
   ("" (skeep*)
    (("" (case "NOT vect2(vo)=zero")
      (("1" (propax) nil nil)
       ("2" (replaces -1) (("2" (assert) nil nil)) nil))
      nil))
    nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (any_kinematic_track_red_def subtype "kinematic_trk_bands.vo"
    "nzhVect3")))
 (any_kinematic_track_red_def 0
  (any_kinematic_track_red_def-1 nil 3633968537
   ("" (skeep *)
    (("" (skoletin 1)
      (("" (skoletin 1)
        (("" (expand "any_kinematic_track_red" :assert? none)
          (("" (skoletin -)
            (("" (skoletin -)
              (("" (skoletin -)
                (("" (skoletin -)
                  ((""
                    (expand "kinematic_track_bands_init" :assert? none)
                    (("" (replace -5 :dir rl)
                      (("" (replace -4 :dir rl)
                        (("" (replace -3 :dir rl)
                          ((""
                            (name "TrackInt"
                                  "kinematic_bands_combine(LOS,
                                     CD,
                                     LOS2,
                                     CD2,
                                     UseLOS2,
                                     B,
                                     T,
                                     B2,
                                     T2,
                                     so,
                                     vo,
                                     Lfun,
                                     Rfun,
                                     MaxNL,
                                     MaxNR,
                                     timestep,
                                     timestep,
                                     AL,
                                     most_urgent,
                                     epsH,
                                     epsV,
                                     UseHCrit,
                                     UseVCrit)")
                            (("" (assert)
                              ((""
                                (replace -1)
                                ((""
                                  (lemma "any_red_def")
                                  ((""
                                    (inst?)
                                    ((""
                                      (assert)
                                      ((""
                                        (replace -2)
                                        ((""
                                          (replace -4 :dir rl)
                                          ((""
                                            (split -1)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (split +)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide (-4 -5))
                                                      (("1"
                                                        (replaces
                                                         -5
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replaces
                                                           -3
                                                           +)
                                                          (("1"
                                                            (split +)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -9
                                                                     1)
                                                                    (("1"
                                                                      (lemma
                                                                       "add_realband_def")
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "i!1")
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "scal_intband_def2")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       -1
                                                                                       -2)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "in?"
                                                                                           (-1
                                                                                            1))
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scalrb")
                                                                                              (("1"
                                                                                                (split
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (div-by
                                                                                                   -1
                                                                                                   "step")
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (div-by
                                                                                                   -2
                                                                                                   "step")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "i")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "j")
                                                                          (("2"
                                                                            (replace
                                                                             -9
                                                                             +)
                                                                            (("2"
                                                                              (lemma
                                                                               "add_realband_def")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "scal_intband_def2"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "in?"
                                                                                         (-1
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "scalrb")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (mult-by
                                                                                               -1
                                                                                               "step")
                                                                                              (("2"
                                                                                                (mult-by
                                                                                                 -2
                                                                                                 "step")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (hide (-3 -5))
                                                      (("2"
                                                        (replaces
                                                         -5
                                                         :dir
                                                         rl)
                                                        (("2"
                                                          (replaces
                                                           -3
                                                           +)
                                                          (("2"
                                                            (split +)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -9
                                                                     1)
                                                                    (("1"
                                                                      (lemma
                                                                       "add_realband_def")
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "i!1")
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "scal_intband_def2")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       -1
                                                                                       -2)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "in?"
                                                                                           (-1
                                                                                            1))
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scalrb")
                                                                                              (("1"
                                                                                                (split
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (div-by
                                                                                                   -1
                                                                                                   "step")
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (div-by
                                                                                                   -2
                                                                                                   "step")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "i")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "j")
                                                                          (("2"
                                                                            (replace
                                                                             -9
                                                                             +)
                                                                            (("2"
                                                                              (lemma
                                                                               "add_realband_def")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "scal_intband_def2"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "in?"
                                                                                         (-1
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "scalrb")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (mult-by
                                                                                               -1
                                                                                               "step")
                                                                                              (("2"
                                                                                                (mult-by
                                                                                                 -2
                                                                                                 "step")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (flatten)
                                                  (("3"
                                                    (assert)
                                                    (("3"
                                                      (hide (-1 -2))
                                                      (("3"
                                                        (replaces
                                                         -3
                                                         :dir
                                                         rl)
                                                        (("3"
                                                          (replaces -1)
                                                          (("3"
                                                            (split +)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (split
                                                                 -)
                                                                (("1"
                                                                  (hide
                                                                   1)
                                                                  (("1"
                                                                    (skosimp*)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -7
                                                                         1)
                                                                        (("1"
                                                                          (lemma
                                                                           "add_realband_def")
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "i!1")
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "j")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "scal_intband_def2")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           -1
                                                                                           -2)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "in?"
                                                                                               (-1
                                                                                                1))
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "scalrb")
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (div-by
                                                                                                       -1
                                                                                                       "step")
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (div-by
                                                                                                       -2
                                                                                                       "step")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "i")
                                                                      (("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "j")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (replace
                                                                                   -7
                                                                                   -1)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "add_realband_def")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "scal_intband_def2")
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             -1
                                                                                             -2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "in?"
                                                                                                 (-1
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "scalrb")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (div-by
                                                                                                         -1
                                                                                                         "step")
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (div-by
                                                                                                         -2
                                                                                                         "step")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (split
                                                                   -)
                                                                  (("1"
                                                                    (hide
                                                                     1)
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "i")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "j")
                                                                              (("1"
                                                                                (replace
                                                                                 -7
                                                                                 +)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "add_realband_def")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (hide
                                                                                         2)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "scal_intband_def2"
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "in?"
                                                                                             (-1
                                                                                              1))
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scalrb")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (mult-by
                                                                                                   -1
                                                                                                   "step")
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -2
                                                                                                     "step")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (inst
                                                                         +
                                                                         "i")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "j")
                                                                              (("2"
                                                                                (replace
                                                                                 -7
                                                                                 +)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "add_realband_def")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "scal_intband_def2"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "in?"
                                                                                             (-1
                                                                                              1))
                                                                                            (("2"
                                                                                              (expand
                                                                                               "scalrb")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (mult-by
                                                                                                   -1
                                                                                                   "step")
                                                                                                  (("2"
                                                                                                    (mult-by
                                                                                                     -2
                                                                                                     "step")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (expand "Lfun" 1)
                                                (("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand "Rfun" 1)
                                              (("3" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Rfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (Lfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (both_sides_div_pos_le1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (scal_intband_def2 formula-decl nil real_bands nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (listn type-eq-decl nil listn structures)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (add_realband_def formula-decl nil real_bands nil)
    (any_red_def formula-decl nil combine_bands nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (IntBand type-eq-decl nil int_bands nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (any_red const-decl "bool" combine_bands nil)
    (Traj type-eq-decl nil int_bands nil)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (nnreal_lt_2pi nonempty-type-eq-decl nil trig_types trig)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (in? const-decl "bool" real_bands nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (below type-eq-decl nil naturalnumbers nil)
    (subrange type-eq-decl nil integers nil)
    (any_kinematic_track_red const-decl "bool" kinematic_trk_bands nil)
    (detector? const-decl "bool" int_bands nil)
    (kinematic_track_bands_init const-decl "list[RealBand]"
     kinematic_trk_bands nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (RealBand type-eq-decl nil real_bands nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cos const-decl "real" sincos_def trig)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def trig)
    (<= const-decl "bool" reals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields
       nil))
   shostak))
 (all_kinematic_track_red_def_TCC1 0
  (all_kinematic_track_red_def_TCC1-1 nil 3634295003
   ("" (skeep*) (("" (ground) nil nil)) nil)
   ((posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (all_kinematic_track_red_def subtype "0"
    "below[length[RealBand](ktb)]")))
 (all_kinematic_track_red_def_TCC2 0
  (all_kinematic_track_red_def_TCC2-1 nil 3634295003
   ("" (skeep*) (("" (replaces -15) (("" (assert) nil nil)) nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (all_kinematic_track_red_def subtype "kinematic_trk_bands.vo"
    "nzhVect3")))
 (all_kinematic_track_red_def_TCC3 0
  (all_kinematic_track_red_def_TCC3-2 "" 3813484864
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (all_kinematic_track_red_def subtype
    "(number_fields.-)(list_props[RealBand].length(kinematic_trk_bands.ktb), 1)"
    "below[length[RealBand](ktb)]"))
  (all_kinematic_track_red_def_TCC3-1 nil 3634296187
   ("" (skeep*) (("" (replace -14) (("" (assert) nil nil)) nil)) nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (all_kinematic_track_red_def subtype
    "(number_fields.-)(list_props[RealBand].length(kinematic_trk_bands.ktb), 1)"
    "below[length[RealBand](ktb)]")))
 (all_kinematic_track_red_def 0
  (all_kinematic_track_red_def-1 nil 3634295354
   ("" (skeep*)
    (("" (skoletin 1)
      (("" (skoletin 1)
        (("" (skoletin 1)
          (("" (skoletin 1)
            (("" (skoletin 1)
              (("" (copy -4)
                (("" (hide -5)
                  ((""
                    (expand "all_kinematic_track_red" -1 :assert? none)
                    (("" (replace -4 :dir rl)
                      ((""
                        (name "Lfun"
                              "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                        ((""
                          (name "Rfun"
                                "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                          (("" (assert)
                            (("" (replace -1)
                              ((""
                                (replace -2)
                                ((""
                                  (copy -7)
                                  ((""
                                    (hide -8)
                                    ((""
                                      (expand
                                       "kinematic_track_bands_init"
                                       -1
                                       :assert?
                                       none)
                                      ((""
                                        (replace -7 :dir rl)
                                        ((""
                                          (replace -2)
                                          ((""
                                            (replace -3)
                                            ((""
                                              (name
                                               "TrackInt"
                                               "kinematic_bands_combine(LOS,
                                     CD,
                                     LOS2,
                                     CD2,
                                     UseLOS2,
                                     B,
                                     T,
                                     B2,
                                     T2,
                                     so,
                                     vo,
                                     Lfun,
                                     Rfun,
                                     MaxNL,
                                     MaxNR,
                                     timestep,
                                     timestep,
                                     AL,
                                     most_urgent,
                                     epsH,
                                     epsV,
                                     UseHCrit,
                                     UseVCrit)")
                                              ((""
                                                (name
                                                 "UnAdjB"
                                                 "scal(step, TrackInt)")
                                                ((""
                                                  (name
                                                   "UnModB"
                                                   "add(track(vo), UnAdjB)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (replace -3)
                                                      (("1"
                                                        (lemma
                                                         "all_red_def")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (replace
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -8
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (split
                                                                       +)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replaces
                                                                             -3)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -7
                                                                                           +)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "add"
                                                                                             +)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "map_nth_rw")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "scal"
                                                                                                 2)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_nth_rw")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "addrb"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "scalrb"
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (mult-by
                                                                                                         -1
                                                                                                         "step")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (copy
                                                                                       -12)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -9
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "add"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "scal"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "map_nth_rw")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "addrb"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "scalrb"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (mult-by
                                                                                                       1
                                                                                                       "step")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (replace
                                                                               -3
                                                                               1)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (split
                                                                                   +)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -10)
                                                                                          (("1"
                                                                                            (typepred
                                                                                             "add(track(vo), scal(step, TrackInt))")
                                                                                            (("1"
                                                                                              (replaces
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "scal(step, TrackInt)")
                                                                                                  (("1"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (copy
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "add"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "map_nth_rw")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "scal"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "map_nth_rw")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "addrb"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "scalrb"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (mult-by
                                                                                                                       -1
                                                                                                                       "step")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (copy
                                                                                         -14)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -11
                                                                                           -1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "add"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "map_nth_rw")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "scal"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_nth_rw")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "addrb"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "scalrb")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "map_length")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "map_length")
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               1
                                                                                                               "step")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (rewrite
                                                                                                     "map_length"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "map_length"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (rewrite
                                                                                                 "map_length"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (flatten)
                                                                        (("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (hide
                                                                             (-1
                                                                              -2))
                                                                            (("3"
                                                                              (replaces
                                                                               -1
                                                                               +)
                                                                              (("3"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -5
                                                                                               +)
                                                                                              (("1"
                                                                                                (copy
                                                                                                 3)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "add"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "map_nth_rw")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "scal"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "map_nth_rw")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "addrb"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scalrb"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -1
                                                                                                                 "step")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (case
                                                                                             "NOT length(ktb) = length(TrackInt)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replaces
                                                                                               -1)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -6
                                                                                                   +)
                                                                                                  (("2"
                                                                                                    (copy
                                                                                                     3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "add"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "map_nth_rw")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "scal"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "map_nth_rw")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "addrb"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "scalrb"
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (mult-by
                                                                                                                   -2
                                                                                                                   "step")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (copy
                                                                                           -12)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -8
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "add"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "map_nth_rw")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "scal"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "map_nth_rw")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "addrb"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "scalrb"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (mult-by
                                                                                                           1
                                                                                                           "step")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (case
                                                                                           "NOT length(ktb) = length(TrackInt)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (copy
                                                                                               -11)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -8
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "add"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "map_nth_rw")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "scal"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "map_nth_rw")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "addrb"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "scalrb"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (mult-by
                                                                                                               1
                                                                                                               "step")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (expand
                                                                       "Lfun"
                                                                       1)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (hide
                                                                     2)
                                                                    (("3"
                                                                      (expand
                                                                       "Rfun"
                                                                       1)
                                                                      (("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide (-3 2))
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sqv_zero formula-decl nil vectors_2D vectors)
    (Rfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (Lfun skolem-const-decl "[nnreal -> [Vect3, Vect3]]"
     kinematic_trk_bands nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (map_length formula-decl nil more_map_props nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (map_nth_rw formula-decl nil more_map_props nil)
    (addrb const-decl "RealBand" real_bands nil)
    (below type-eq-decl nil naturalnumbers nil)
    (all_red_def formula-decl nil combine_bands nil)
    (add const-decl "listn[RealBand](length[RealBand](RL))" real_bands
     nil)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (listn type-eq-decl nil listn structures)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (kinematic_bands_combine const-decl "list[IntBand]" combine_bands
     nil)
    (Traj type-eq-decl nil int_bands nil)
    (IntBand type-eq-decl nil int_bands nil)
    (turnOmega const-decl "[Vect3, Vect3]" kinematics_turn aviation)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def trig)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (track const-decl "nnreal_lt_2pi" track_3D aviation)
    (nnreal_lt_2pi nonempty-type-eq-decl nil trig_types trig)
    (nzhVect3 nonempty-type-eq-decl nil track_3D aviation)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (all_kinematic_track_red const-decl "bool" kinematic_trk_bands nil)
    (detector? const-decl "bool" int_bands nil)
    (kinematic_track_bands_init const-decl "list[RealBand]"
     kinematic_trk_bands nil)
    (Sign type-eq-decl nil sign reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (RealBand type-eq-decl nil real_bands nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (> const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cos const-decl "real" sincos_def trig)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def trig)
    (<= const-decl "bool" reals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (kinematic_track_first_green_TCC1 0
  (kinematic_track_first_green_TCC1-2 "" 3813484868
   ("" (skeep)
    (("" (hide-all-but -5)
      (("" (typepred "vo")
        (("" (lemma "vectors_2D.sqv_eq_0")
          (("" (inst?) (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   nil shostak
   (kinematic_track_first_green subtype "kinematic_trk_bands.vo"
    "nzhVect3"))
  (kinematic_track_first_green_TCC1-1 nil 3683562970
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (hide-all-but -5)
            (("" (typepred "vo")
              (("" (lemma "vectors_2D.sqv_eq_0")
                (("" (inst?) (("" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (> const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (kinematic_track_first_green subtype "kinematic_trk_bands.vo"
    "nzhVect3"))))

