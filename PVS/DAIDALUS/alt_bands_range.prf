(alt_bands_range
 (conflict_free_traj_step_TCC1 0
  (conflict_free_traj_step_TCC1-1 nil 3644254181
   ("" (subtype-tcc) nil nil) nil nil
   (conflict_free_traj_step subtype "alt_bands_range.i" "nat")))
 (conflict_free_traj_step_TCC2 0
  (conflict_free_traj_step_TCC2-1 nil 3644254181
   ("" (subtype-tcc) nil nil) nil nil
   (conflict_free_traj_step subtype "alt_bands_range.i" "nat")))
 (conflict_free_traj_step_TCC3 0
  (conflict_free_traj_step_TCC3-1 nil 3661105070
   ("" (skeep*)
    (("" (expand "min") (("" (lift-if) (("" (ground) nil nil)) nil))
      nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (conflict_free_traj_step subtype
    "real_defs.min(alt_bands_range.T, alt_bands_range.timetrip`2)"
    "nnreal")))
 (conflict_free_traj_step_TCC4 0
  (conflict_free_traj_step_TCC4-2 nil 3813425422
   ("" (skeep*)
    (("" (expand "min") (("" (lift-if) (("" (ground) nil nil)) nil))
      nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (conflict_free_traj_step subtype
    "real_defs.min(alt_bands_range.T2, alt_bands_range.timetrip`2)"
    "nnreal"))
  (conflict_free_traj_step_TCC4-1 nil 3661105070
   ("" (skeep*) (("" (hide-all-but (-1 2)) (("" (grind) nil nil)) nil))
    nil)
   nil nil
   (conflict_free_traj_step subtype
    "real_defs.min(alt_bands_range.T2, alt_bands_range.timetrip`2)"
    "nnreal")))
 (conflict_free_traj_step_TCC5 0
  (conflict_free_traj_step_TCC5-1 nil 3661192908
   ("" (skeep*)
    (("" (mult-by 3 "timestep") (("" (assert) nil nil)) nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (integer nonempty-type-from-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (TimeTriple type-eq-decl nil alt_bands_range nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (subrange type-eq-decl nil integers nil)
    (both_sides_times_pos_ge1 formula-decl nil real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil (conflict_free_traj_step subtype "alt_bands_range.i" "nat")))
 (conflict_free_traj_step_TCC6 0
  (conflict_free_traj_step_TCC6-1 nil 3661192908
   ("" (skeep*)
    (("" (mult-by 4 "timestep") (("" (assert) nil nil)) nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (integer nonempty-type-from-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (TimeTriple type-eq-decl nil alt_bands_range nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (subrange type-eq-decl nil integers nil)
    (both_sides_times_pos_ge1 formula-decl nil real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil (conflict_free_traj_step subtype "alt_bands_range.i" "nat")))
 (inside_realband_list_TCC1 0
  (inside_realband_list_TCC1-1 nil 3710791350
   ("" (subtype-tcc) nil nil) nil nil
   (inside_realband_list subtype "alt_bands_range.L"
    "(list_adt[RealBand].cons?)")))
 (inside_realband_list_TCC2 0
  (inside_realband_list_TCC2-1 nil 3710791350
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<< adt-def-decl "(strict_well_founded?[list])" list_adt nil)
    (in? const-decl "bool" real_bands nil))
   nil
   (inside_realband_list termination
    "alt_bands_range.inside_realband_list(list_adt[RealBand].cdr(alt_bands_range.L), alt_bands_range.v0z)"
    "nil")))
 (conflict_free_alt_TCC1 0
  (conflict_free_alt_TCC1-1 nil 3710791350 ("" (grind) nil nil) nil nil
   (conflict_free_alt subtype "alt_bands_range.k" "nznum")))
 (conflict_free_alt_TCC2 0
  (conflict_free_alt_TCC2-2 nil 3710792209
   ("" (skeep*)
    (("" (typepred "maxclimb")
      (("" (mult-by -3 "j/k")
        (("1" (assert) nil nil)
         ("2" (assert)
          (("2" (split)
            (("1" (cross-mult 1) nil nil)
             ("2" (cross-mult 1) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((div_mult_pos_gt1 formula-decl nil extra_real_props nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (j skolem-const-decl "upto(k)" alt_bands_range nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (k skolem-const-decl "{nn: nat | nn >= 2}" alt_bands_range nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil (conflict_free_alt subtype "alt_bands_range.vs" "posreal"))
  (conflict_free_alt_TCC2-1 nil 3710792110 ("" (subtype-tcc) nil nil)
   nil nil (conflict_free_alt subtype "alt_bands_range.vs" "posreal")))
 (conflict_free_alt_TCC3 0
  (conflict_free_alt_TCC3-1 nil 3710802682
   ("" (skeep*)
    (("" (lemma "times_increase")
      (("" (expand "kinematic_alt_times")
        (("" (inst?)
          (("1" (assert)
            (("1" (flatten)
              (("1" (assert)
                (("1" (replace -5)
                  (("1" (assert)
                    (("1" (typepred "timestep")
                      (("1" (assert)
                        (("1"
                          (case "FORALL (aa,bb:real): aa<=bb IMPLIES aa<=bb+timestep")
                          (("1" (rewrite -1 1)
                            (("1" (assert)
                              (("1"
                                (typepred "maxclimb")
                                (("1"
                                  (mult-by -3 "j/k")
                                  (("1" (assert) nil nil)
                                   ("2"
                                    (split)
                                    (("1" (cross-mult 1) nil nil)
                                     ("2" (cross-mult 1) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (typepred "maxclimb")
            (("2" (mult-by -3 "j/k")
              (("1" (assert) nil nil)
               ("2" (split)
                (("1" (cross-mult 1) nil nil)
                 ("2" (cross-mult 1) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((div_mult_pos_gt1 formula-decl nil extra_real_props nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (k skolem-const-decl "{nn: nat | nn >= 2}" alt_bands_range nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (j skolem-const-decl "upto(k)" alt_bands_range nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (vsLevelOutTimes const-decl "[real, real, real, real, real, real]"
     vsLevelOut aviation)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (> const-decl "bool" reals nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (vs skolem-const-decl "real" alt_bands_range nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (kinematic_alt_times const-decl "[real, real, real]"
     alt_bands_range nil)
    (times_increase formula-decl nil vsLevelOut aviation)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (conflict_free_alt subtype "alt_bands_range.katimes" "TimeTriple")))
 (alt_bands_generic_TCC1 0
  (alt_bands_generic_TCC1-1 nil 3644254181
   ("" (skeep*)
    (("" (case "(MaxAlt-MinAlt)/AltStep>=0")
      (("1" (assert) nil nil) ("2" (cross-mult 1) nil nil)) nil))
    nil)
   ((nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (alt_bands_generic subtype
    "(number_fields.+)(floor_ceil.floor(number_fields./(((number_fields.-)(alt_bands_range.MaxAlt, alt_bands_range.MinAlt)), alt_bands_range.AltStep)), 1)"
    "nat")))
 (alt_bands_generic_TCC2 0
  (alt_bands_generic_TCC2-1 nil 3658840474 ("" (subtype-tcc) nil nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nat_bands const-decl "(Bands?(maxi, 0, maxi, IP, -1))" int_bands
     nil)
    (conflict_free_alt const-decl "bool" alt_bands_range nil)
    (conflict_free_traj_step const-decl "bool" alt_bands_range nil)
    (kinematic_alt_times const-decl "[real, real, real]"
     alt_bands_range nil))
   nil
   (alt_bands_generic subtype
    "int_bands.nat_bands((number_fields.+)(floor_ceil.floor(number_fields./(((number_fields.-)(alt_bands_range.MaxAlt, alt_bands_range.MinAlt)), alt_bands_range.AltStep)), 1), LAMBDA (j: naturalnumbers.nat): alt_bands_range.conflict_free_alt(alt_bands_range.LOS, alt_bands_range.CD, alt_bands_range.LOS2, alt_bands_range.CD2, alt_bands_range.UseLOS2, alt_bands_range.B, alt_bands_range.T, alt_bands_range.B2, alt_bands_range.T2, alt_bands_range.so, alt_bands_range.vo, alt_bands_range.AL, alt_bands_range.accelup, alt_bands_range.acceldown, alt_bands_range.alterCR?, alt_bands_range.timestep, alt_bands_range.k, alt_bands_range.minclimb, alt_bands_range.maxclimb, (number_fields.+)(alt_bands_range.MinAlt, number_fields.*(j, alt_bands_range.AltStep))))"
    "(int_bands.Bands?((number_fields.+)(floor_ceil.floor(number_fields./(((number_fields.-)(alt_bands_range.MaxAlt, alt_bands_range.MinAlt)), alt_bands_range.AltStep)), 1), 0, (number_fields.+)(floor_ceil.floor(number_fields./(((number_fields.-)(alt_bands_range.MaxAlt, alt_bands_range.MinAlt)), alt_bands_range.AltStep)), 1), LAMBDA (j: naturalnumbers.nat): alt_bands_range.conflict_free_alt(alt_bands_range.LOS, alt_bands_range.CD, alt_bands_range.LOS2, alt_bands_range.CD2, alt_bands_range.UseLOS2, alt_bands_range.B, alt_bands_range.T, alt_bands_range.B2, alt_bands_range.T2, alt_bands_range.so, alt_bands_range.vo, alt_bands_range.AL, alt_bands_range.accelup, alt_bands_range.acceldown, alt_bands_range.alterCR?, alt_bands_range.timestep, alt_bands_range.k, alt_bands_range.minclimb, alt_bands_range.maxclimb, (number_fields.+)(alt_bands_range.MinAlt, number_fields.*(j, alt_bands_range.AltStep))), (number_fields.-)(1)))")))
 (kinematic_alt_bands_TCC1 0
  (kinematic_alt_bands_TCC1-2 "" 3794670923
   ("" (skeep*)
    (("" (lemma "times_increase")
      (("" (inst?) (("" (assert) nil nil)) nil)) nil))
    nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (times_increase formula-decl nil vsLevelOut aviation)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak
   (kinematic_alt_bands subtype "alt_bands_range.MaxAlt"
    "{MaxAlt | reals.<=(alt_bands_range.MinAlt, alt_bands_range.MaxAlt)}"))
  (kinematic_alt_bands_TCC1-1 nil 3661105070
   ("" (skeep*)
    (("" (expand "kinematic_alt_times")
      (("" (lemma "times_increase")
        (("" (inst?) (("" (assert) (("" (ground) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((times_increase formula-decl nil vsLevelOut aviation)) nil
   (kinematic_alt_bands subtype "alt_bands_range.MaxAlt"
    "{MaxAlt | reals.<=(alt_bands_range.MinAlt, alt_bands_range.MaxAlt)}")))
 (kinematic_alt_bands_correct?_TCC1 0
  (kinematic_alt_bands_correct?_TCC1-1 nil 3713090322
   ("" (skeep*)
    (("" (typepred "maxclimb")
      (("" (mult-by -3 "j/k")
        (("1" (assert) nil nil)
         ("2" (split)
          (("1" (cross-mult 1) nil nil)
           ("2" (cross-mult 1) (("2" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((div_mult_pos_gt1 formula-decl nil extra_real_props nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (k skolem-const-decl "{nn: nat | nn >= 2}" alt_bands_range nil)
    (j skolem-const-decl "nat" alt_bands_range nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (kinematic_alt_bands_correct? subtype "alt_bands_range.testvs"
    "posreal")))
 (kinematic_alt_bands_def 0
  (kinematic_alt_bands_def-1 nil 3710803956
   ("" (skeep*)
    (("" (expand "kinematic_alt_bands_correct?" :assert? none)
      (("" (skeep*)
        (("" (label "tvdef" -7)
          (("" (label "altdef" -5)
            (("" (case "testvs>0")
              (("1"
                (name "lt"
                      "vsLevelOutTimes(so`z, vo`z, testvs, alt, accelup, acceldown,
                                                                                                        alterCR?)")
                (("1"
                  (name "newso" "LAMBDA (t_1: nnreal):
                                                                                                IF t_1 <= lt`3 + timestep
                                                                                                  THEN vsLevelOut((so, vo), t_1, testvs, alt, accelup,
                                                                                                                  acceldown, alterCR?)`1
                                                                                                ELSE ((so + t_1 * vo) WITH [z := alt])
                                                                                                ENDIF")
                  (("1"
                    (name "newvo" "LAMBDA (t_1: nnreal):
                                                                                                      IF t_1 <= lt`3 + timestep
                                                                                                        THEN vsLevelOut((so, vo), t_1, testvs, alt, accelup,
                                                                                                                        acceldown, alterCR?)`2
                                                                                                      ELSE (vo WITH [z := 0])
                                                                                                      ENDIF")
                    (("1" (replace -3)
                      (("1" (assert)
                        (("1" (flatten)
                          (("1" (skeep)
                            (("1" (label "t2def" -19)
                              (("1"
                                (label "exdef" -18)
                                (("1"
                                  (label "vltdef" -3)
                                  (("1"
                                    (label "bdef" -10)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split +)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (decompose-equality -4)
                                            (("1"
                                              (inst - "t_2")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (decompose-equality
                                                   -5)
                                                  (("1"
                                                    (inst - "t_2")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (expand
                                                         "kinematic_alt_bands")
                                                        (("1"
                                                          (name
                                                           "abg"
                                                           "alt_bands_generic(LOS, CD, LOS2, CD2, UseLOS2, B, T, B2,
                                                                               T2, so, vo, AL, MinAlt, MaxAlt, AltStep,
                                                                               timestep, accelup, acceldown, alterCR?,
                                                                               k, minclimb, maxclimb, alt)")
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (typepred
                                                               "abg")
                                                              (("1"
                                                                (expand
                                                                 "Bands?")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst
                                                                     -3
                                                                     "altj")
                                                                    (("1"
                                                                      (split
                                                                       -3)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (hide
                                                                           -1)
                                                                          (("1"
                                                                            (split
                                                                             -)
                                                                            (("1"
                                                                              (expand
                                                                               "conflict_free_alt")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "j")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "kinematic_alt_times")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "kinematic_alt_traj")
                                                                                      (("1"
                                                                                        (name
                                                                                         "vlt"
                                                                                         "vsLevelOutTimes
                                                                                                                                                         (so`z,
                                                                                                                                                          vo`z,
                                                                         
                                                                                                                                                          ((j / k) * maxclimb - (j / k) * minclimb
                                                                                                                                                           +
                                                                                                                                                           minclimb),
                                                                                                                                                          MinAlt + altj * AltStep,
                                                                                                                                                          accelup,
                                                                                                                                                          acceldown,
                                                                                                                                                          alterCR?)")
                                                                                        (("1"
                                                                                          (label
                                                                                           "vltdef"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "tvdef"
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "NOT (LAMBDA (t: nnreal):
                                                                                                                                      IF t <= vlt`3 + timestep
                                                                                                                                        THEN vsLevelOut
                                                                                                                                             ((so, vo),
                                                                                                                                              t,
                                                                                                                                              testvs,
                                                                                                                                              alt,
                                                                                                                                              accelup,
                                                                                                                                              acceldown,
                                                                                                                                              alterCR?)
                                                                                                                                      ELSE ((so + t * vo) WITH [z := alt],
                                                                                                                                            vo WITH [z := 0])
                                                                                                                                      ENDIF) = (LAMBDA (t:nnreal): (newso(t),newvo(t)))")
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "newso")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "newvo")
                                                                                                    (("1"
                                                                                                      (replaces
                                                                                                       -1
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (replaces
                                                                                                         -1
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         +)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (decompose-equality
                                                                                                                         3)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   "altdef"
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (label
                                                                                                     "igz"
                                                                                                     (-7
                                                                                                      -8))
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         "igz")
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "conflict_free_traj_step")
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (skeep
                                                                                                                   "t2def")
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "i<=floor(vlt`1 / timestep)")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "i")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (invoke
                                                                                                                             (name
                                                                                                                              "az"
                                                                                                                              "%1")
                                                                                                                             (!
                                                                                                                              1
                                                                                                                              1))
                                                                                                                            (("1"
                                                                                                                              (replaces
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "az")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     (-1
                                                                                                                                      -2
                                                                                                                                      -4))
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "air")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (case
                                                                                                                       "ceiling(vlt`2 / timestep)<=i AND i<=
                                                                                                                                                       floor((vlt`3 + timestep) / timestep)")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -4)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -4
                                                                                                                             "i")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   (3
                                                                                                                                    5))
                                                                                                                                  (("1"
                                                                                                                                    (invoke
                                                                                                                                     (name
                                                                                                                                      "az"
                                                                                                                                      "%1")
                                                                                                                                     (!
                                                                                                                                      3
                                                                                                                                      1))
                                                                                                                                    (("1"
                                                                                                                                      (replaces
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "az")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             (-1
                                                                                                                                              -2
                                                                                                                                              -4))
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "air")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           (-2
                                                                                                                            -3))
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "i<=floor(vlt`2 / timestep)")
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               (4
                                                                                                                                6))
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "NOT ((vlt`1 / timestep)<i AND i <= (vlt`2 / timestep))")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (copy
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (cross-mult
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (copy
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (cross-mult
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (invoke
                                                                                                                                               (name
                                                                                                                                                "az"
                                                                                                                                                "%1")
                                                                                                                                               (!
                                                                                                                                                3
                                                                                                                                                1))
                                                                                                                                              (("1"
                                                                                                                                                (replaces
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (typepred
                                                                                                                                                   "az")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       (-1
                                                                                                                                                        -2
                                                                                                                                                        -4))
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "air")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "CD_future_traj_def")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (insteep
                                                                                                                                                                   -)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       +
                                                                                                                                                                       "t_2")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "NOT t_2 <= min(T, vlt`2)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (mult-by
                                                                                                                                                                               -4
                                                                                                                                                                               "timestep")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "min"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (ground)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "NOT max(vlt`1, 0) <= t_2")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 2)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "max"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (ground)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "traj_position((LAMBDA (t: nnreal): (newso(t), newvo(t))),
                                                                                                                                                         1 * max(vlt`1, 0), t_2) = newso(t_2)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "traj_velocity((LAMBDA (t: nnreal): (newso(t), newvo(t))),
                                                                                                                                                                 1 * max(vlt`1, 0), t_2) = newvo(t_2)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "position")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "traj_velocity")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "NOT t_2 > 1 * max(vlt`1, 0)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "max"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (ground)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (case
                                                                                                                                                                                                   "vlt`1<0")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "times_increase")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "max"
                                                                                                                                                                                                     2)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "newvo"
                                                                                                                                                                                                         2)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "times_increase")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "vsLevelOut"
                                                                                                                                                                                                               +)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 "vltdef")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "vsLevelOutCalculation")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (hide
                                                                                                                                                                                     2)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "times_increase")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst?)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           "vltdef")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "traj_position")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "newso"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "vsLevelOut"
                                                                                                                                                                                                         +)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "newvo"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "vsLevelOut")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               "vltdef")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "vsLevelOutCalculation")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (decompose-equality
                                                                                                                                                                                                                     +)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "min"
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (expand
                                                                                                                                                 "min"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (case
                                                                                                                               "i >= ceiling((vlt`3 + timestep) / timestep)")
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 (4
                                                                                                                                  5
                                                                                                                                  7))
                                                                                                                                (("1"
                                                                                                                                  (invoke
                                                                                                                                   (name
                                                                                                                                    "az"
                                                                                                                                    "%1")
                                                                                                                                   (!
                                                                                                                                    4
                                                                                                                                    1))
                                                                                                                                  (("1"
                                                                                                                                    (replaces
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (typepred
                                                                                                                                       "az")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           (-1
                                                                                                                                            -2
                                                                                                                                            -4))
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "air")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "CD_future_traj_def")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (hide
                                                                                                                                                           2)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             +
                                                                                                                                                             "t_2")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (case
                                                                                                                                                                 "NOT i > ((vlt`3 + timestep) / timestep)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT vlt`3 + timestep < t_2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (cross-mult
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "times_increase")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -5)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -12)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "traj_position((LAMBDA (t: nnreal): (newso(t), newvo(t))),
                                                                                                                                                        lt`3 + timestep, t_2) = newso(t_2)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "traj_velocity((LAMBDA (t: nnreal): (newso(t), newvo(t))),
                                                                                                                                                                lt`3 + timestep, t_2) = newvo(t_2)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "position")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (hide
                                                                                                                                                                                       2)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "newvo"
                                                                                                                                                                                         +)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "traj_velocity")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "vsLevelOut"
                                                                                                                                                                                             +)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               "vltdef")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "vsLevelOutCalculation")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (hide
                                                                                                                                                                                     2)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "traj_position")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "newso")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "vsLevelOut"
                                                                                                                                                                                           +)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             "vltdef")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "newvo")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "vsLevelOut"
                                                                                                                                                                                                 +)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   "vltdef")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "vsLevelOutCalculation")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("3"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "length(ab)>0 AND length(ab)=length(abg)")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replace
                                                                                     "bdef"
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (case
                                                                               "length(ab)>0 AND length(ab)=length(abg)")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (copy
                                                                                   "exdef")
                                                                                  (("1"
                                                                                    (skeep
                                                                                     -)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "i")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "add_realband_def")
                                                                                        (("1"
                                                                                          (replace
                                                                                           "altdef")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "scal(AltStep, abg)"
                                                                                             "altj*AltStep"
                                                                                             "MinAlt"
                                                                                             "i")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "scal_intband_def2")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "abg"
                                                                                                   "AltStep"
                                                                                                   "i")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "scalrb")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "in?")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (split)
                                                                                                                (("1"
                                                                                                                  (div-by
                                                                                                                   -1
                                                                                                                   "AltStep")
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (div-by
                                                                                                                   -2
                                                                                                                   "AltStep")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (copy
                                                                         "altdef")
                                                                        (("2"
                                                                          (case
                                                                           "NOT alt<=MaxAlt")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "NOT MinAlt<MaxAlt")
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                -3
                                                                                1))
                                                                              (("2"
                                                                                (case
                                                                                 "NOT altj = (alt-MinAlt)/AltStep")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replace
                                                                                   -1
                                                                                   1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (case
                                                                                       "(alt - MinAlt) / AltStep <= ((MaxAlt - MinAlt) / AltStep)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (cross-mult
                                                                                         1)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (decompose-equality -5)
                                            (("2"
                                              (inst - "t_2")
                                              (("2"
                                                (replace -1)
                                                (("2"
                                                  (decompose-equality
                                                   -6)
                                                  (("2"
                                                    (inst - "t_2")
                                                    (("2"
                                                      (replace -1)
                                                      (("2"
                                                        (expand
                                                         "kinematic_alt_bands")
                                                        (("2"
                                                          (name
                                                           "abg"
                                                           "alt_bands_generic(LOS, CD, LOS2, CD2, UseLOS2, B, T, B2,
                                                                               T2, so, vo, AL, MinAlt, MaxAlt, AltStep,
                                                                               timestep, accelup, acceldown, alterCR?,
                                                                               k, minclimb, maxclimb, alt)")
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (typepred
                                                               "abg")
                                                              (("2"
                                                                (expand
                                                                 "Bands?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (inst
                                                                     -3
                                                                     "altj")
                                                                    (("2"
                                                                      (split
                                                                       -3)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (hide
                                                                           -1)
                                                                          (("1"
                                                                            (split
                                                                             -)
                                                                            (("1"
                                                                              (expand
                                                                               "conflict_free_alt")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "j")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "kinematic_alt_times")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "kinematic_alt_traj")
                                                                                      (("1"
                                                                                        (name
                                                                                         "vlt"
                                                                                         "vsLevelOutTimes
                                                                                                                                                         (so`z,
                                                                                                                                                          vo`z,
                                                                         
                                                                                                                                                          ((j / k) * maxclimb - (j / k) * minclimb
                                                                                                                                                           +
                                                                                                                                                           minclimb),
                                                                                                                                                          MinAlt + altj * AltStep,
                                                                                                                                                          accelup,
                                                                                                                                                          acceldown,
                                                                                                                                                          alterCR?)")
                                                                                        (("1"
                                                                                          (label
                                                                                           "vltdef"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "tvdef"
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "NOT (LAMBDA (t: nnreal):
                                                                                                                                      IF t <= vlt`3 + timestep
                                                                                                                                        THEN vsLevelOut
                                                                                                                                             ((so, vo),
                                                                                                                                              t,
                                                                                                                                              testvs,
                                                                                                                                              alt,
                                                                                                                                              accelup,
                                                                                                                                              acceldown,
                                                                                                                                              alterCR?)
                                                                                                                                      ELSE ((so + t * vo) WITH [z := alt],
                                                                                                                                            vo WITH [z := 0])
                                                                                                                                      ENDIF) = (LAMBDA (t:nnreal): (newso(t),newvo(t)))")
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "newso")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "newvo")
                                                                                                    (("1"
                                                                                                      (replaces
                                                                                                       -1
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (replaces
                                                                                                         -1
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         +)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (decompose-equality
                                                                                                                         3)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   "altdef"
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (label
                                                                                                     "igz"
                                                                                                     (-7
                                                                                                      -8))
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         "igz")
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "conflict_free_traj_step")
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (skeep
                                                                                                                   "t2def")
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "i<=floor(vlt`1 / timestep)")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "i")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (invoke
                                                                                                                               (name
                                                                                                                                "az"
                                                                                                                                "%1")
                                                                                                                               (!
                                                                                                                                1
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (replaces
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "az")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       (-1
                                                                                                                                        -2
                                                                                                                                        -4))
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "air")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (case
                                                                                                                       "ceiling(vlt`2 / timestep)<=i AND i<=
                                                                                                                                                       floor((vlt`3 + timestep) / timestep)")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -4)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -4
                                                                                                                             "i")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   (2
                                                                                                                                    3
                                                                                                                                    4))
                                                                                                                                  (("1"
                                                                                                                                    (invoke
                                                                                                                                     (name
                                                                                                                                      "az"
                                                                                                                                      "%1")
                                                                                                                                     (!
                                                                                                                                      2
                                                                                                                                      1))
                                                                                                                                    (("1"
                                                                                                                                      (replaces
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "az")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             (-1
                                                                                                                                              -2
                                                                                                                                              -4))
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "air")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           (-2
                                                                                                                            -3))
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "i<=floor(vlt`2 / timestep)")
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               (3
                                                                                                                                5))
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "NOT ((vlt`1 / timestep)<i AND i <= (vlt`2 / timestep))")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (copy
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (cross-mult
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (copy
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (cross-mult
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (invoke
                                                                                                                                               (name
                                                                                                                                                "az"
                                                                                                                                                "%1")
                                                                                                                                               (!
                                                                                                                                                3
                                                                                                                                                1))
                                                                                                                                              (("1"
                                                                                                                                                (replaces
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (typepred
                                                                                                                                                   "az")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       (-1
                                                                                                                                                        -2
                                                                                                                                                        -4))
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "air")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "CD_future_traj_def")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "LOS2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       +
                                                                                                                                                                       "t_2")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "NOT t_2 <= min(T2, vlt`2)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (mult-by
                                                                                                                                                                               -4
                                                                                                                                                                               "timestep")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "min"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (ground)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "NOT max(vlt`1, 0) <= t_2")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 2)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "max"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (ground)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "traj_position((LAMBDA (t: nnreal): (newso(t), newvo(t))),
                                                                                                                                                         1 * max(vlt`1, 0), t_2) = newso(t_2)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "traj_velocity((LAMBDA (t: nnreal): (newso(t), newvo(t))),
                                                                                                                                                                 1 * max(vlt`1, 0), t_2) = newvo(t_2)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "position")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "traj_velocity")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "NOT t_2 > 1 * max(vlt`1, 0)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "max"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (ground)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (case
                                                                                                                                                                                                   "vlt`1<0")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "times_increase")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "max"
                                                                                                                                                                                                     2)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "newvo"
                                                                                                                                                                                                         2)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "times_increase")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "vsLevelOut"
                                                                                                                                                                                                               +)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 "vltdef")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "vsLevelOutCalculation")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (hide
                                                                                                                                                                                     2)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "times_increase")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst?)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           "vltdef")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "traj_position")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "newso"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "vsLevelOut"
                                                                                                                                                                                                         +)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "newvo"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "vsLevelOut")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               "vltdef")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "vsLevelOutCalculation")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (decompose-equality
                                                                                                                                                                                                                     +)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "min"
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (expand
                                                                                                                                                 "min"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (case
                                                                                                                               "i >= ceiling((vlt`3 + timestep) / timestep)")
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 (4
                                                                                                                                  5
                                                                                                                                  6))
                                                                                                                                (("1"
                                                                                                                                  (invoke
                                                                                                                                   (name
                                                                                                                                    "az"
                                                                                                                                    "%1")
                                                                                                                                   (!
                                                                                                                                    4
                                                                                                                                    1))
                                                                                                                                  (("1"
                                                                                                                                    (replaces
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (typepred
                                                                                                                                       "az")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           (-1
                                                                                                                                            -2
                                                                                                                                            -4))
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "air")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "CD_future_traj_def")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (hide
                                                                                                                                                           2)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             +
                                                                                                                                                             "t_2")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (case
                                                                                                                                                                 "NOT i > ((vlt`3 + timestep) / timestep)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT vlt`3 + timestep < t_2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (cross-mult
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "times_increase")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -5)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (case
                                                                                                                                                                                 "traj_position((LAMBDA (t: nnreal): (newso(t), newvo(t))),
                                                                                                                                                        lt`3 + timestep, t_2) = newso(t_2)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "traj_velocity((LAMBDA (t: nnreal): (newso(t), newvo(t))),
                                                                                                                                                                lt`3 + timestep, t_2) = newvo(t_2)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "position")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (hide
                                                                                                                                                                                     2)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "newvo"
                                                                                                                                                                                       +)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "traj_velocity")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "vsLevelOut"
                                                                                                                                                                                           +)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             "vltdef")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "vsLevelOutCalculation")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (hide
                                                                                                                                                                                   2)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "traj_position")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "newso")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "vsLevelOut"
                                                                                                                                                                                         +)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           "vltdef")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "newvo")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "vsLevelOut"
                                                                                                                                                                                               +)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 "vltdef")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "vsLevelOutCalculation")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (grind)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("3"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "length(ab)>0 AND length(ab)=length(abg)")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replace
                                                                                     "bdef"
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (case
                                                                               "length(ab)>0 AND length(ab)=length(abg)")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (copy
                                                                                   "exdef")
                                                                                  (("1"
                                                                                    (skeep
                                                                                     -)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "i")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "add_realband_def")
                                                                                        (("1"
                                                                                          (replace
                                                                                           "altdef")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "scal(AltStep, abg)"
                                                                                             "altj*AltStep"
                                                                                             "MinAlt"
                                                                                             "i")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "scal_intband_def2")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "abg"
                                                                                                   "AltStep"
                                                                                                   "i")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "scalrb")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "in?")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (split)
                                                                                                                (("1"
                                                                                                                  (div-by
                                                                                                                   -1
                                                                                                                   "AltStep")
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (div-by
                                                                                                                   -2
                                                                                                                   "AltStep")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (copy
                                                                         "altdef")
                                                                        (("2"
                                                                          (case
                                                                           "NOT alt<=MaxAlt")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "NOT MinAlt<MaxAlt")
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                -3
                                                                                1))
                                                                              (("2"
                                                                                (case
                                                                                 "NOT altj = (alt-MinAlt)/AltStep")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replace
                                                                                   -1
                                                                                   1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (case
                                                                                       "(alt - MinAlt) / AltStep <= ((MaxAlt - MinAlt) / AltStep)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (cross-mult
                                                                                         1)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2) (("2" (assert) nil nil)) nil))
                  nil)
                 ("2" (hide 2) (("2" (assert) nil nil)) nil))
                nil)
               ("2" (hide 2)
                (("2" (assert)
                  (("2" (mult-by -4 "j/k")
                    (("1" (assert) nil nil)
                     ("2" (split)
                      (("1" (cross-mult 1) nil nil)
                       ("2" (cross-mult 1) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((div_mult_pos_gt1 formula-decl nil extra_real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (j skolem-const-decl "nat" alt_bands_range nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (i skolem-const-decl "below(length(ab))" alt_bands_range nil)
    (abg skolem-const-decl
     "(Bands?(floor((MaxAlt - MinAlt) / AltStep) + 1, 0,
        floor((MaxAlt - MinAlt) / AltStep) + 1,
        LAMBDA (j: nat):
          conflict_free_alt(LOS, CD, LOS2, CD2, UseLOS2, B, T, B2, T2, so,
                            vo, AL, accelup, acceldown, alterCR?, timestep,
                            k, minclimb, maxclimb, MinAlt + j * AltStep),
        -1))" alt_bands_range nil)
    (vlt skolem-const-decl "[real, real, real, real, real, real]"
     alt_bands_range nil)
    (i skolem-const-decl "nat" alt_bands_range nil)
    (div_mult_pos_le1 formula-decl nil real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (both_sides_div_pos_le1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (in? const-decl "bool" real_bands nil)
    (in? const-decl "bool" int_bands nil)
    (scalrb const-decl "RealBand" real_bands nil)
    (scal_intband_def2 formula-decl nil real_bands nil)
    (scal const-decl "listn[RealBand](length[IntBand](L))" real_bands
     nil)
    (listn type-eq-decl nil listn structures)
    (add_realband_def formula-decl nil real_bands nil)
    (ab skolem-const-decl "list[RealBand]" alt_bands_range nil)
    (i skolem-const-decl "below(length(ab))" alt_bands_range nil)
    (MaxAlt skolem-const-decl "posreal" alt_bands_range nil)
    (MinAlt skolem-const-decl "nnreal" alt_bands_range nil)
    (AltStep skolem-const-decl "posreal" alt_bands_range nil)
    (LOS skolem-const-decl "[[Vect3, Vect3, Vect3, Vect3] -> bool]"
     alt_bands_range nil)
    (CD skolem-const-decl
     "[[nnreal, nnreal, Vect3, Vect3, Vect3, Vect3] -> bool]"
     alt_bands_range nil)
    (LOS2 skolem-const-decl "[[Vect3, Vect3, Vect3, Vect3] -> bool]"
     alt_bands_range nil)
    (CD2 skolem-const-decl
     "[[nnreal, nnreal, Vect3, Vect3, Vect3, Vect3] -> bool]"
     alt_bands_range nil)
    (UseLOS2 skolem-const-decl "bool" alt_bands_range nil)
    (B skolem-const-decl "nnreal" alt_bands_range nil)
    (B2 skolem-const-decl "nnreal" alt_bands_range nil)
    (T2 skolem-const-decl "nnreal" alt_bands_range nil)
    (so skolem-const-decl "Vect3" alt_bands_range nil)
    (vo skolem-const-decl "{vv: Vect3 | sqv(vect2(vv)) > 0}"
     alt_bands_range nil)
    (AL skolem-const-decl "AircraftList" alt_bands_range nil)
    (accelup skolem-const-decl "posreal" alt_bands_range nil)
    (acceldown skolem-const-decl "negreal" alt_bands_range nil)
    (alterCR? skolem-const-decl "bool" alt_bands_range nil)
    (k skolem-const-decl "{nn: nat | nn >= 2}" alt_bands_range nil)
    (minclimb skolem-const-decl "posreal" alt_bands_range nil)
    (maxclimb skolem-const-decl "posreal" alt_bands_range nil)
    (abg skolem-const-decl
     "(Bands?(floor((MaxAlt - MinAlt) / AltStep) + 1, 0,
        floor((MaxAlt - MinAlt) / AltStep) + 1,
        LAMBDA (j: nat):
          conflict_free_alt(LOS, CD, LOS2, CD2, UseLOS2, B, T, B2, T2, so,
                            vo, AL, accelup, acceldown, alterCR?, timestep,
                            k, minclimb, maxclimb, MinAlt + j * AltStep),
        -1))" alt_bands_range nil)
    (RealBand type-eq-decl nil real_bands nil)
    (div_mult_pos_gt2 formula-decl nil extra_real_props nil)
    (^ const-decl "real" exponentiation nil)
    (expt def-decl "real" exponentiation nil)
    (linear_pos const-decl "Vect3" util aviation)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (S1 const-decl "real" vsLevelOut aviation)
    (V1 const-decl "real" vsLevelOut aviation)
    (vsLevelOutCalculation const-decl "[Vect3, Vect3]" vsLevelOut
     aviation)
    (max_nnreal_0 formula-decl nil min_max reals)
    (max_npreal_0 formula-decl nil min_max reals)
    (times_increase formula-decl nil vsLevelOut aviation)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (position const-decl "Vect3" int_bands nil)
    (traj_velocity const-decl "Vect3" int_bands nil)
    (traj_position const-decl "Vect3" int_bands nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (T skolem-const-decl "nnreal" alt_bands_range nil)
    (CD_future_traj_def formula-decl nil int_bands nil)
    (CD_future_traj const-decl "bool" int_bands nil)
    (first_conflict_aircraft def-decl "{j: int |
   (j >= 0 IFF
     (i <= j AND
       j < length(AL) AND
        CD_future_traj(CD, B, T, traj, k * tsn, AL, j) AND
         (FORALL (q: int):
            q >= i AND q < j IMPLIES
             NOT CD_future_traj(CD, B, T, traj, k * tsn, AL, q))))
    AND
    (j < 0 IFF
      (FORALL (q: int):
         q >= i AND q < length(AL) IMPLIES
          NOT CD_future_traj(CD, B, T, traj, k * tsn, AL, q)))}"
     int_bands nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (div_mult_pos_lt1 formula-decl nil real_props nil)
    (div_mult_pos_le2 formula-decl nil real_props nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (below type-eq-decl nil naturalnumbers nil)
    (Traj type-eq-decl nil int_bands nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (nth def-decl "T" list_props nil)
    (first_los_aircraft def-decl "{j: int |
   (j >= 0 IFF
     (i <= j AND
       j < length(AL) AND
        LOS(traj(k * ts)`1, traj(k * ts)`2,
            nth(AL, j)`s + (k * ts) * nth(AL, j)`v, nth(AL, j)`v)
         AND
         (FORALL (q: int):
            q >= i AND q < j IMPLIES
             NOT LOS(traj(k * ts)`1, traj(k * ts)`2,
                     nth(AL, q)`s + (k * ts) * nth(AL, q)`v,
                     nth(AL, q)`v))))
    AND
    (j < 0 IFF
      (FORALL (q: int):
         q >= i AND q < length(AL) IMPLIES
          NOT LOS(traj(k * ts)`1, traj(k * ts)`2,
                  nth(AL, q)`s + (k * ts) * nth(AL, q)`v, nth(AL, q)`v)))}"
     int_bands nil)
    (subrange type-eq-decl nil integers nil)
    (timestep skolem-const-decl "posreal" alt_bands_range nil)
    (vlt skolem-const-decl "[real, real, real, real, real, real]"
     alt_bands_range nil)
    (i skolem-const-decl "nat" alt_bands_range nil)
    (conflict_free_traj_step const-decl "bool" alt_bands_range nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (newvo skolem-const-decl "[nnreal -> Vect3]" alt_bands_range nil)
    (newso skolem-const-decl "[nnreal -> Vect3]" alt_bands_range nil)
    (kinematic_alt_traj const-decl "[Vect3, Vect3]" alt_bands_range
     nil)
    (kinematic_alt_times const-decl "[real, real, real]"
     alt_bands_range nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (IntBand type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (string type-eq-decl nil strings nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (AircraftList type-eq-decl nil int_bands nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Bands? const-decl "bool" int_bands nil)
    (integer nonempty-type-from-decl nil integers nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (conflict_free_alt const-decl "bool" alt_bands_range nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (alt_bands_generic const-decl
     "(Bands?(floor((MaxAlt - MinAlt) / AltStep) + 1, 0,
        floor((MaxAlt - MinAlt) / AltStep) + 1,
        LAMBDA (j: nat):
          conflict_free_alt(LOS, CD, LOS2, CD2, UseLOS2, B, T, B2, T2, so,
                            vo, AL, accelup, acceldown, alterCR?, timestep,
                            k, minclimb, maxclimb, MinAlt + j * AltStep),
        -1))" alt_bands_range nil)
    (kinematic_alt_bands const-decl "list[RealBand]" alt_bands_range
     nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (vsLevelOut const-decl "[Vect3, Vect3]" vsLevelOut aviation)
    (Vector type-eq-decl nil vectors_3D vectors)
    (+ const-decl "Vector" vectors_3D vectors)
    (* const-decl "Vector" vectors_3D vectors)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nnreal type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (vsLevelOutTimes const-decl "[real, real, real, real, real, real]"
     vsLevelOut aviation)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (kinematic_alt_bands_correct? const-decl "bool" alt_bands_range
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak)))

