(horizontal_WCV_tau
 (safe_tau_TCC1 0
  (safe_tau_TCC1-1 nil 3606158272 ("" (subtype-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (* const-decl "real" vectors_2D vectors)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (safe_tau subtype "horizontal_WCV_tau.v"
    "{v: vectors_2D_def.Vect2 | (vectors_2D.*(horizontal_WCV_tau.s, v) /= 0)}")))
 (safe_tau_timevar 0
  (safe_tau_timevar-2 nil 3606334112
   ("" (expand "timevar?")
    (("" (skeep) (("" (expand "safe_tau") (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (safe_tau const-decl "real" horizontal_WCV_tau nil)
    (timevar? const-decl "bool" timevars nil))
   nil
   (safe_tau_timevar subtype "horizontal_WCV_tau.safe_tau" "TimeVar"))
  (safe_tau_timevar-1 nil 3606220497
   ("" (expand "timevar?")
    (("" (skeep)
      (("" (expand "safe_tau")
        (("" (split)
          (("1" (flatten)
            (("1" (assert)
              (("1" (expand "tau")
                (("1" (case-replace "s=zero")
                  (("1" (assert) nil nil)
                   ("2" (cross-mult)
                    (("2" (lemma "v_neq_zero")
                      (("2" (inst?) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten) (("2" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (dot_zero_left formula-decl nil vectors_2D vectors)
    (v_neq_zero formula-decl nil vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (timevar? const-decl "bool" timevars nil))
   nil
   (safe_tau_timevar subtype "horizontal_WCV_tau.safe_tau" "TimeVar")))
 (safe_tau_pre_timevar 0
  (safe_tau_pre_timevar-1 nil 3606398573
   ("" (expand "pre_timevar?")
    (("" (skeep)
      (("" (expand "pre_le?")
        (("" (expand "safe_tau")
          (("" (flatten)
            (("" (assert)
              (("" (expand "tau") (("" (cross-mult) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((safe_tau const-decl "real" horizontal_WCV_tau nil)
    (tcpa_timevar name-judgement "TimeVar" timevars nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_mult_neg_gt1 formula-decl nil extra_real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (* const-decl "real" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (tau const-decl "real" timevars nil)
    (pre_le? const-decl "bool" horizontal_WCV nil)
    (pre_timevar? const-decl "bool" horizontal_WCV nil))
   shostak
   (safe_tau_pre_timevar subtype "horizontal_WCV_tau.safe_tau"
    "(horizontal_WCV[horizontal_WCV_tau.TAU, horizontal_WCV_tau.DTHR].pre_timevar?)")))
 (safe_tau_symm 0
  (safe_tau_symm-1 nil 3606158284 ("" (grind) nil nil)
   ((real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (tau const-decl "real" timevars nil)
    (safe_tau const-decl "real" horizontal_WCV_tau nil) nil
    (symmetric? const-decl "bool" timevars nil)
    (safe_tau_pre_timevar name-judgement "(pre_timevar?)"
     horizontal_WCV_tau nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil))
   shostak))
 (horizontal_WCV_tau_symm 0
  (horizontal_WCV_tau_symm-1 nil 3606158345
   ("" (skeep)
    (("" (rewrite "horizontal_WCV_symm")
      (("" (rewrite "safe_tau_symm") nil nil)) nil))
    nil)
   ((safe_tau_pre_timevar name-judgement "(pre_timevar?)"
     horizontal_WCV_tau nil)
    (horizontal_WCV_symm formula-decl nil horizontal_WCV nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (timevar? const-decl "bool" timevars nil)
    (TimeVar type-eq-decl nil timevars nil)
    (safe_tau const-decl "real" horizontal_WCV_tau nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (TAU formal-const-decl "nnreal" horizontal_WCV_tau nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DTHR formal-const-decl "posreal" horizontal_WCV_tau nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (safe_tau_symm formula-decl nil horizontal_WCV_tau nil))
   nil))
 (horizontal_WCV_tau_rew_TCC1 0
  (horizontal_WCV_tau_rew_TCC1-1 nil 3606166317
   ("" (subtype-tcc) nil nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (/= const-decl "boolean" notequal nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (horizontal_WCV_tau_rew subtype "horizontal_WCV_tau.v" "Nz_vect2")))
 (horizontal_WCV_tau_rew 0
  (horizontal_WCV_tau_rew-1 nil 3606166366
   ("" (skeep)
    (("" (expand "horizontal_WCV")
      (("" (split)
        (("1" (flatten)
          (("1" (assert)
            (("1" (flatten)
              (("1" (expand "safe_tau")
                (("1" (case "s * v < 0")
                  (("1" (assert)
                    (("1" (expand "tcpa")
                      (("1" (case-replace "v=zero")
                        (("1" (assert) nil nil) ("2" (assert) nil nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (flatten)
          (("2" (assert)
            (("2" (flatten)
              (("2" (expand "safe_tau")
                (("2" (assert)
                  (("2" (expand "tcpa")
                    (("2" (case-replace "v=zero")
                      (("1" (assert) nil nil)
                       ("2" (assert)
                        (("2" (expand "tau" +)
                          (("2" (cross-mult 3) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((horizontal_WCV const-decl "bool" horizontal_WCV nil)
    (tau const-decl "real" timevars nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (<= const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (real_times_real_is_real application-judgement "real" reals nil)
    (div_mult_neg_le2 formula-decl nil real_props nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (* const-decl "real" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (< const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (tcpa const-decl "real" timevars nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (tcpa_timevar name-judgement "TimeVar" timevars nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (safe_tau const-decl "real" horizontal_WCV_tau nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak))
 (horizontal_WCV_tau_interval_TCC1 0
  (horizontal_WCV_tau_interval_TCC1-1 nil 3620471110
   ("" (subtype-tcc) nil nil)
   ((* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil (horizontal_WCV_tau_interval subtype "0" "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC2 0
  (horizontal_WCV_tau_interval_TCC2-1 nil 3620471110
   ("" (subtype-tcc) nil nil)
   ((* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.T"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC3 0
  (horizontal_WCV_tau_interval_TCC3-1 nil 3620471110
   ("" (subtype-tcc) nil nil)
   ((* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil (horizontal_WCV_tau_interval subtype "0" "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC4 0
  (horizontal_WCV_tau_interval_TCC4-1 nil 3620471110
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (assert)
          (("" (replace -1 1)
            (("" (lemma "sqv_eq_0")
              (("" (inst?)
                (("" (assert)
                  (("" (lemma "Delta_ge_0_2[DTHR]")
                    (("" (inst?)
                      (("" (assert)
                        (("" (inst + "0") (("" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (Delta_ge_0_2 formula-decl nil horizontal ACCoRD)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DTHR formal-const-decl "posreal" horizontal_WCV_tau nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.v"
    "{nzv | reals.>=(horizontal[horizontal_WCV_tau.DTHR].Delta(horizontal_WCV_tau.s, horizontal.nzv), 0)}")))
 (horizontal_WCV_tau_interval_TCC5 0
  (horizontal_WCV_tau_interval_TCC5-1 nil 3620471110
   ("" (skeep*)
    (("" (typepred "T")
      (("" (assert)
        (("" (expand "min")
          (("" (grind-reals)
            (("" (expand "Theta_D[DTHR]" +)
              (("" (expand "root2b")
                (("" (expand "discr2b")
                  (("" (both-sides "*" "sqv(v)" -6)
                    (("1" (lemma "v_neq_zero")
                      (("1" (inst?)
                        (("1" (assert)
                          (("1" (lemma "sqv_eq_0")
                            (("1" (inst?)
                              (("1"
                                (replace -1 :hide? t)
                                (("1"
                                  (grind-reals)
                                  (("1"
                                    (both-sides "-" "sqv(s)*sqv(v)" -6)
                                    (("1"
                                      (both-sides "+" "sq(s*v)" -6)
                                      (("1"
                                        (grind-reals)
                                        (("1"
                                          (name-replace
                                           "Jason"
                                           "sq(s * v) + sq(DTHR) * sqv(v) - sqv(s) * sqv(v)")
                                          (("1"
                                            (move-terms 2 l (2))
                                            (("1"
                                              (both-sides-f 2 "sq")
                                              (("1" (sq-simp) nil nil)
                                               ("2"
                                                (lemma "sq_ge")
                                                (("2"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (grind-reals)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (grind-reals)
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (grind-reals) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) (("2" (grind-reals) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (discr2b const-decl "real" quadratic_2b reals)
    (v_neq_zero formula-decl nil vectors_2D vectors)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (le_times_le_pos formula-decl nil real_props nil)
    (zero_times1 formula-decl nil real_props nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D vectors)
    (both_sides_plus_le1 formula-decl nil real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (sq_0 formula-decl nil sq reals)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (sq_minus formula-decl nil sq reals)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_neg formula-decl nil sq reals)
    (Jason skolem-const-decl "real" horizontal_WCV_tau nil)
    (sq_ge formula-decl nil sq reals)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (both_sides_minus_le1 formula-decl nil real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (<= const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sq const-decl "nonneg_real" sq reals)
    (DTHR formal-const-decl "posreal" horizontal_WCV_tau nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (root2b const-decl "real" quadratic_2b reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (horizontal_WCV_tau_interval subtype
    "real_defs.min(horizontal_WCV_tau.T, horizontal[horizontal_WCV_tau.DTHR].Theta_D(horizontal_WCV_tau.s, horizontal_WCV_tau.v, 1))"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC6 0
  (horizontal_WCV_tau_interval_TCC6-1 nil 3620471110
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (grind-reals)
          (("" (lemma "sqv_eq_0")
            (("" (inst?)
              (("" (assert)
                (("" (lemma "dot_zero_right")
                  (("" (inst?)
                    (("" (replace -2)
                      (("" (lemma "dot_zero_right")
                        (("" (inst?) (("" (grind-reals) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.T"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC7 0
  (horizontal_WCV_tau_interval_TCC7-1 nil 3620471110
   ("" (subtype-tcc) nil nil)
   ((* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil (horizontal_WCV_tau_interval subtype "0" "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC8 0
  (horizontal_WCV_tau_interval_TCC8-1 nil 3620471110
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (lemma "sqv_eq_0")
          (("" (inst?)
            (("" (assert)
              (("" (replaces -1) (("" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.a"
    "nonzero_real")))
 (horizontal_WCV_tau_interval_TCC9 0
  (horizontal_WCV_tau_interval_TCC9-1 nil 3620471110
   ("" (subtype-tcc) nil nil)
   ((comp_zero_y formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (sqrt_0 formula-decl nil sqrt reals)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nnreal type-eq-decl nil real_types nil)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (discr const-decl "real" quadratic reals)
    (root const-decl "real" quadratic reals)
    (/= const-decl "boolean" notequal nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.v"
    "{nzv | reals.>=(horizontal[horizontal_WCV_tau.DTHR].Delta(horizontal_WCV_tau.s, horizontal.nzv), 0)}")))
 (horizontal_WCV_tau_interval_TCC10 0
  (horizontal_WCV_tau_interval_TCC10-1 nil 3620471110
   ("" (skeep*)
    (("" (assert)
      (("" (flatten) (("" (replaces -6) (("" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.T"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC11 0
  (horizontal_WCV_tau_interval_TCC11-1 nil 3620471110
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (expand "max") (("" (grind-reals) nil nil)) nil)) nil))
      nil))
    nil)
   ((max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)) nil
   (horizontal_WCV_tau_interval subtype "0" "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC12 0
  (horizontal_WCV_tau_interval_TCC12-1 nil 3620471110
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (expand "min")
          (("" (expand "max")
            (("" (expand "Theta_D[DTHR]")
              (("" (expand "root")
                (("" (expand "root2b")
                  (("" (expand "discr")
                    (("" (expand "discr2b")
                      (("" (grind-reals) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (root2b const-decl "real" quadratic_2b reals)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (discr2b const-decl "real" quadratic_2b reals)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DTHR formal-const-decl "posreal" horizontal_WCV_tau nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (nonzero_times1 formula-decl nil real_props nil)
    (pos_times_gt formula-decl nil real_props nil)
    (neg_times_le formula-decl nil real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (discr const-decl "real" quadratic reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (root const-decl "real" quadratic reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.Din"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC13 0
  (horizontal_WCV_tau_interval_TCC13-1 nil 3620471110
   ("" (subtype-tcc) nil nil)
   ((AND const-decl "[bool, bool -> bool]" booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (DTHR formal-const-decl "posreal" horizontal_WCV_tau nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nnreal type-eq-decl nil real_types nil)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (discr const-decl "real" quadratic reals)
    (root const-decl "real" quadratic reals)
    (discr2b const-decl "real" quadratic_2b reals)
    (root2b const-decl "real" quadratic_2b reals)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.Dout"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC14 0
  (horizontal_WCV_tau_interval_TCC14-1 nil 3620471110
   ("" (subtype-tcc) nil nil)
   ((AND const-decl "[bool, bool -> bool]" booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (DTHR formal-const-decl "posreal" horizontal_WCV_tau nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nnreal type-eq-decl nil real_types nil)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (discr const-decl "real" quadratic reals)
    (root const-decl "real" quadratic reals)
    (discr2b const-decl "real" quadratic_2b reals)
    (root2b const-decl "real" quadratic_2b reals)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.tauin"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC15 0
  (horizontal_WCV_tau_interval_TCC15-1 nil 3630334949
   ("" (subtype-tcc) nil nil)
   ((AND const-decl "[bool, bool -> bool]" booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (DTHR formal-const-decl "posreal" horizontal_WCV_tau nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nnreal type-eq-decl nil real_types nil)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (discr const-decl "real" quadratic reals)
    (root const-decl "real" quadratic reals)
    (discr2b const-decl "real" quadratic_2b reals)
    (root2b const-decl "real" quadratic_2b reals)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.tauout"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC16 0
  (horizontal_WCV_tau_interval_TCC16-1 nil 3630334949
   ("" (subtype-tcc) nil nil)
   ((AND const-decl "[bool, bool -> bool]" booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (DTHR formal-const-decl "posreal" horizontal_WCV_tau nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign reals)
    (nonneg_real_min application-judgement
     "{z: nonneg_real | z <= x AND z <= y}" real_defs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nnreal type-eq-decl nil real_types nil)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (det const-decl "real" det_2D vectors)
    (Delta const-decl "real" horizontal ACCoRD)
    (discr const-decl "real" quadratic reals)
    (root const-decl "real" quadratic reals)
    (discr2b const-decl "real" quadratic_2b reals)
    (root2b const-decl "real" quadratic_2b reals)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   nil
   (horizontal_WCV_tau_interval subtype
    "real_defs.min(horizontal_WCV_tau.tauin, horizontal_WCV_tau.Din)"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_TCC17 0
  (horizontal_WCV_tau_interval_TCC17-1 nil 3630334949
   ("" (skeep*)
    (("" (replaces -4 +)
      (("" (replaces -4 +)
        (("" (hide -) (("" (grind :exclude ("Delta" "root")) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sq const-decl "nonneg_real" sq reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (horizontal_WCV_tau_interval subtype "horizontal_WCV_tau.Dout"
    "Lookahead[0, T]")))
 (horizontal_WCV_tau_interval_sound 0
  (horizontal_WCV_tau_interval_sound-2 nil 3630411619
   ("" (expand "horizontal_interval_sound?")
    (("" (skeep)
      ((""
        (case "NOT (Delta[DTHR](s,v)>=0 AND v/=zero AND discr(sqv(v), 2 * (s * v) + TAU * sqv(v),
                                                                                                                              sqv(s) + TAU * (s * v))>=0 IMPLIES LET rr = root(sqv(v), 2 * (s * v) + TAU * sqv(v), sqv(s) + TAU * (s * v),
                                                                                      1) IN rr<=horizontal_tca(s,v) AND rr<=Theta_D[DTHR](s,v,1))")
        (("1" (hide 2)
          (("1" (flatten)
            (("1"
              (case "LET rr =
                                                root(sqv(v), 2 * (s * v) + TAU * sqv(v),
                                                     sqv(s) + TAU * (s * v), 1)
                                            IN rr <= horizontal_tca(s, v)")
              (("1" (case "horizontal_tca(s,v)<=Theta_D[DTHR](s,v,1)")
                (("1" (assert) nil nil)
                 ("2" (lemma "horizontal_tca_midpoint[DTHR]")
                  (("2" (inst?)
                    (("2" (assert)
                      (("2" (lemma "Theta_D_le[DTHR]")
                        (("2" (inst?) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (assert) nil nil) ("4" (assert) nil nil))
                nil)
               ("2" (hide 3)
                (("2" (assert)
                  (("2" (expand "root" 1)
                    (("2"
                      (name "DD"
                            "discr(sqv(v), 2 * (s * v) + TAU * sqv(v),
                                                                                                                                              sqv(s) + TAU * (s * v))")
                      (("2" (replace -1)
                        (("2"
                          (name "gg"
                                "sqrt(DD) + -(2 * (s * v) + TAU * sqv(v))")
                          (("1" (replace -1)
                            (("1" (expand "horizontal_tca")
                              (("1"
                                (case "gg<=-2*(s*v)")
                                (("1"
                                  (mult-by -1 "1/sqv(v)")
                                  (("1"
                                    (hide-all-but (-1 1))
                                    (("1" (grind-reals) nil nil))
                                    nil)
                                   ("2" (cross-mult 1) nil nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (expand "gg" 1)
                                    (("2"
                                      (case "sqrt(DD)<=TAU*sqv(v)")
                                      (("1"
                                        (hide-all-but (-1 1))
                                        (("1" (grind) nil nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (lemma "sq_le")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (expand "DD" 1)
                                                  (("2"
                                                    (expand "discr" 1)
                                                    (("2"
                                                      (rewrite
                                                       "sq_plus")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (case
                                                           "sq(2 * (s * v))  - 4 * (sqv(s) * sqv(v)) <=0")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (lemma
                                                               "cauchy_schwarz")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "s"
                                                                 "v")
                                                                (("2"
                                                                  (hide-all-but
                                                                   (-1
                                                                    1))
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (assert) nil nil) ("4" (propax) nil nil))
              nil))
            nil))
          nil)
         ("2" (label "ord1" -1)
          (("2" (hide "ord1")
            (("2" (name "GI" "horizontal_WCV_tau_interval(T, s, v)")
              (("2" (replace -1)
                (("2" (assert)
                  (("2"
                    (expand "horizontal_WCV_tau_interval" :assert?
                            none)
                    (("2" (name "a" "sqv(v)")
                      (("2" (replace -1)
                        (("2" (name "b" "2*(s*v)+TAU*a")
                          (("2" (replace -1)
                            (("2" (name "c" "sqv(s) + TAU * (s * v)")
                              (("2"
                                (replace -1)
                                (("2"
                                  (name
                                   "tauin"
                                   "(IF discr(a, b, c) >= 0 THEN max(0, root(a, b, c, -1))
                                       ELSE T
                                       ENDIF)")
                                  (("1"
                                    (name
                                     "tauout"
                                     "(IF discr(a, b, c) >= 0
                                             THEN min(T, root(a, b, c, 1))
                                           ELSE 0
                                           ENDIF)")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (replace -2)
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (hide (-1 -2 -3 -4 -5))
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (split -)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (replaces
                                                     -3
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (expand
                                                       "nonempty?")
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (expand
                                                           "a"
                                                           -1)
                                                          (("1"
                                                            (lemma
                                                             "sqv_eq_0")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "horizontal_WCV")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (split -)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (expand "a")
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (lemma
                                                                 "sqv_eq_0")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (case
                                                                     "v = zero")
                                                                    (("1"
                                                                      (replaces
                                                                       -1)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replaces
                                                                       -1
                                                                       :dir
                                                                       rl)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "nonempty?")
                                                                          (("2"
                                                                            (split
                                                                             +)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "v"
                                                                                     "s"
                                                                                     "t")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             +)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "horizontal_WCV")
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "min")
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (ground)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "safe_tau")
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "t<=horizontal_tca(s,v)")
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "horizontal_tca_midpoint[DTHR]")
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "Delta[DTHR](s,v)>=0")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "Theta_D_le[DTHR]")
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "min")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "Delta_ge_0_2[DTHR]")
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   +
                                                                                                                                   "0")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (lemma
                                                                                                                     "horizontal_tca_dot_zero")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (mult-by
                                                                                                                         1
                                                                                                                         "sqv(v)")
                                                                                                                        (("2"
                                                                                                                          (hide-all-but
                                                                                                                           (-1
                                                                                                                            -2
                                                                                                                            1))
                                                                                                                          (("2"
                                                                                                                            (grind
                                                                                                                             :exclude
                                                                                                                             "horizontal_tca")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "horizontal_WCV")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "Theta_D_le[DTHR]")
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "min"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "horizontal_WCV")
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "horizontal_WCV")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (lemma
                                                                                                                     "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                                                    (("3"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "v"
                                                                                                                       "s"
                                                                                                                       "0")
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (lemma
                                                                                                                           "Delta_ge_0_2[DTHR]")
                                                                                                                          (("3"
                                                                                                                            (inst?)
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 +
                                                                                                                                 "0")
                                                                                                                                (("3"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "Delta_ge_0_2[DTHR]")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "0")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "Delta_ge_0_2[DTHR]")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (expand
                                                                                 "min"
                                                                                 1)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (ground)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "Delta_ge_0_2[DTHR]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide 2)
                                                          (("2"
                                                            (split -)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (replaces
                                                                 -2
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "nonempty?")
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (expand
                                                                         "horizontal_WCV")
                                                                        (("1"
                                                                          (case
                                                                           "v = zero")
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "sqv_eq_0")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "v")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (ground)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "sqv_increasing_after_horizontal_tca")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "v"
                                                                                       "s")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "0"
                                                                                           "t")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "horizontal_tca")
                                                                                              (("1"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "safe_tau")
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "sqv(v)")
                                                                                          (("2"
                                                                                            (mult-by
                                                                                             -1
                                                                                             "t")
                                                                                            (("2"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -2
                                                                                                -7))
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (lemma
                                                                                     "Delta_ge_0_2[DTHR]")
                                                                                    (("3"
                                                                                      (inst
                                                                                       -
                                                                                       "v"
                                                                                       "s")
                                                                                      (("3"
                                                                                        (assert)
                                                                                        (("3"
                                                                                          (inst?)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (lemma
                                                                                     "Delta_ge_0_2[DTHR]")
                                                                                    (("4"
                                                                                      (inst
                                                                                       -
                                                                                       "v"
                                                                                       "s")
                                                                                      (("4"
                                                                                        (assert)
                                                                                        (("4"
                                                                                          (inst
                                                                                           +
                                                                                           "t + tcpa(s+t*v,v)")
                                                                                          (("4"
                                                                                            (hide-all-but
                                                                                             (-1
                                                                                              1))
                                                                                            (("4"
                                                                                              (grind
                                                                                               :exclude
                                                                                               ("tcpa"
                                                                                                "sqv"))
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (lemma
                                                                 "horizontal_WCV")
                                                                (("2"
                                                                  (name
                                                                   "P"
                                                                   "LAMBDA (s,v): sqv(s)<=sq(DTHR)")
                                                                  (("2"
                                                                    (name
                                                                     "Q"
                                                                     "LAMBDA (s,v): (sqv(s + tcpa(s, v) * v) <= sq(DTHR) AND
                                                 0 <= safe_tau(s, v) AND safe_tau(s, v) <= TAU)")
                                                                    (("2"
                                                                      (case
                                                                       "NOT horizontal_WCV(safe_tau) = (LAMBDA (s,v): P(s,v) OR Q(s,v))")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("1"
                                                                          (decompose-equality
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "horizontal_WCV")
                                                                            (("1"
                                                                              (expand
                                                                               "P")
                                                                              (("1"
                                                                                (expand
                                                                                 "Q")
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         (-2
                                                                          -3))
                                                                        (("2"
                                                                          (label
                                                                           "hyp1"
                                                                           -1)
                                                                          (("2"
                                                                            (hide
                                                                             -2)
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "v = zero")
                                                                                (("1"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "NOT FORALL (t:Lookahead[0,T]): sqv(s+t*v)>sq(DTHR) IMPLIES (Q(s+t*v,v) IFF (tauin<=t AND t<=tauout))")
                                                                                    (("1"
                                                                                      (hide
                                                                                       6)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (split)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "tauin")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "tauout")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "Q")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "NOT a > 0")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "a")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "sqv_eq_0")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "quadratic_le_0")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "a"
                                                                                                                   "b"
                                                                                                                   "c"
                                                                                                                   "t")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -2
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (grind
                                                                                                                                 :exclude
                                                                                                                                 "root")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "safe_tau")
                                                                                                                            (("2"
                                                                                                                              (lift-if)
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 -)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "tau"
                                                                                                                                       -6)
                                                                                                                                      (("1"
                                                                                                                                        (cross-mult
                                                                                                                                         -6)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "a")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "b")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "c")
                                                                                                                                              (("1"
                                                                                                                                                (hide-all-but
                                                                                                                                                 (-6
                                                                                                                                                  1))
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "a")
                                                                                                                                                  (("1"
                                                                                                                                                    (grind)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "a_gt_0_discr_ge_0")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "a"
                                                                                                                     "b"
                                                                                                                     "c"
                                                                                                                     "t")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "safe_tau")
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "tau"
                                                                                                                                   -5)
                                                                                                                                  (("1"
                                                                                                                                    (cross-mult
                                                                                                                                     -)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "c")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "b")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "a")
                                                                                                                                          (("1"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-5
                                                                                                                                              1))
                                                                                                                                            (("1"
                                                                                                                                              (grind)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (ground)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "tauout")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "tauin")
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "discr(a,b,c)<0")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Q")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "horizontal_tca_le_D[DTHR]")
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "tcpa")
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "NOT horizontal_tca(s+t*v,v) = horizontal_tca(s,v)-t")
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          (("1"
                                                                                                                            (field)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide-all-but
                                                                                                                           (-1
                                                                                                                            1))
                                                                                                                          (("2"
                                                                                                                            (grind
                                                                                                                             :exclude
                                                                                                                             "horizontal_tca")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "safe_tau"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (lift-if)
                                                                                                                (("2"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "tau")
                                                                                                                    (("1"
                                                                                                                      (cross-mult
                                                                                                                       1)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (reveal
                                                                                                                     "ord1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT t<=horizontal_tca(s,v)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "c")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "b")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "a")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (case
                                                                                                                             "t = horizontal_tca(s,v)")
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "horizontal_tca_le_D[DTHR]")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "v"
                                                                                                                                 "s")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (case
                                                                                                                               "t < horizontal_tca(s,v)")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "horizontal_tca_dot_zero")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "v"
                                                                                                                                   "s")
                                                                                                                                  (("1"
                                                                                                                                    (mult-by
                                                                                                                                     -2
                                                                                                                                     "sqv(v)")
                                                                                                                                    (("1"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-1
                                                                                                                                        -2
                                                                                                                                        2))
                                                                                                                                      (("1"
                                                                                                                                        (grind
                                                                                                                                         :exclude
                                                                                                                                         "horizontal_tca")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (lemma
                                                                                                                                       "sqv_eq_0")
                                                                                                                                      (("2"
                                                                                                                                        (inst?)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (expand
                                                                                                               "safe_tau"
                                                                                                               1)
                                                                                                              (("3"
                                                                                                                (lift-if)
                                                                                                                (("3"
                                                                                                                  (ground)
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "tau"
                                                                                                                     1)
                                                                                                                    (("3"
                                                                                                                      (cross-mult
                                                                                                                       1)
                                                                                                                      (("3"
                                                                                                                        (lemma
                                                                                                                         "quadratic_le_0")
                                                                                                                        (("3"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "a"
                                                                                                                           "b"
                                                                                                                           "c"
                                                                                                                           "t")
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (flatten)
                                                                                                                              (("3"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "c")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "b")
                                                                                                                                    (("3"
                                                                                                                                      (expand
                                                                                                                                       "a")
                                                                                                                                      (("3"
                                                                                                                                        (split)
                                                                                                                                        (("1"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            1))
                                                                                                                                          (("1"
                                                                                                                                            (grind)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (lemma
                                                                                                                                           "sqv_eq_0")
                                                                                                                                          (("2"
                                                                                                                                            (inst?)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (label
                                                                                       "Qdef"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         "Qdef")
                                                                                        (("2"
                                                                                          (name
                                                                                           "Din"
                                                                                           "max(0, Theta_D[DTHR](s, v, -1))")
                                                                                          (("2"
                                                                                            (name
                                                                                             "Dout"
                                                                                             "min(T, Theta_D[DTHR](s, v, 1))")
                                                                                            (("2"
                                                                                              (replaces
                                                                                               -1)
                                                                                              (("2"
                                                                                                (replaces
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "NOT FORALL (t:Lookahead[0,T]):P(s+t*v,v) IFF (Din<=t AND t<=Dout)")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     (-1
                                                                                                      6))
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "P")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "Din")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Dout")
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "v"
                                                                                                                 "s"
                                                                                                                 "t")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (grind
                                                                                                                     :exclude
                                                                                                                     ("sqv"
                                                                                                                      "Theta_D"
                                                                                                                      "Delta"))
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (label
                                                                                                     "Pdef"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       "Pdef")
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -3
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "nonempty?")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (skeep)
                                                                                                                  (("1"
                                                                                                                    (reveal
                                                                                                                     "Pdef")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "t")
                                                                                                                      (("1"
                                                                                                                        (reveal
                                                                                                                         "Qdef")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "t")
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "P"
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "P"
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (split
                                                                                                                     -)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (replaces
                                                                                                                         -1
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (reveal
                                                                                                                             "Pdef")
                                                                                                                            (("2"
                                                                                                                              (reveal
                                                                                                                               "Qdef")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "nonempty?")
                                                                                                                                (("2"
                                                                                                                                  (skeep)
                                                                                                                                  (("2"
                                                                                                                                    (split
                                                                                                                                     +)
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "t")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "t")
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         "Pdef"
                                                                                                                                         "t")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (split
                                                                                                                     -)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (replaces
                                                                                                                         -2
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "nonempty?")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (skeep)
                                                                                                                              (("1"
                                                                                                                                (split)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (reveal
                                                                                                                                     "Pdef")
                                                                                                                                    (("1"
                                                                                                                                      (reveal
                                                                                                                                       "Qdef")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "t")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "t")
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("3"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("4"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("4"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (reveal
                                                                                                                                     "Pdef")
                                                                                                                                    (("2"
                                                                                                                                      (reveal
                                                                                                                                       "Qdef")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "t")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "t")
                                                                                                                                          (("2"
                                                                                                                                            (ground)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("3"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("4"
                                                                                                                                              (expand
                                                                                                                                               "P"
                                                                                                                                               2)
                                                                                                                                              (("4"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "NOT tauout<=Dout")
                                                                                                                        (("1"
                                                                                                                          (reveal
                                                                                                                           "ord1")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "tauout"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "Dout"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "c")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "b")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "a")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (lift-if)
                                                                                                                                          (("1"
                                                                                                                                            (split
                                                                                                                                             +)
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "min"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("1"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("1"
                                                                                                                                                          (lift-if)
                                                                                                                                                          (("1"
                                                                                                                                                            (ground)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (hide
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "min"
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("2"
                                                                                                                                                        (ground)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (replaces
                                                                                                                           -2
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "nonempty?")
                                                                                                                              (("2"
                                                                                                                                (reveal
                                                                                                                                 "Qdef")
                                                                                                                                (("2"
                                                                                                                                  (reveal
                                                                                                                                   "Qdef")
                                                                                                                                  (("2"
                                                                                                                                    (skeep)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "t")
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (reveal
                                                                                                                                           "Pdef")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "t")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "P")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "min")
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (expand "a" -2)
                                      (("2"
                                        (lemma "sqv_eq_0")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (replaces -1)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (lift-if)
                                                  (("2"
                                                    (split -)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (replaces
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "nonempty?")
                                                            (("1"
                                                              (expand
                                                               "horizontal_WCV")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (replaces
                                                         -1
                                                         :dir
                                                         rl)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "nonempty?")
                                                            (("2"
                                                              (skeep -)
                                                              (("2"
                                                                (expand
                                                                 "horizontal_WCV")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (flatten)
                                    (("3"
                                      (lemma "sqv_eq_0")
                                      (("3"
                                        (inst - "v")
                                        (("3"
                                          (assert)
                                          (("3"
                                            (replaces -1)
                                            (("3"
                                              (assert)
                                              (("3"
                                                (lift-if)
                                                (("3"
                                                  (split -)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (replaces
                                                       -2
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "nonempty?")
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (expand
                                                               "horizontal_WCV")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (replaces
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "nonempty?")
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (expand
                                                               "horizontal_WCV")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (hide 2)
          (("3" (flatten)
            (("3" (lemma "sqv_eq_0")
              (("3" (inst?) (("3" (assert) nil nil)) nil)) nil))
            nil))
          nil)
         ("4" (hide 2)
          (("4" (flatten)
            (("4" (lemma "sqv_eq_0")
              (("4" (inst?) (("4" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Lookahead type-eq-decl nil Lookahead ACCoRD)
    (horizontal_WCV_tau_interval const-decl
     "[# entry: Lookahead[0, T], exit: Lookahead[0, T] #]"
     horizontal_WCV_tau nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (timevar? const-decl "bool" timevars nil)
    (TimeVar type-eq-decl nil timevars nil) nil nil nil nil
    (div_mult_neg_le2 formula-decl nil real_props nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (horizontal_tca_le_D formula-decl nil horizontal ACCoRD)
    (both_sides_times1 formula-decl nil real_props nil)
    (div_cancel2 formula-decl nil real_props nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil) nil
    (a_gt_0_discr_ge_0 formula-decl nil quadratic reals)
    (tau const-decl "real" timevars nil) nil nil
    (negreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (div_mult_neg_le1 formula-decl nil real_props nil)
    (quadratic_le_0 formula-decl nil quadratic reals) nil
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (div_mult_pos_ge2 formula-decl nil real_props nil)
    (sqv_increasing_after_horizontal_tca formula-decl nil definitions
     ACCoRD)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (tcpa const-decl "real" timevars nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (not_horiz_sep_inside_closed_Theta formula-decl nil horizontal
     ACCoRD)
    (scal_0 formula-decl nil vectors_2D vectors)
    (Delta_ge_0_2 formula-decl nil horizontal ACCoRD)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (both_sides_times_pos_le1 formula-decl nil real_props nil)
    (horizontal_tca_dot_zero formula-decl nil definitions ACCoRD)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (tcpa_timevar name-judgement "TimeVar" timevars nil)
    (safe_tau const-decl "real" horizontal_WCV_tau nil)
    (nonempty? const-decl "bool" EntryExit_interval nil) nil
    (horizontal_WCV const-decl "bool" horizontal_WCV nil)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (safe_tau_pre_timevar name-judgement "(pre_timevar?)"
     horizontal_WCV_tau nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (TRUE const-decl "bool" booleans nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (horizontal_tca_midpoint formula-decl nil horizontal ACCoRD)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (Theta_D_le formula-decl nil horizontal ACCoRD)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (sq_le formula-decl nil sq reals)
    (sq_sqrt formula-decl nil sqrt reals)
    (sq_plus formula-decl nil sq reals)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sq const-decl "nonneg_real" sq reals)
    (cauchy_schwarz formula-decl nil vectors_2D vectors)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    nil nil
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    nil
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (DTHR formal-const-decl "posreal" horizontal_WCV_tau nil)
    (Delta const-decl "real" horizontal ACCoRD)
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (discr const-decl "real" quadratic reals)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D vectors)
    (TAU formal-const-decl "nnreal" horizontal_WCV_tau nil)
    (<= const-decl "bool" reals nil)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (horizontal_tca const-decl "real" definitions ACCoRD)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign reals)
    (Theta_D const-decl "real" horizontal ACCoRD)
    (root const-decl "real" quadratic reals)
    (horizontal_interval_sound? const-decl "bool" horizontal_WCV nil))
   nil)
  (horizontal_WCV_tau_interval_sound-1 nil 3630321195
   ("" (expand "horizontal_interval_sound?")
    (("" (skeep)
      (("" (split)
        (("1" (flatten)
          (("1" (name "GI" "horizontal_WCV_tau_interval(T, s, v)")
            (("1" (replace -1)
              (("1" (skeep)
                (("1" (assert)
                  (("1" (expand "horizontal_WCV_tau_interval")
                    (("1" (lift-if)
                      (("1" (split -)
                        (("1" (flatten)
                          (("1" (replaces -3 :dir rl)
                            (("1" (assert)
                              (("1"
                                (lemma "sqv_eq_0")
                                (("1"
                                  (inst?)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "horizontal_WCV")
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (split -)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1"
                                  (assert)
                                  (("1"
                                    (replaces -2 :dir rl)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "nonempty?")
                                              (("1"
                                                (expand "min")
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (ground)
                                                    (("1"
                                                      (expand
                                                       "horizontal_WCV")
                                                      (("1"
                                                        (split -)
                                                        (("1"
                                                          (lemma
                                                           "horizontal_sep_outside_Theta[DTHR]")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "v"
                                                             "s"
                                                             "t")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lemma
                                                                 "Delta_ge_0_2[DTHR]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst?)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "safe_tau")
                                                              (("2"
                                                                (case
                                                                 "(s+t*v)*v>=0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   (-2
                                                                    -3))
                                                                  (("2"
                                                                    (lemma
                                                                     "Theta_D_horizontal_dir[DTHR]")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (mult-by
                                                                             -6
                                                                             "sqv(v)")
                                                                            (("1"
                                                                              (grind
                                                                               :exclude
                                                                               "Theta_D")
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (lemma
                                                                               "Delta_ge_0_2[DTHR]")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "t+tcpa(s+t*v,v)")
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-2
                                                                                        1))
                                                                                      (("2"
                                                                                        (grind
                                                                                         :exclude
                                                                                         ("sqv"
                                                                                          "tcpa"))
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (split
                                                                               1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "Delta_ge_0_2[DTHR]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       +
                                                                                       "t+tcpa(s+t*v,v)")
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          1))
                                                                                        (("2"
                                                                                          (grind
                                                                                           :exclude
                                                                                           ("sqv"
                                                                                            "tcpa"))
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (split -)
                                            (("1"
                                              (replaces -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "horizontal_WCV")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "min")
                                              (("2"
                                                (lift-if)
                                                (("2"
                                                  (expand "nonempty?")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (ground)
                                                      (("1"
                                                        (lemma
                                                         "Theta_D_on_D[DTHR]")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (split -)
                                                              (("1"
                                                                (replace
                                                                 -5
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "horizontal_WCV")
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "Delta_ge_0_2[DTHR]")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (lemma
                                                         "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "v"
                                                           "s"
                                                           "t")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split -)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "Theta_D_le[DTHR]")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (hide
                                                                             -3)
                                                                            (("1"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (expand
                                                                                 "horizontal_WCV")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "v"
                                                                                   "s"
                                                                                   "0")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "Delta_ge_0_2[DTHR]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             +
                                                                                             "0")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (lemma
                                                                         "Delta_ge_0_2[DTHR]")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "0")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "Delta_ge_0_2[DTHR]")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (split -)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (replaces -2 :dir rl)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "nonempty?")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (split -)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -3 :dir rl)
                                              (("1"
                                                (expand "nonempty?")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (split -)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (split -)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (replaces
                                                       -2
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (expand
                                                         "nonempty?")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (hide 2)
                                                        (("2"
                                                          (hide 6)
                                                          (("2"
                                                            (split +)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (replace
                                                                 -3
                                                                 -1
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split
                                                                     -)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "max"
                                                                         -1)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (expand
                                                                               "horizontal_WCV")
                                                                              (("1"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "v"
                                                                                     "s"
                                                                                     "t")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "safe_tau"
                                                                                     -3)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "tau"
                                                                                           -2)
                                                                                          (("1"
                                                                                            (cross-mult
                                                                                             -2)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "quadratic_le_0")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 _
                                                                                                 _
                                                                                                 _
                                                                                                 "t")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "max")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "min")
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (ground)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (-2
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "safe_tau"
                                                                                           -3)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "min"
                                                                       -1)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (ground)
                                                                          (("2"
                                                                            (lemma
                                                                             "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "v"
                                                                               "s"
                                                                               "t")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "horizontal_WCV")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "safe_tau"
                                                                                         -5)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "tau"
                                                                                               -2)
                                                                                              (("1"
                                                                                                (cross-mult
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "quadratic_le_0")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     _
                                                                                                     _
                                                                                                     _
                                                                                                     "t")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "max")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "min")
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 (-2
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "safe_tau"
                                                                                               -5)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (replace
                                                                 -2
                                                                 -1
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       "max"
                                                                       -1)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "v"
                                                                                   "s"
                                                                                   "t")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "horizontal_WCV")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "v"
                                                                                     "s"
                                                                                     "0")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "min"
                                                                       -1)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (lemma
                                                                               "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "v"
                                                                                 "s"
                                                                                 "t")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "horizontal_WCV")
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (lemma
                                                                               "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "v"
                                                                                 "s"
                                                                                 "T")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "horizontal_WCV")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (hide 2)
                                                  (("2"
                                                    (split -)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (hide 6)
                                                        (("1"
                                                          (case
                                                           "NOT root(sqv(v), 2 * (s * v) + TAU * sqv(v), sqv(s) + TAU * (s * v),
                1)<=horizontal_tca(s,v)")
                                                          (("1"
                                                            (expand
                                                             "root"
                                                             1)
                                                            (("1"
                                                              (name
                                                               "DD"
                                                               "discr(sqv(v), 2 * (s * v) + TAU * sqv(v),
                                                    sqv(s) + TAU * (s * v))")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (name
                                                                   "gg"
                                                                   "sqrt(DD) + -(2 * (s * v) + TAU * sqv(v))")
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       "horizontal_tca")
                                                                      (("1"
                                                                        (case
                                                                         "gg<=-2*(s*v)")
                                                                        (("1"
                                                                          (mult-by
                                                                           -1
                                                                           "1/sqv(v)")
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-1
                                                                              1))
                                                                            (("1"
                                                                              (grind-reals)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (cross-mult
                                                                             1)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (expand
                                                                             "gg"
                                                                             1)
                                                                            (("2"
                                                                              (case
                                                                               "sqrt(DD)<=TAU*sqv(v)")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  1))
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "sq_le")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (hide
                                                                                         2)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "DD"
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "discr"
                                                                                             1)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "sq_plus")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "sq(2 * (s * v))  - 4 * (sqv(s) * sqv(v)) <=0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "cauchy_schwarz")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "s"
                                                                                                         "v")
                                                                                                        (("2"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (label
                                                             "ord1"
                                                             -1)
                                                            (("2"
                                                              (hide
                                                               "ord1")
                                                              (("2"
                                                                (split
                                                                 +)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (replace
                                                                     -4
                                                                     -1
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "quadratic_le_0")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           _
                                                                           _
                                                                           _
                                                                           "t")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -2)
                                                                                (("1"
                                                                                  (expand
                                                                                   "max"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -2
                                                                                           :dir
                                                                                           rl)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "nonempty?")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -3)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "horizontal_WCV")
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "v"
                                                                                                         "s"
                                                                                                         "t")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (copy
                                                                                                               -6)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "max"
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (split
                                                                                                                     -)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "min"
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "min"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "safe_tau"
                                                                                                         -3)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "tau"
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (cross-mult
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-2
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "safe_tau"
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "min"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (split
                                                                                           -)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -3)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "horizontal_WCV")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "v"
                                                                                                           "s"
                                                                                                           "t")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (copy
                                                                                                                 -6)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "max"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "min"
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "safe_tau"
                                                                                                           -)
                                                                                                          (("2"
                                                                                                            (lift-if)
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               -)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "tau"
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (cross-mult
                                                                                                                       -4)
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         (-4
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (replaces
                                                                     -3
                                                                     -1
                                                                     :dir
                                                                     rl)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (expand
                                                                           "max"
                                                                           -1)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              (("1"
                                                                                (lemma
                                                                                 "quadratic_le_0")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   _
                                                                                   _
                                                                                   _
                                                                                   "t")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (split
                                                                                             -)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "horizontal_WCV")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     2)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "tcpa"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "Delta_eq[DTHR]")
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "horizontal_tca_le_D[DTHR]")
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "safe_tau"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "tau")
                                                                                                              (("1"
                                                                                                                (cross-mult
                                                                                                                 1)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "sqv(s+t*v)>0")
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 1
                                                                                                                 "TAU")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   (-1
                                                                                                                    -2
                                                                                                                    1))
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (expand
                                                                                                       "safe_tau"
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (lift-if)
                                                                                                        (("3"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "tau"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (cross-mult
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-2
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "sqv_eq_0")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "horizontal_WCV")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "tcpa")
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (ground)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "horizontal_tca_le_D[DTHR]")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "v"
                                                                                               "s+t*v")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "Delta_eq[DTHR]")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "safe_tau"
                                                                                       1)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (split
                                                                                           +)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "tau"
                                                                                               1)
                                                                                              (("1"
                                                                                                (cross-mult
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (replaces
                                                                                               -1)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "safe_tau"
                                                                                           1)
                                                                                          (("3"
                                                                                            (expand
                                                                                             "tau"
                                                                                             1)
                                                                                            (("3"
                                                                                              (cross-mult
                                                                                               1)
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "min"
                                                                                                 4)
                                                                                                (("3"
                                                                                                  (lift-if)
                                                                                                  (("3"
                                                                                                    (ground)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "quadratic_le_0")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         _
                                                                                                         _
                                                                                                         _
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "sqv_eq_0")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (replaces
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "quadratic_le_0")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         _
                                                                                                         _
                                                                                                         _
                                                                                                         "0")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "sqv_eq_0")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "min"
                                                                           -1)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "horizontal_WCV")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (split
                                                                                         +)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "tcpa")
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (ground)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "horizontal_tca_le_D[DTHR]")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "v"
                                                                                                   "s+t*v")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "Delta_eq"
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replaces
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "safe_tau"
                                                                                           1)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (ground)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "tau"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (reveal
                                                                                                 "ord1")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -3
                                                                                                   -1
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "t < horizontal_tca(s,v)")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "horizontal_tca_dot_zero")
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (mult-by
                                                                                                             -2
                                                                                                             "sqv(v)")
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                -2
                                                                                                                1))
                                                                                                              (("1"
                                                                                                                (grind
                                                                                                                 :exclude
                                                                                                                 "horizontal_tca")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "sqv_eq_0")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "v")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "horizontal_tca_le_D[DTHR]")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "safe_tau"
                                                                                           1)
                                                                                          (("3"
                                                                                            (lift-if)
                                                                                            (("3"
                                                                                              (split
                                                                                               +)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "tau"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (cross-mult
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "quadratic_le_0")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         _
                                                                                                         _
                                                                                                         _
                                                                                                         "t")
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (lemma
                                                                                                                     "sqv_eq_0")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (replaces
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "horizontal_WCV")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (split
                                                                                         +)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "tcpa"
                                                                                           1)
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (split
                                                                                               +)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "horizontal_tca_le_D[DTHR]")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "Delta_eq"
                                                                                                         1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "safe_tau"
                                                                                           1)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (split
                                                                                               +)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "tau"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (cross-mult
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "min"
                                                                                                     +)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         "ord1")
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "NOT t<=horizontal_tca(s,v)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (case
                                                                                                             "t<horizontal_tca(s,v)")
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -1
                                                                                                               "sqv(v)")
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "horizontal_tca_dot_zero")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      -2
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (grind
                                                                                                                       :exclude
                                                                                                                       "horizontal_tca")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (lemma
                                                                                                                 "sqv_eq_0")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replaces
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "horizontal_tca_le_D[DTHR]")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "safe_tau"
                                                                                           1)
                                                                                          (("3"
                                                                                            (lift-if)
                                                                                            (("3"
                                                                                              (split
                                                                                               1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "min"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "quadratic_le_0")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         _
                                                                                                         _
                                                                                                         _
                                                                                                         "t")
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "tau"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (cross-mult
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (lemma
                                                                                                                     "sqv_eq_0")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (replaces
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (case
                                                         "NOT root(sqv(v), 2 * (s * v) + TAU * sqv(v), sqv(s) + TAU * (s * v),
                                     1)<=horizontal_tca(s,v)")
                                                        (("1"
                                                          (expand
                                                           "root"
                                                           1)
                                                          (("1"
                                                            (name
                                                             "DD"
                                                             "discr(sqv(v), 2 * (s * v) + TAU * sqv(v),
                                                                           sqv(s) + TAU * (s * v))")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (name
                                                                 "gg"
                                                                 "sqrt(DD) + -(2 * (s * v) + TAU * sqv(v))")
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "horizontal_tca")
                                                                    (("1"
                                                                      (case
                                                                       "gg<=-2*(s*v)")
                                                                      (("1"
                                                                        (mult-by
                                                                         -1
                                                                         "1/sqv(v)")
                                                                        (("1"
                                                                          (hide-all-but
                                                                           (-1
                                                                            1))
                                                                          (("1"
                                                                            (grind-reals)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (cross-mult
                                                                           1)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (expand
                                                                           "gg"
                                                                           1)
                                                                          (("2"
                                                                            (case
                                                                             "sqrt(DD)<=TAU*sqv(v)")
                                                                            (("1"
                                                                              (hide-all-but
                                                                               (-1
                                                                                1))
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (lemma
                                                                                 "sq_le")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (hide
                                                                                       2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "DD"
                                                                                         1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "discr"
                                                                                           1)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "sq_plus")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sq(2 * (s * v))  - 4 * (sqv(s) * sqv(v)) <=0")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "cauchy_schwarz")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "s"
                                                                                                       "v")
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 7)
                                                          (("2"
                                                            (split 7)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (replaces
                                                                 -4
                                                                 -1
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       "min"
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "max"
                                                                         -1)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (ground)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "horizontal_WCV")
                                                                                        (("1"
                                                                                          (case
                                                                                           "sqv(s+t*v)<=sq(DTHR)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -6)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "safe_tau")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     -)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "tau"
                                                                                                           -8)
                                                                                                          (("1"
                                                                                                            (cross-mult
                                                                                                             -8)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "quadratic_le_0")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 _
                                                                                                                 _
                                                                                                                 _
                                                                                                                 "t")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         (-8
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "horizontal_WCV")
                                                                                        (("2"
                                                                                          (case
                                                                                           "sqv(s+t*v)<=sq(DTHR)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -5)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "v"
                                                                                                   "s"
                                                                                                   "t")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "quadratic_le_0")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   _
                                                                                                   _
                                                                                                   _
                                                                                                   "t")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "safe_tau")
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "tau"
                                                                                                                   -7)
                                                                                                                  (("1"
                                                                                                                    (cross-mult
                                                                                                                     -)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-7
                                                                                                                        1))
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "min"
                                                                       -1)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "horizontal_WCV")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "horizontal_tca_midpoint[DTHR]")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "not_horiz_sep_inside_closed_Theta[DTHR]")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "quadratic_le_0")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               _
                                                                                               _
                                                                                               _
                                                                                               "t")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "safe_tau")
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "tau"
                                                                                                               -4)
                                                                                                              (("1"
                                                                                                                (cross-mult
                                                                                                                 -)
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   (-4
                                                                                                                    1))
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (replaces
                                                                 -3
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (postpone)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (postpone) nil nil))
        nil))
      nil))
    nil)
   nil shostak)))

